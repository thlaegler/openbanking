<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
targetNamespace="http://laegler.com/openbanking/soap/service" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema xmlns:tns="http://laegler.com/openbanking/soap/model" targetNamespace="http://laegler.com/openbanking/soap/model" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="OBAccountPaymentServiceProvidersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBAccountPaymentServiceProviders">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthorisationServerRequestSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="AutoRegistrationSupported" type="xs:boolean" />
          <xs:element minOccurs="0" name="BaseApiDNSUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyLogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyName">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DeveloperPortalUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EISCDId">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OpenIDConfigEndPointUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ParentAuthorisationServerId">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="22" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PayloadSigningCertLocation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfService">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthorisationServerSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="AutoRegistrationSupported" type="xs:boolean" />
          <xs:element minOccurs="0" name="BaseApiDNSUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyDescription">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyLogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyName">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DeveloperPortalUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EISCDId">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Id">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="22" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OpenIDConfigEndPointUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ParentAuthorisationServerId">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="22" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PayloadSigningCertLocation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfService">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertificateOrKeyAssociationSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="associate" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertificateOrKeyGetSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="isFalse">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="e">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="expiryDateTime" type="xs:dateTime" />
          <xs:element minOccurs="0" name="keyType">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="kid">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="kty">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="obOrganisationId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB organisation Id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="softwareStatementId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement Id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="use">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="x5c">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="x5t">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="x5tS256">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="x5u">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertificateValidationResponseSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="tns:Data" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertificatesOrKeysGetSchema">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="keys" type="tns:CertificateOrKeyGetSchema" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContactSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="EmailAddress">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="18" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PhoneNumber">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="18" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Enrol201CreatedResponseSchema">
        <xs:annotation>
          <xs:documentation>A JSON object DCR response returned when client gets created.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Client ID assigned by Open Banking Directory</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="18" />
                <xs:minLength value="18" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_id_issued_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ORG name ar per eIDAS certificate</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Client secret generated by Open Banking Directory</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret_expires_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI string of a web page providing information about the client</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="contacts">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contacts to departments responsible for the client</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="grant_types">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>client_credentials</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="jwks" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Client's JSON Web Key Set [RFC7517] document value</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jwks_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI string referencing the client's JSON Web Key (JWK) Set</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="logo_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ob_org_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Organisation ID assigned by Open Banking   Directory</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="18" />
                <xs:minLength value="18" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="policy_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI string that points to a human-readable privacy policy document</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Array of Redirection URI values used by the Client, as supplied by the client</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="response_types">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>client_credentials</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="scope">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ASPSPFullAccess</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>UUID4 string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Client-supplied software version string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="token_endpoint_auth_method">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>client_secret_post</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tos_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI string that points to a human-readable terms of service document for the client</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Enrol400BadRequestResponseSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" type="tns:Error">
            <xs:annotation>
              <xs:documentation>Error type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="error_description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A more detailed error description</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EnrolSchema">
        <xs:sequence>
          <xs:element minOccurs="1" name="client_name">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="client_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="contacts">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="grant_types">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="jwks" type="xs:anyType" />
          <xs:element minOccurs="1" name="jwks_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="logo_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="policy_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="response_types">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="scope">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_version">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_endpoint_auth_method">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="tos_uri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatementCreateSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="ClientName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement client name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement RFC-3986-compliant client URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement description</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement RFC-3986-compliant logo URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OnBehalfOfObOrganisation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A reference to fourth party organisation resource on the OB Directory if the registering TPP is acting on behalf of another</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PolicyUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement RFC-3986-compliant policy URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RedirectUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement redirect URIs</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Roles">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The list of Software Statement roles</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfServiceUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement terms of service RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement version as provided by the organisation's PTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatementSchema">
        <xs:sequence>
          <xs:element minOccurs="0" name="Active" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Software Statement active/inactive flag</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ClientId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement client Id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="22" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement client name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement client RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement description</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement Id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="22" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement logo RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Mode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement mode</xs:documentation>
              </xs:annotation>
              <xs:restriction base="tns:Mode">
                <xs:maxLength value="8" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ObClientCreated" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Client created flag</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OnBehalfOfObOrganisation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A reference to fourth party organisation resource on the OB Directory if the registering TPP is acting on behalf of another</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PolicyUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement policy RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RedirectUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement redirect RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Roles">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The list of Software Statement roles</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SigningKeyIds">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The list of signing certificate Ids</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfServiceUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The Software Statement terms of service RFC-3986-compliant URI</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TransportKeyIds">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The list of transport certificate Ids</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Software Statement version as provided by the organisation's PTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatementStateSchema">
        <xs:annotation>
          <xs:documentation>Software Statement State</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Active" type="tns:Active" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ATMResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="data" type="tns:Data1" />
          <xs:element minOccurs="1" name="meta" type="tns:Metadata5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BranchCurrentAccountResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="data" type="tns:Data2" />
          <xs:element minOccurs="1" name="meta" type="tns:Metadata5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BranchResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="data" type="tns:Data3" />
          <xs:element minOccurs="1" name="meta" type="tns:Metadata5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CommercialCreditCardResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="data" type="tns:Data4" />
          <xs:element minOccurs="1" name="meta" type="tns:Metadata5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ErrorResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="detail">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A detailed, human readable message.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="scimType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A SCIM detailed error keyword.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The HTTP status code (see Section 6 [RFC7231]) expressed as a JSON String.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Error503Object">
        <xs:sequence>
          <xs:element minOccurs="1" default="The service is temporarily unavailable." name="description">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" default="503" name="status">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" default="Service temporarily unavailable" name="title">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Errorobject">
        <xs:sequence>
          <xs:element minOccurs="1" name="description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Further details describing the error</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This corresponds to the HTTP status code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="title">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A short title of the type of error</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Links">
        <xs:annotation>
          <xs:documentation>Links relevant to the payload</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="First">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Last">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Next">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Prev">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Self">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MetaData">
        <xs:annotation>
          <xs:documentation>Meta Data relevant to the payload</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstAvailableDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LastAvailableDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TotalPages">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metadata5">
        <xs:sequence>
          <xs:element minOccurs="1" default="Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions" name="Agreement">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="LastUpdated" type="xs:dateTime" />
          <xs:element minOccurs="1" default="http://www.openbanking.org.uk/open-licence" name="License">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Open Banking License</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" default="http://www.openbanking.org.uk/terms" name="TermsOfUse">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Open Banking Terms of Use</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TotalResults">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OB_FeeCategory1Code">
        <xs:annotation>
          <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FCOT" />
          <xs:enumeration value="FCRE" />
          <xs:enumeration value="FCSV" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_FeeFrequency1Code_0">
        <xs:annotation>
          <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEAC" />
          <xs:enumeration value="FEAO" />
          <xs:enumeration value="FECP" />
          <xs:enumeration value="FEDA" />
          <xs:enumeration value="FEHO" />
          <xs:enumeration value="FEI" />
          <xs:enumeration value="FEMO" />
          <xs:enumeration value="FEOA" />
          <xs:enumeration value="FEOT" />
          <xs:enumeration value="FEPC" />
          <xs:enumeration value="FEPH" />
          <xs:enumeration value="FEPO" />
          <xs:enumeration value="FEPS" />
          <xs:enumeration value="FEPT" />
          <xs:enumeration value="FEPTA" />
          <xs:enumeration value="FEPTP" />
          <xs:enumeration value="FEQU" />
          <xs:enumeration value="FESM" />
          <xs:enumeration value="FEST" />
          <xs:enumeration value="FEWE" />
          <xs:enumeration value="FEYE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_FeeFrequency1Code_1">
        <xs:annotation>
          <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEAC" />
          <xs:enumeration value="FEAO" />
          <xs:enumeration value="FECP" />
          <xs:enumeration value="FEDA" />
          <xs:enumeration value="FEHO" />
          <xs:enumeration value="FEI" />
          <xs:enumeration value="FEMO" />
          <xs:enumeration value="FEOA" />
          <xs:enumeration value="FEOT" />
          <xs:enumeration value="FEPC" />
          <xs:enumeration value="FEPH" />
          <xs:enumeration value="FEPO" />
          <xs:enumeration value="FEPS" />
          <xs:enumeration value="FEPT" />
          <xs:enumeration value="FEPTA" />
          <xs:enumeration value="FEPTP" />
          <xs:enumeration value="FEQU" />
          <xs:enumeration value="FESM" />
          <xs:enumeration value="FEST" />
          <xs:enumeration value="FEWE" />
          <xs:enumeration value="FEYE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_FeeFrequency1Code_2">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEAC" />
          <xs:enumeration value="FEAO" />
          <xs:enumeration value="FECP" />
          <xs:enumeration value="FEDA" />
          <xs:enumeration value="FEHO" />
          <xs:enumeration value="FEI" />
          <xs:enumeration value="FEMO" />
          <xs:enumeration value="FEOA" />
          <xs:enumeration value="FEOT" />
          <xs:enumeration value="FEPC" />
          <xs:enumeration value="FEPH" />
          <xs:enumeration value="FEPO" />
          <xs:enumeration value="FEPS" />
          <xs:enumeration value="FEPT" />
          <xs:enumeration value="FEPTA" />
          <xs:enumeration value="FEPTP" />
          <xs:enumeration value="FEQU" />
          <xs:enumeration value="FESM" />
          <xs:enumeration value="FEST" />
          <xs:enumeration value="FEWE" />
          <xs:enumeration value="FEYE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_FeeFrequency1Code_3">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEAC" />
          <xs:enumeration value="FEAO" />
          <xs:enumeration value="FECP" />
          <xs:enumeration value="FEDA" />
          <xs:enumeration value="FEHO" />
          <xs:enumeration value="FEI" />
          <xs:enumeration value="FEMO" />
          <xs:enumeration value="FEOA" />
          <xs:enumeration value="FEOT" />
          <xs:enumeration value="FEPC" />
          <xs:enumeration value="FEPH" />
          <xs:enumeration value="FEPO" />
          <xs:enumeration value="FEPS" />
          <xs:enumeration value="FEPT" />
          <xs:enumeration value="FEPTA" />
          <xs:enumeration value="FEPTP" />
          <xs:enumeration value="FEQU" />
          <xs:enumeration value="FESM" />
          <xs:enumeration value="FEST" />
          <xs:enumeration value="FEWE" />
          <xs:enumeration value="FEYE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_FeeFrequency1Code_4">
        <xs:annotation>
          <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEAC" />
          <xs:enumeration value="FEAO" />
          <xs:enumeration value="FECP" />
          <xs:enumeration value="FEDA" />
          <xs:enumeration value="FEHO" />
          <xs:enumeration value="FEI" />
          <xs:enumeration value="FEMO" />
          <xs:enumeration value="FEOA" />
          <xs:enumeration value="FEOT" />
          <xs:enumeration value="FEPC" />
          <xs:enumeration value="FEPH" />
          <xs:enumeration value="FEPO" />
          <xs:enumeration value="FEPS" />
          <xs:enumeration value="FEPT" />
          <xs:enumeration value="FEPTA" />
          <xs:enumeration value="FEPTP" />
          <xs:enumeration value="FEQU" />
          <xs:enumeration value="FESM" />
          <xs:enumeration value="FEST" />
          <xs:enumeration value="FEWE" />
          <xs:enumeration value="FEYE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_FeeType1Code">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEPF" />
          <xs:enumeration value="FTOT" />
          <xs:enumeration value="FYAF" />
          <xs:enumeration value="FYAM" />
          <xs:enumeration value="FYAQ" />
          <xs:enumeration value="FYCP" />
          <xs:enumeration value="FYDB" />
          <xs:enumeration value="FYMI" />
          <xs:enumeration value="FYXX" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_InterestCalculationMethod1Code">
        <xs:annotation>
          <xs:documentation>Methods of calculating interest</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ITCO" />
          <xs:enumeration value="ITOT" />
          <xs:enumeration value="ITSI" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_InterestFixedVariableType1Code">
        <xs:annotation>
          <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INFI" />
          <xs:enumeration value="INVA" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_InterestRateType1Code_0">
        <xs:annotation>
          <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBB" />
          <xs:enumeration value="INFR" />
          <xs:enumeration value="INGR" />
          <xs:enumeration value="INLR" />
          <xs:enumeration value="INNE" />
          <xs:enumeration value="INOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_InterestRateType1Code_1">
        <xs:annotation>
          <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBB" />
          <xs:enumeration value="INFR" />
          <xs:enumeration value="INGR" />
          <xs:enumeration value="INLR" />
          <xs:enumeration value="INNE" />
          <xs:enumeration value="INOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_MinMaxType1Code">
        <xs:annotation>
          <xs:documentation>Min Max type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FMMN" />
          <xs:enumeration value="FMMX" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OB_OtherCodeType1_0">
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_1">
        <xs:annotation>
          <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_2">
        <xs:annotation>
          <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_3">
        <xs:annotation>
          <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_4">
        <xs:annotation>
          <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_5">
        <xs:annotation>
          <xs:documentation>Other fee rate type which is not in the standard rate type list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_6">
        <xs:annotation>
          <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_7">
        <xs:annotation>
          <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherCodeType1_8">
        <xs:annotation>
          <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OB_OtherFeeChargeDetailType">
        <xs:annotation>
          <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:OB_FeeCategory1Code">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OB_OverdraftFeeType1Code">
        <xs:annotation>
          <xs:documentation>Overdraft fee type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FBAO" />
          <xs:enumeration value="FBAR" />
          <xs:enumeration value="FBEB" />
          <xs:enumeration value="FBIT" />
          <xs:enumeration value="FBOR" />
          <xs:enumeration value="FBOS" />
          <xs:enumeration value="FBSC" />
          <xs:enumeration value="FBTO" />
          <xs:enumeration value="FBUB" />
          <xs:enumeration value="FBUT" />
          <xs:enumeration value="FTOT" />
          <xs:enumeration value="FTUT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OB_Period1Code">
        <xs:annotation>
          <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PACT" />
          <xs:enumeration value="PDAY" />
          <xs:enumeration value="PHYR" />
          <xs:enumeration value="PMTH" />
          <xs:enumeration value="PQTR" />
          <xs:enumeration value="PWEK" />
          <xs:enumeration value="PYER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBAccount3">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account to which credit and debit entries are made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Account" type="tns:Account" />
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AccountSubType" type="tns:OBExternalAccountSubType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="AccountType" type="tns:OBExternalAccountType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the currency in which the account is held. 
Usage: Currency should only be used in case one and the same account number covers several currencies
and the initiating party needs to identify which currency needs to be used for settlement on the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the description of the account type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Nickname">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Servicer" type="tns:OBBranchAndFinancialInstitutionIdentification5_0">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBAccount3Basic">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account to which credit and debit entries are made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AccountSubType" type="tns:OBExternalAccountSubType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="AccountType" type="tns:OBExternalAccountType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the currency in which the account is held. 
Usage: Currency should only be used in case one and the same account number covers several currencies
and the initiating party needs to identify which currency needs to be used for settlement on the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the description of the account type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Nickname">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBAccount3Detail">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account to which credit and debit entries are made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Account" type="tns:Account" />
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AccountSubType" type="tns:OBExternalAccountSubType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="AccountType" type="tns:OBExternalAccountType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the currency in which the account is held. 
Usage: Currency should only be used in case one and the same account number covers several currencies
and the initiating party needs to identify which currency needs to be used for settlement on the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the description of the account type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Nickname">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Servicer" type="tns:OBBranchAndFinancialInstitutionIdentification5_0">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBAccount4">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account to which credit and debit entries are made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Account" type="tns:Account" />
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AccountSubType" type="tns:OBExternalAccountSubType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="AccountType" type="tns:OBExternalAccountType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the currency in which the account is held. 
Usage: Currency should only be used in case one and the same account number covers several currencies
and the initiating party needs to identify which currency needs to be used for settlement on the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the description of the account type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Nickname">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Servicer" type="tns:OBBranchAndFinancialInstitutionIdentification5_0">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Status" type="tns:OBAccountStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of account resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBAccount4Basic">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account to which credit and debit entries are made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AccountSubType" type="tns:OBExternalAccountSubType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="AccountType" type="tns:OBExternalAccountType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the currency in which the account is held. 
Usage: Currency should only be used in case one and the same account number covers several currencies
and the initiating party needs to identify which currency needs to be used for settlement on the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the description of the account type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Nickname">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Status" type="tns:OBAccountStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of account resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBAccount4Detail">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account to which credit and debit entries are made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Account" type="tns:Account" />
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AccountSubType" type="tns:OBExternalAccountSubType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="AccountType" type="tns:OBExternalAccountType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the currency in which the account is held. 
Usage: Currency should only be used in case one and the same account number covers several currencies
and the initiating party needs to identify which currency needs to be used for settlement on the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the description of the account type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Nickname">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Servicer" type="tns:OBBranchAndFinancialInstitutionIdentification5_0">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Status" type="tns:OBAccountStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of account resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBAccountPaymentServiceProviders">
        <xs:annotation>
          <xs:documentation>ASPSP</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AuthorisationServers" type="tns:AuthorisationServer">
            <xs:annotation>
              <xs:documentation>ASPSP Authorisation Server Portal</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="externalId">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta" type="tns:meta" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="urnopenbankingcompetentauthorityclaims1.0" type="tns:CompetentAuthorityClaims">
            <xs:annotation>
              <xs:documentation>Claims sourced from a competent authority(e.g. FCA) - can be applied to either TPPs to ASPSP</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urnopenbankinglegalauthorityclaims1.0" type="tns:LegalAuthotiryClaims">
            <xs:annotation>
              <xs:documentation>Claims sourced from a legal authority(e.g. Companies House) - can be applied to either TPPs to ASPSP</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="urnopenbankingorganisation1.0" type="tns:Organisation">
            <xs:annotation>
              <xs:documentation>Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urnopenbankingsoftwarestatement1.0" type="tns:SoftwareStatement">
            <xs:annotation>
              <xs:documentation>Software Statement Schema as defined by Open Banking</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBAccountStatus1Code">
        <xs:annotation>
          <xs:documentation>Specifies the status of account resource in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Deleted" />
          <xs:enumeration value="Disabled" />
          <xs:enumeration value="Enabled" />
          <xs:enumeration value="Pending" />
          <xs:enumeration value="ProForma" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount">
        <xs:annotation>
          <xs:documentation>Amount of money associated with the charge type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_0">
        <xs:annotation>
          <xs:documentation>The amount of the first Standing Order</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_1">
        <xs:annotation>
          <xs:documentation>The amount of the next Standing Order.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_2">
        <xs:annotation>
          <xs:documentation>The amount of the final Standing Order</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_3">
        <xs:annotation>
          <xs:documentation>Amount of money associated with the statement benefit type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_4">
        <xs:annotation>
          <xs:documentation>Amount of money associated with the statement fee type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_5">
        <xs:annotation>
          <xs:documentation>Amount of money associated with the statement interest amount type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_6">
        <xs:annotation>
          <xs:documentation>Amount of money associated with the amount type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_7">
        <xs:annotation>
          <xs:documentation>Amount of money in the cash transaction entry.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_8">
        <xs:annotation>
          <xs:documentation>Transaction charges to be paid by the charge bearer.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBActiveOrHistoricCurrencyAndAmount_9">
        <xs:annotation>
          <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBAddressTypeCode">
        <xs:annotation>
          <xs:documentation>Identifies the nature of the postal address.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Business" />
          <xs:enumeration value="Correspondence" />
          <xs:enumeration value="DeliveryTo" />
          <xs:enumeration value="MailTo" />
          <xs:enumeration value="POBox" />
          <xs:enumeration value="Postal" />
          <xs:enumeration value="Residential" />
          <xs:enumeration value="Statement" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBAuthorities">
        <xs:annotation>
          <xs:documentation>A schema defining the extension attributes that a competent authority has.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AuthorityDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of the Authority</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="AuthorityId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique string that the Authority is commonly known by. Will be referenced by the AuthorityClaims Set.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country in which the Authority has juristiction</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="externalId">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta" type="tns:meta" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="urnopenbankingorganisation1.0" type="tns:Organisation2">
            <xs:annotation>
              <xs:documentation>Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBBalanceType1Code">
        <xs:annotation>
          <xs:documentation>Balance type, in a coded form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ClosingAvailable" />
          <xs:enumeration value="ClosingBooked" />
          <xs:enumeration value="ClosingCleared" />
          <xs:enumeration value="Expected" />
          <xs:enumeration value="ForwardAvailable" />
          <xs:enumeration value="Information" />
          <xs:enumeration value="InterimAvailable" />
          <xs:enumeration value="InterimBooked" />
          <xs:enumeration value="InterimCleared" />
          <xs:enumeration value="OpeningAvailable" />
          <xs:enumeration value="OpeningBooked" />
          <xs:enumeration value="OpeningCleared" />
          <xs:enumeration value="PreviouslyClosedBooked" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBBankTransactionCodeStructure1">
        <xs:annotation>
          <xs:documentation>Set of elements used to fully identify the type of underlying transaction resulting in an entry.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the family within a domain.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SubCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the sub-product family within a specific family.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBeneficiary3">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BeneficiaryId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAccount" type="tns:OBCashAccount5_1">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_2">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBeneficiary3Basic">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BeneficiaryId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBeneficiary3Detail">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BeneficiaryId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:OBCashAccount5_1">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_2">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBranchAndFinancialInstitutionIdentification5_0">
        <xs:annotation>
          <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of the servicing institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBranchAndFinancialInstitutionIdentification5_1">
        <xs:annotation>
          <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of the servicing institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBranchAndFinancialInstitutionIdentification6_0">
        <xs:annotation>
          <xs:documentation>Financial institution servicing an account for the creditor.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a financial institution or a branch of a financial institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which an agent is known and which is usually used to identify that agent.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostalAddress" type="tns:OBPostalAddress6">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBranchAndFinancialInstitutionIdentification6_1">
        <xs:annotation>
          <xs:documentation>Financial institution servicing an account for the debtor.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a financial institution or a branch of a financial institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which an agent is known and which is usually used to identify that agent.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostalAddress" type="tns:OBPostalAddress6">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBBranchAndFinancialInstitutionIdentification6_2">
        <xs:annotation>
          <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of the servicing institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which an agent is known and which is usually used to identify that agent.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostalAddress" type="tns:OBPostalAddress6">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCallbackUrl1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:OBCallbackUrlData1" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCallbackUrlData1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Url">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Callback URL for a TPP hosted service. Will be used by ASPSPs, in conjunction with the resource name, to construct a URL to send event notifications to.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version for the event notification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCallbackUrlResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:OBCallbackUrlResponseData1" />
          <xs:element minOccurs="1" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCallbackUrlResponseData1">
        <xs:sequence>
          <xs:element minOccurs="1" name="CallbackUrlId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the callback url resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Url">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Callback URL for a TPP hosted service. Will be used by ASPSPs, in conjunction with the resource name, to construct a URL to send event notifications to.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version for the event notification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCallbackUrlsResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:OBCallbackUrlsResponseData1" />
          <xs:element minOccurs="1" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCallbackUrlsResponseData1">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CallbackUrl" type="tns:OBCallbackUrlResponseData1" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCashAccount5_0">
        <xs:annotation>
          <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Beneficiary account identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCashAccount5_1">
        <xs:annotation>
          <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCashAccount6_0">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account of the creditor, in the case of a debit transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBCashAccount6_1">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account of the debtor, in the case of a crebit transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBChargeBearerType1Code">
        <xs:annotation>
          <xs:documentation>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BorneByCreditor" />
          <xs:enumeration value="BorneByDebtor" />
          <xs:enumeration value="FollowingServiceLevel" />
          <xs:enumeration value="Shared" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBClientRegistration1">
        <xs:sequence>
          <xs:element minOccurs="1" name="aud">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The audience for the request. This should be the unique identifier
for the ASPSP issued by the issuer of the software statement.
Implemented as Base62 encoded GUID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,18}$" />
                <xs:maxLength value="18" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="exp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The time at which the request expires expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="iat">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The time at which the request was issued by the TPP  expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="iss">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the TPP. Implemented as Base62 encoded GUID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,22}$" />
                <xs:maxLength value="22" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="jti">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the JWT implemented as UUID v4</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$" />
                <xs:maxLength value="36" />
                <xs:minLength value="36" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="application_type" type="tns:ApplicationType" />
          <xs:element minOccurs="0" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client identifier string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_id_issued_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client secret string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret_expires_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client secret will expire expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0 if does not expire</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="grant_types" type="tns:GrantType" />
          <xs:element minOccurs="1" name="id_token_signed_response_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="request_object_signing_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="response_types" type="tns:ResponseType" />
          <xs:element minOccurs="1" name="scope">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,22}$" />
                <xs:maxLength value="22" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_statement">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tls_client_auth_subject_dn">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_endpoint_auth_method" type="tns:TokenEndpointAuthMethod" />
          <xs:element minOccurs="0" name="token_endpoint_auth_signing_alg" type="tns:SupportedAlgorithms" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBCreditDebitCode_0">
        <xs:annotation>
          <xs:documentation>Indicates whether the amount is a credit or a debit. 
Usage: A zero amount is considered to be a credit amount.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Credit" />
          <xs:enumeration value="Debit" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBCreditDebitCode_1">
        <xs:annotation>
          <xs:documentation>Indicates whether the transaction is a credit or a debit entry.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Credit" />
          <xs:enumeration value="Debit" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBCreditDebitCode_2">
        <xs:annotation>
          <xs:documentation>Indicates whether the balance is a credit or a debit balance. 
Usage: A zero balance is considered to be a credit balance.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Credit" />
          <xs:enumeration value="Debit" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBCurrencyExchange5">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details on the currency exchange.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ContractIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification to unambiguously identify the foreign exchange contract.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ExchangeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.
Usage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="InstructedAmount" type="tns:InstructedAmount">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuotationDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which an exchange rate is quoted.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="SourceCurrency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Currency from which an amount is to be converted in a currency conversion.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TargetCurrency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Currency into which an amount is to be converted in a currency conversion.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="UnitCurrency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBEntryStatus1Code">
        <xs:annotation>
          <xs:documentation>Status of a transaction entry on the books of the account servicer.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Booked" />
          <xs:enumeration value="Pending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBError1">
        <xs:sequence>
          <xs:element minOccurs="1" name="ErrorCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Low level textual error code, e.g., UK.OBIE.Field.Missing</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Message">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'
OBIE doesn't standardise this field</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Path">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Url">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL to help remediate the problem, or provide more information, or to API Reference, or help etc</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>An array of detail error codes, and messages, and URLs to documentation to help remediation.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>High level textual error code, to help categorize the errors.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Errors" type="tns:OBError1" />
          <xs:element minOccurs="0" name="Id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Message">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brief Error message, e.g., 'There is something wrong with the request parameters provided'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEvent1">
        <xs:annotation>
          <xs:documentation>Events.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="urnukorgopenbankingeventsresource-update" type="tns:OBEventResourceUpdate1">
            <xs:annotation>
              <xs:documentation>Resource-Update Event.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventLink1">
        <xs:annotation>
          <xs:documentation>Resource links to other available versions of the resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="link">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Resource link.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Resource version.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventNotification1">
        <xs:annotation>
          <xs:documentation>The resource-update event.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="aud">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Audience.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="events" type="tns:OBEvent1">
            <xs:annotation>
              <xs:documentation>Events.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="iat">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Issued At.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="iss">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Issuer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="jti">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>JWT ID.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="sub">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Subject</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="toe">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time of Event.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="txn">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Transaction Identifier.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventPolling1">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ack">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="maxEvents">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum number of events to be returned. A value of zero indicates the ASPSP should not return events even if available</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="returnImmediately" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether an ASPSP should return a response immediately or provide a long poll</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="setErrs" type="tns:SetErrs">
            <xs:annotation>
              <xs:documentation>An object that encapsulates all negative acknowledgements transmitted by the TPP</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventPollingResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="moreAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A JSON boolean value that indicates if more unacknowledged event notifications are available to be returned.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="sets">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A JSON object that contains zero or more nested JSON attributes. If there are no outstanding event notifications to be transmitted, the JSON object SHALL be empty.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventResourceUpdate1">
        <xs:annotation>
          <xs:documentation>Resource-Update Event.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="subject" type="tns:OBEventSubject1">
            <xs:annotation>
              <xs:documentation>The resource-update event.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventSubject1">
        <xs:annotation>
          <xs:documentation>The resource-update event.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="httpopenbanking.org.ukrid">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Resource Id for the updated resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="httpopenbanking.org.ukrlk" type="tns:OBEventLink1">
            <xs:annotation>
              <xs:documentation>Resource links to other available versions of the resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="httpopenbanking.org.ukrty">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Resource Type for the updated resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="subject_type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Subject type for the updated resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventSubscription1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventSubscriptionResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data6" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBEventSubscriptionsResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data7" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OBExternalAccountSubType1Code">
        <xs:annotation>
          <xs:documentation>Specifies the sub type of account (product family group).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ChargeCard" />
          <xs:enumeration value="CreditCard" />
          <xs:enumeration value="CurrentAccount" />
          <xs:enumeration value="EMoney" />
          <xs:enumeration value="Loan" />
          <xs:enumeration value="Mortgage" />
          <xs:enumeration value="PrePaidCard" />
          <xs:enumeration value="Savings" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBExternalAccountType1Code">
        <xs:annotation>
          <xs:documentation>Specifies the type of account (personal or business).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Business" />
          <xs:enumeration value="Personal" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBExternalPartyType1Code">
        <xs:annotation>
          <xs:documentation>Party type, in a coded form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Delegate" />
          <xs:enumeration value="Joint" />
          <xs:enumeration value="Sole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBExternalScheduleType1Code">
        <xs:annotation>
          <xs:documentation>Specifies the scheduled payment date type requested</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Arrival" />
          <xs:enumeration value="Execution" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBExternalStandingOrderStatus1Code">
        <xs:annotation>
          <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Active" />
          <xs:enumeration value="Inactive" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OBExternalStatementType1Code">
        <xs:annotation>
          <xs:documentation>Statement type, in a coded form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountClosure" />
          <xs:enumeration value="AccountOpening" />
          <xs:enumeration value="Annual" />
          <xs:enumeration value="Interim" />
          <xs:enumeration value="RegularPeriodic" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OBFundsConfirmation1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data8" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBFundsConfirmationConsent1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data9" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBFundsConfirmationConsentResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data10" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBFundsConfirmationResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data11" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBMerchantDetails1">
        <xs:annotation>
          <xs:documentation>Details of the merchant involved in the transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MerchantCategoryCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="4" />
                <xs:minLength value="3" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MerchantName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which the merchant is known.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBParty2">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountRole">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A partys role with respect to the related account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Address" type="tns:Address" />
          <xs:element minOccurs="0" name="BeneficialOwnership" type="xs:boolean" />
          <xs:element minOccurs="0" name="EmailAddress">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address for electronic mail (e-mail).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FullLegalName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies a character string with a maximum length of 350 characters.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LegalStructure">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Legal standing of the party.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Mobile">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Collection of information that identifies a mobile phone number, as defined by telecom services.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\+[0-9]{1,3}-[0-9()+\-]{1,30}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which a party is known and which is usually used to identify that party.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="PartyId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the customer resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PartyNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number assigned by an agent to identify its customer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PartyType" type="tns:OBExternalPartyType1Code">
            <xs:annotation>
              <xs:documentation>Party type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Phone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Collection of information that identifies a phone number, as defined by telecom services.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\+[0-9]{1,3}-[0-9()+\-]{1,30}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Relationships" type="tns:OBPartyRelationships1">
            <xs:annotation>
              <xs:documentation>The Party's relationships with other resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBPartyRelationships1">
        <xs:annotation>
          <xs:documentation>The Party's relationships with other resources.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Account" type="tns:Account4">
            <xs:annotation>
              <xs:documentation>Relationship to the Account resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBPostalAddress6">
        <xs:annotation>
          <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AddressLine">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressType" type="tns:OBAddressTypeCode">
            <xs:annotation>
              <xs:documentation>Identifies the nature of the postal address.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BuildingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number that identifies the position of a building on a street.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Nation with its own government, occupying a particular territory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{2,2}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountrySubDivision">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies a subdivision of a country eg, state, region, county.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Department">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of a division of a large organisation or building.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StreetName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a street or thoroughfare.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SubDepartment">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of a sub-division of a large organisation or building.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TownName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a built-up area, with defined boundaries, and a local government.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBQualifiedTrustServiceProviders">
        <xs:annotation>
          <xs:documentation>eIDAS Qualified Trust Service Provider</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CertificateFingerprint">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>SHA-256 Certificate Fingerprint</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CreateTimestamp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB Creation Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ModifyTimestamp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB Modification Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ServiceCountry">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>'&lt;SchemeOperatorAddress&gt;
&lt;PostalAddresses&gt;
&lt;PostalAddress xml:lang=''en''&gt;
&lt;StreetAddress&gt;NG III - Koning Albert II-laan 16&lt;/StreetAddress&gt;
&lt;Locality&gt;Brussels&lt;/Locality&gt;
&lt;StateOrProvince&gt;Brussels&lt;/StateOrProvince&gt;
&lt;PostalCode&gt;1000&lt;/PostalCode&gt;
&lt;CountryName&gt;BE&lt;/CountryName&gt;'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ServiceExtensions" type="tns:ServiceExtension">
            <xs:annotation>
              <xs:documentation>&lt;ServiceInformationExtensions&gt; ... &lt;/ServiceInformationExtensions&gt;</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ServiceLanguage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;Name xml:lang='en'&gt;TeleSec ServerPass&lt;/Name&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ServiceName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;Name xml:lang='en'&gt;TeleSec ServerPass&lt;/Name&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ServiceStatus">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;ServiceStatus&gt; http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/granted&lt;/ServiceStatus&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ServiceType">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="StatusStartingTime">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;StatusStartingTime&gt;2017-11-20T09:00:00Z&lt;/StatusStartingTime&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="X509Certificate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;X509Certificate&gt; MIIF1DCCBLygAwIBAgIIF00 .... &lt;/X509Certificate&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="X509SKI">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;X509SKI&gt;MCzVT9II0T3jp4KSgjeJbWa5D68=&lt;/X509SKI&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="X509SubjectName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>&lt;X509SubjectName&gt; CN=TeleSec ServerPass Ex ... &lt;/X509SubjectName&gt;
&lt;X509SKI&gt;MCzVT9II0T3jp4KSgjeJbWa5D68=&lt;/X509SKI&gt;</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="externalId">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta" type="tns:meta" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadAccount3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data12" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadAccount4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data13" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadBalance1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data14" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadBeneficiary3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data15" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadConsent1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data16" />
          <xs:element minOccurs="1" name="Risk" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadConsentResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data17" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadDataStatement2">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Statement" type="tns:OBStatement2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadDataTransaction5">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Transaction" type="tns:OBTransaction5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadDirectDebit1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data18" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadOffer1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data19" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadParty1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data20" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadParty2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data21" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadParty3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data22" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadProduct2">
        <xs:annotation>
          <xs:documentation>Product details of Other Product which is not avaiable in the standard list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data23">
            <xs:annotation>
              <xs:documentation>Aligning with the read write specs structure.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadScheduledPayment2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data24" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadStandingOrder4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data25" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadStandingOrder5">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data26" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadStatement1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:OBReadDataStatement2" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBReadTransaction4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:OBReadDataTransaction5" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBRegistrationProperties1">
        <xs:sequence>
          <xs:element minOccurs="1" name="application_type" type="tns:ApplicationType" />
          <xs:element minOccurs="0" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client identifier string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_id_issued_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client secret string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret_expires_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client secret will expire expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0 if does not expire</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="grant_types" type="tns:GrantType" />
          <xs:element minOccurs="1" name="id_token_signed_response_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="request_object_signing_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="response_types" type="tns:ResponseType" />
          <xs:element minOccurs="1" name="scope">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,22}$" />
                <xs:maxLength value="22" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_statement">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tls_client_auth_subject_dn">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_endpoint_auth_method" type="tns:TokenEndpointAuthMethod" />
          <xs:element minOccurs="0" name="token_endpoint_auth_signing_alg" type="tns:SupportedAlgorithms" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBRisk1">
        <xs:annotation>
          <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="DeliveryAddress" type="tns:DeliveryAddress">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services or in free format text.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MerchantCategoryCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="4" />
                <xs:minLength value="3" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MerchantCustomerIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The unique customer identifier of the PSU with the merchant.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PaymentContextCode" type="tns:PaymentContextCode">
            <xs:annotation>
              <xs:documentation>Specifies the payment context</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBScheduledPayment2">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAccount" type="tns:OBCashAccount5_0">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification5_1">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ScheduledPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the scheduled payment will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ScheduledPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ScheduledType" type="tns:OBExternalScheduleType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the scheduled payment date type requested</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBScheduledPayment2Basic">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ScheduledPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the scheduled payment will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ScheduledPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ScheduledType" type="tns:OBExternalScheduleType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the scheduled payment date type requested</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBScheduledPayment2Detail">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:OBCashAccount5_0">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification5_1">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ScheduledPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the scheduled payment will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ScheduledPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ScheduledType" type="tns:OBExternalScheduleType1Code">
            <xs:annotation>
              <xs:documentation>Specifies the scheduled payment date type requested</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStandingOrder4">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAccount" type="tns:OBCashAccount5_0">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification5_1">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_1">
            <xs:annotation>
              <xs:documentation>The amount of the next Standing Order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderStatusCode" type="tns:OBExternalStandingOrderStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStandingOrder4Basic">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_1">
            <xs:annotation>
              <xs:documentation>The amount of the next Standing Order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderStatusCode" type="tns:OBExternalStandingOrderStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStandingOrder4Detail">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:OBCashAccount5_0">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification5_1">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_1">
            <xs:annotation>
              <xs:documentation>The amount of the next Standing Order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderStatusCode" type="tns:OBExternalStandingOrderStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStandingOrder5">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAccount" type="tns:OBCashAccount5_0">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification5_1">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_1">
            <xs:annotation>
              <xs:documentation>The amount of the next Standing Order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderStatusCode" type="tns:OBExternalStandingOrderStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStandingOrder5Basic">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_1">
            <xs:annotation>
              <xs:documentation>The amount of the next Standing Order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderStatusCode" type="tns:OBExternalStandingOrderStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStandingOrder5Detail">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:OBCashAccount5_0">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification5_1">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_1">
            <xs:annotation>
              <xs:documentation>The amount of the next Standing Order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NextPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StandingOrderStatusCode" type="tns:OBExternalStandingOrderStatus1Code">
            <xs:annotation>
              <xs:documentation>Specifies the status of the standing order in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStatement2">
        <xs:annotation>
          <xs:documentation>Provides further details on a statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="EndDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the statement period ends.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StartDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementAmount" type="tns:StatementAmount" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementBenefit" type="tns:StatementBenefit" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementDateTime" type="tns:StatementDateTime" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementDescription">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementFee" type="tns:StatementFee" />
          <xs:element minOccurs="0" name="StatementId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementInterest" type="tns:StatementInterest" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementRate" type="tns:StatementRate" />
          <xs:element minOccurs="0" name="StatementReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference for the statement. This reference may be optionally populated if available.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementValue" type="tns:StatementValue" />
          <xs:element minOccurs="1" name="Type" type="tns:OBExternalStatementType1Code">
            <xs:annotation>
              <xs:documentation>Statement type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStatement2Basic">
        <xs:annotation>
          <xs:documentation>Provides further details on a statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="EndDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the statement period ends.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StartDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementBenefit" type="tns:StatementBenefit" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementDateTime" type="tns:StatementDateTime" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementDescription">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementFee" type="tns:StatementFee" />
          <xs:element minOccurs="0" name="StatementId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementInterest" type="tns:StatementInterest" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementRate" type="tns:StatementRate" />
          <xs:element minOccurs="0" name="StatementReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference for the statement. This reference may be optionally populated if available.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementValue" type="tns:StatementValue" />
          <xs:element minOccurs="1" name="Type" type="tns:OBExternalStatementType1Code">
            <xs:annotation>
              <xs:documentation>Statement type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBStatement2Detail">
        <xs:annotation>
          <xs:documentation>Provides further details on a statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="EndDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the statement period ends.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StartDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementAmount" type="tns:StatementAmount" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementBenefit" type="tns:StatementBenefit" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementDateTime" type="tns:StatementDateTime" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementDescription">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementFee" type="tns:StatementFee" />
          <xs:element minOccurs="0" name="StatementId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementInterest" type="tns:StatementInterest" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementRate" type="tns:StatementRate" />
          <xs:element minOccurs="0" name="StatementReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference for the statement. This reference may be optionally populated if available.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementValue" type="tns:StatementValue" />
          <xs:element minOccurs="1" name="Type" type="tns:OBExternalStatementType1Code">
            <xs:annotation>
              <xs:documentation>Statement type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBThirdPartyProviders">
        <xs:annotation>
          <xs:documentation>Third party providers consisting of payment initiation service providers and account information service providers</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="externalId">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta" type="tns:meta" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="urnopenbankingcompetentauthorityclaims1.0" type="tns:CompetentAuthorityClaims">
            <xs:annotation>
              <xs:documentation>Claims sourced from a competent authority(e.g. FCA) - can be applied to either TPPs to ASPSP</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urnopenbankinglegalauthorityclaims1.0" type="tns:LegalAuthotiryClaims">
            <xs:annotation>
              <xs:documentation>Claims sourced from a legal authority(e.g. Companies House) - can be applied to either TPPs to ASPSP</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="urnopenbankingorganisation1.0" type="tns:Organisation2">
            <xs:annotation>
              <xs:documentation>Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="urnopenbankingsoftwarestatement1.0" type="tns:SoftwareStatement3">
            <xs:annotation>
              <xs:documentation>Software Statement Schema as defined by Open Banking</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBTransaction5">
        <xs:annotation>
          <xs:documentation>Provides further details on an entry in the report.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_7">
            <xs:annotation>
              <xs:documentation>Amount of money in the cash transaction entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Balance" type="tns:OBTransactionCashBalance">
            <xs:annotation>
              <xs:documentation>Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankTransactionCode" type="tns:OBBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>Set of elements used to fully identify the type of underlying transaction resulting in an entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="BookingDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time when a transaction entry is posted to an account on the account servicer's books.
Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CardInstrument" type="tns:OBTransactionCardInstrument1">
            <xs:annotation>
              <xs:documentation>Set of elements to describe the card instrument used in the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ChargeAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_8">
            <xs:annotation>
              <xs:documentation>Transaction charges to be paid by the charge bearer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_1">
            <xs:annotation>
              <xs:documentation>Indicates whether the transaction is a credit or a debit entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAccount" type="tns:OBCashAccount6_0">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the creditor, in the case of a debit transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_0">
            <xs:annotation>
              <xs:documentation>Financial institution servicing an account for the creditor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CurrencyExchange" type="tns:OBCurrencyExchange5">
            <xs:annotation>
              <xs:documentation>Set of elements used to provide details on the currency exchange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:OBCashAccount6_1">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor, in the case of a crebit transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_1">
            <xs:annotation>
              <xs:documentation>Financial institution servicing an account for the debtor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MerchantDetails" type="tns:OBMerchantDetails1">
            <xs:annotation>
              <xs:documentation>Details of the merchant involved in the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProprietaryBankTransactionCode" type="tns:ProprietaryBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>Set of elements to fully identify a proprietary bank transaction code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementReference">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:OBEntryStatus1Code">
            <xs:annotation>
              <xs:documentation>Status of a transaction entry on the books of the account servicer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="210" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionInformation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Further details of the transaction. 
This is the transaction narrative, which is unstructured text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ValueDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.
Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.
For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBTransaction5Basic">
        <xs:annotation>
          <xs:documentation>Provides further details on an entry in the report.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_7">
            <xs:annotation>
              <xs:documentation>Amount of money in the cash transaction entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankTransactionCode" type="tns:OBBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>Set of elements used to fully identify the type of underlying transaction resulting in an entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="BookingDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time when a transaction entry is posted to an account on the account servicer's books.
Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CardInstrument" type="tns:OBTransactionCardInstrument1">
            <xs:annotation>
              <xs:documentation>Set of elements to describe the card instrument used in the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ChargeAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_8">
            <xs:annotation>
              <xs:documentation>Transaction charges to be paid by the charge bearer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_1">
            <xs:annotation>
              <xs:documentation>Indicates whether the transaction is a credit or a debit entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CurrencyExchange" type="tns:OBCurrencyExchange5">
            <xs:annotation>
              <xs:documentation>Set of elements used to provide details on the currency exchange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProprietaryBankTransactionCode" type="tns:ProprietaryBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>Set of elements to fully identify a proprietary bank transaction code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementReference">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:OBEntryStatus1Code">
            <xs:annotation>
              <xs:documentation>Status of a transaction entry on the books of the account servicer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="210" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ValueDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.
Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.
For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBTransaction5Detail">
        <xs:annotation>
          <xs:documentation>Provides further details on an entry in the report.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_7">
            <xs:annotation>
              <xs:documentation>Amount of money in the cash transaction entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Balance" type="tns:OBTransactionCashBalance">
            <xs:annotation>
              <xs:documentation>Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankTransactionCode" type="tns:OBBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>Set of elements used to fully identify the type of underlying transaction resulting in an entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="BookingDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time when a transaction entry is posted to an account on the account servicer's books.
Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CardInstrument" type="tns:OBTransactionCardInstrument1">
            <xs:annotation>
              <xs:documentation>Set of elements to describe the card instrument used in the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ChargeAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_8">
            <xs:annotation>
              <xs:documentation>Transaction charges to be paid by the charge bearer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_1">
            <xs:annotation>
              <xs:documentation>Indicates whether the transaction is a credit or a debit entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAccount" type="tns:OBCashAccount6_0">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the creditor, in the case of a debit transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_0">
            <xs:annotation>
              <xs:documentation>Financial institution servicing an account for the creditor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CurrencyExchange" type="tns:OBCurrencyExchange5">
            <xs:annotation>
              <xs:documentation>Set of elements used to provide details on the currency exchange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:OBCashAccount6_1">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor, in the case of a crebit transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_1">
            <xs:annotation>
              <xs:documentation>Financial institution servicing an account for the debtor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MerchantDetails" type="tns:OBMerchantDetails1">
            <xs:annotation>
              <xs:documentation>Details of the merchant involved in the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProprietaryBankTransactionCode" type="tns:ProprietaryBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>Set of elements to fully identify a proprietary bank transaction code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StatementReference">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:OBEntryStatus1Code">
            <xs:annotation>
              <xs:documentation>Status of a transaction entry on the books of the account servicer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="210" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionInformation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Further details of the transaction. 
This is the transaction narrative, which is unstructured text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ValueDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.
Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.
For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBTransactionCardInstrument1">
        <xs:annotation>
          <xs:documentation>Set of elements to describe the card instrument used in the transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthorisationType" type="tns:AuthorisationType">
            <xs:annotation>
              <xs:documentation>The card authorisation type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CardSchemeName" type="tns:CardSchemeName">
            <xs:annotation>
              <xs:documentation>Name of the card scheme.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the cardholder using the card instrument.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBTransactionCashBalance">
        <xs:annotation>
          <xs:documentation>Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount" type="tns:Amount2">
            <xs:annotation>
              <xs:documentation>Amount of money of the cash balance after a transaction entry is applied to the account..</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_2">
            <xs:annotation>
              <xs:documentation>Indicates whether the balance is a credit or a debit balance. 
Usage: A zero balance is considered to be a credit balance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:OBBalanceType1Code">
            <xs:annotation>
              <xs:documentation>Balance type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomestic2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data27" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticConsent3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data28" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticConsentResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data29" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data30" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticScheduled2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data31" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticScheduledConsent3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data32" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticScheduledConsentResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data33" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticScheduledResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data34" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticStandingOrder3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data35" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticStandingOrderConsent4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data36" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticStandingOrderConsentResponse4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data37" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteDomesticStandingOrderResponse4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data38" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteFile2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data39" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteFileConsent3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data40" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteFileConsentResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data41" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteFileResponse2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data42" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteFundsConfirmationResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data43" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternational2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data44" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalConsent3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data45" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalConsentResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data46" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data47" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalScheduled2">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data48" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalScheduledConsent3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data49" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalScheduledConsentResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data50" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalScheduledResponse3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data51" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalStandingOrder3">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data52" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalStandingOrderConsent4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data53" />
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalStandingOrderConsentResponse4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data54" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Risk" type="tns:OBRisk1">
            <xs:annotation>
              <xs:documentation>The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWriteInternationalStandingOrderResponse4">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data55" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OBWritePaymentDetailsResponse1">
        <xs:sequence>
          <xs:element minOccurs="1" name="Data" type="tns:Data56" />
          <xs:element minOccurs="0" name="Links" type="tns:Links">
            <xs:annotation>
              <xs:documentation>Links relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Meta" type="tns:MetaData">
            <xs:annotation>
              <xs:documentation>Meta Data relevant to the payload</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherApplicationFrequency">
        <xs:annotation>
          <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherCalculationFrequency">
        <xs:annotation>
          <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PersonalCurrentAccountResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="data" type="tns:Data57" />
          <xs:element minOccurs="1" name="meta" type="tns:Metadata5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProprietaryBankTransactionCodeStructure1">
        <xs:annotation>
          <xs:documentation>Set of elements to fully identify a proprietary bank transaction code.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Proprietary bank transaction code to identify the underlying transaction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Issuer">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the issuer of the proprietary bank transaction code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RegistrationError">
        <xs:sequence>
          <xs:element minOccurs="1" name="error" type="tns:Error1" />
          <xs:element minOccurs="0" name="error_description">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchRequest">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="attributes">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="count">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An integer indicating the desired maximum number of query results per page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="excludedAttributes">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="filter">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The filter string used to request a subset of resources.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="schemas" type="tns:Schema">
            <xs:annotation>
              <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sortBy">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A string indicating the attribute whose value shall be used to order the returned responses.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="sortOrder" type="tns:SortOrder">
            <xs:annotation>
              <xs:documentation>A string indicating the order in which the 'sortBy' parameter is applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An integer indicating the 1-based index of the first query result.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SupportedAlgorithms">
        <xs:restriction base="xs:string">
          <xs:enumeration value="RS256" />
          <xs:enumeration value="PS256" />
          <xs:enumeration value="ES256" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="UnsecuredSMELendingResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="data" type="tns:Data58" />
          <xs:element minOccurs="1" name="meta" type="tns:Metadata5" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Accessibility">
        <xs:annotation>
          <xs:documentation>Indicates Types of Accessibility</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AudioCashMachine" />
          <xs:enumeration value="AutomaticDoors" />
          <xs:enumeration value="ExternalRamp" />
          <xs:enumeration value="InductionLoop" />
          <xs:enumeration value="InternalRamp" />
          <xs:enumeration value="LevelAccess" />
          <xs:enumeration value="LowerLevelCounter" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="WheelchairAccess" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Accessibility1">
        <xs:annotation>
          <xs:documentation>Accessibility is the ability and ease a customer can access a service, good, associate, or facility. Features which make the Bank accessible to disabled people</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AutomaticDoors" />
          <xs:enumeration value="AudioCashMachine" />
          <xs:enumeration value="ExternalRamp" />
          <xs:enumeration value="HelpingHandUnit" />
          <xs:enumeration value="InductionLoop" />
          <xs:enumeration value="InternalRamp" />
          <xs:enumeration value="LevelAccess" />
          <xs:enumeration value="LowerLevelCounter" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="WheelchairAccess" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Account">
        <xs:annotation>
          <xs:documentation>Provides the details to identify an account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Account4">
        <xs:annotation>
          <xs:documentation>Relationship to the Account resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the related resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Related">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Absolute URI to the related resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Active">
        <xs:restriction base="xs:string">
          <xs:enumeration value="true" />
          <xs:enumeration value="false" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Address">
        <xs:annotation>
          <xs:documentation>Postal address of a party.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AddressLine">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressType" type="tns:OBAddressTypeCode">
            <xs:annotation>
              <xs:documentation>Identifies the nature of the postal address.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BuildingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number that identifies the position of a building on a street.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Nation with its own government, occupying a particular territory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{2,2}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountrySubDivision">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies a subdivision of a country eg, state, region, county.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StreetName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a street or thoroughfare.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TownName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a built-up area, with defined boundaries, and a local government.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AgeEligibility">
        <xs:annotation>
          <xs:documentation>Age eligibility for BCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaximumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum age that a person is eligible to hold this account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum age that a person is eligible to hold this account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the AgeEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AgeEligibility1">
        <xs:annotation>
          <xs:documentation>Age eligibility for CCC product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaximumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum age that a person is eligible to hold this CCC product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum age that a person is eligible to hold this CCC product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the AgeEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AgeEligibility2">
        <xs:annotation>
          <xs:documentation>Age eligibility that a person should be to hold this account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaximumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum age that a person is eligible to hold this account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum age that a person is eligible to hold this account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the AgeEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AgeEligibility3">
        <xs:annotation>
          <xs:documentation>Age eligibility apply for the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaximumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum age that a person is eligible to apply for this account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum age that a person is eligible to apply for this account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the AgeEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AgreementPeriod">
        <xs:annotation>
          <xs:documentation>Specifies the period of a fixed length overdraft agreement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="HalfYear" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgreementPeriod1">
        <xs:annotation>
          <xs:documentation>Specifies the period of a fixed length overdraft agreement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgreementPeriod2">
        <xs:annotation>
          <xs:documentation>Specifies the period of a fixed length overdraft agreement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PACT" />
          <xs:enumeration value="PDAY" />
          <xs:enumeration value="PHYR" />
          <xs:enumeration value="PMTH" />
          <xs:enumeration value="PQTR" />
          <xs:enumeration value="PWEK" />
          <xs:enumeration value="PYER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Amount">
        <xs:annotation>
          <xs:documentation>Amount of money of the cash balance.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Amount1">
        <xs:annotation>
          <xs:documentation>Amount of money of the credit line.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Amount2">
        <xs:annotation>
          <xs:documentation>Amount of money of the cash balance after a transaction entry is applied to the account..</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Amount3">
        <xs:annotation>
          <xs:documentation>Amount of money associated with the offer type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AmountType">
        <xs:annotation>
          <xs:documentation>The repayment is for paying just the interest only or both interest and capital or bullet amount or balance to date etc</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="RABD" />
          <xs:enumeration value="RABL" />
          <xs:enumeration value="RACI" />
          <xs:enumeration value="RAFC" />
          <xs:enumeration value="RAIO" />
          <xs:enumeration value="RALT" />
          <xs:enumeration value="USOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType1">
        <xs:annotation>
          <xs:documentation>The repayment is for paying just the interest only or both interest and capital or bullet amount or balance to date etc</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BalanceToDate" />
          <xs:enumeration value="Balloon" />
          <xs:enumeration value="CapitalAndInterest" />
          <xs:enumeration value="FeeChargeCap" />
          <xs:enumeration value="InterestOnly" />
          <xs:enumeration value="Bullet" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency">
        <xs:annotation>
          <xs:documentation>How frequently is the charge for the feature/benefit group applied to the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency1">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency2">
        <xs:annotation>
          <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency4">
        <xs:annotation>
          <xs:documentation>How often is the charge for the feature/benefit group applied to the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency5">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Flexible" />
          <xs:enumeration value="Fortnightly" />
          <xs:enumeration value="Holiday" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency7">
        <xs:annotation>
          <xs:documentation>How often is interest applied to the BCA for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's BCA.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency11">
        <xs:annotation>
          <xs:documentation>How often is interest applied to the Product for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FQAT" />
          <xs:enumeration value="FQDY" />
          <xs:enumeration value="FQHY" />
          <xs:enumeration value="FQMY" />
          <xs:enumeration value="FQOT" />
          <xs:enumeration value="FQQY" />
          <xs:enumeration value="FQSD" />
          <xs:enumeration value="FQWY" />
          <xs:enumeration value="FQYY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency12">
        <xs:annotation>
          <xs:documentation>How often is interest applied to the PCA for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's PCA.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PerAcademicTerm" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency13">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountClosing" />
          <xs:enumeration value="AccountOpening" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAccountAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency14">
        <xs:annotation>
          <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountClosing" />
          <xs:enumeration value="AccountOpening" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAccountAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency17">
        <xs:annotation>
          <xs:documentation>How often is the charge for the feature/benefit group applied to the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PerAcademicTerm" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency21">
        <xs:annotation>
          <xs:documentation>How often is the charge for the feature/benefit group applied to the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationFrequency22">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Holiday" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="web" />
          <xs:enumeration value="mobile" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AppliedAuthenticationApproach">
        <xs:annotation>
          <xs:documentation>Specifies a character string with a maximum length of 40 characters.
Usage: This field indicates whether the PSU was subject to SCA performed by the TPP</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CA" />
          <xs:enumeration value="SCA" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ATM">
        <xs:annotation>
          <xs:documentation>ATM information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ATMServices" type="tns:ATMService">
            <xs:annotation>
              <xs:documentation>Describes the type of transaction available for a customer on an ATM.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Access24HoursIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates that the ATM is available for use by customers 24 hours per day</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Accessibility" type="tns:Accessibility">
            <xs:annotation>
              <xs:documentation>Indicates Types of Accessibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Branch" type="tns:Branch">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific branch of a financial institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ATM terminal device identification for the acquirer and the issuer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Location" type="tns:Location">
            <xs:annotation>
              <xs:documentation>Location of the ATM.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumPossibleAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum amount allowed for a transaction in the service.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^-?\d{1,10}\.?\d{0,2}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Note">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Summary description of the ATM.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherATMServices" type="tns:OtherATMService">
            <xs:annotation>
              <xs:documentation>Enter a new code , name and description for any other ATM Service</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherAccessibility" type="tns:OtherAccessibility">
            <xs:annotation>
              <xs:documentation>Enter a new code , name and description for any other ATM accessibility options</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="SupportedCurrencies">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>All ISO 4217 defined currency  supported by the ATM.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="[A-Z]{3}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SupportedLanguages">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of the language name according to the ISO 639-1 codes. The type is validated by the list of values coded with two alphabetic characters, defined in the standard.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="[a-z]{2}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ATMService">
        <xs:annotation>
          <xs:documentation>Describes the type of transaction available for a customer on an ATM.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Balance" />
          <xs:enumeration value="BillPayments" />
          <xs:enumeration value="CashDeposits" />
          <xs:enumeration value="CharityDonation" />
          <xs:enumeration value="ChequeDeposits" />
          <xs:enumeration value="CashWithdrawal" />
          <xs:enumeration value="EnvelopeDeposit" />
          <xs:enumeration value="FastCash" />
          <xs:enumeration value="MobileBankingRegistration" />
          <xs:enumeration value="MobilePaymentRegistration" />
          <xs:enumeration value="MobilePhoneTopUp" />
          <xs:enumeration value="OrderStatement" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PINActivation" />
          <xs:enumeration value="PINChange" />
          <xs:enumeration value="PINUnblock" />
          <xs:enumeration value="MiniStatement" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Authorisation">
        <xs:sequence>
          <xs:element minOccurs="0" name="Active" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicator to show if this claim is active</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MemberState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Member State giving the authorisation</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Psd2Role">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Psd2 Role in which institution authorised</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Authorisation2">
        <xs:annotation>
          <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AuthorisationType" type="tns:AuthorisationType1">
            <xs:annotation>
              <xs:documentation>Type of authorisation flow requested.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CompletionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthorisationServer">
        <xs:sequence>
          <xs:element minOccurs="0" name="AutoRegistrationSupported" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Authorisation Server supports auto-registration</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BaseApiDNSUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Points to the Open Banking APIs
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientRegistrationUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The registration endpoint for TPP onboarding to ASPSPs.
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Customer orientated description</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyLogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>uri from which a TPP can retrieve a certified logo
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerFriendlyName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Certified name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DeveloperPortalUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URI for TPP developer testing
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EISCDId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Confirmation of payee bank identifier
V37 was CoPBankIdentifier</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Authorisation Server Id
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OpenIDConfigEndPointUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Uri used for Oauth2.0 OpenId Configuration
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ParentAuthorisationServerId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Authorisation Server Id of Parent Authorisation server, used for app to app linking</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PayloadSigningCertLocation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The location which is used for signing certificates
V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfService">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Uri from which the terms of service can be retrieved V39 required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AuthorisationType">
        <xs:annotation>
          <xs:documentation>The card authorisation type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ConsumerDevice" />
          <xs:enumeration value="Contactless" />
          <xs:enumeration value="None" />
          <xs:enumeration value="PIN" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorisationType1">
        <xs:annotation>
          <xs:documentation>Type of authorisation flow requested.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Any" />
          <xs:enumeration value="Single" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Authorization">
        <xs:sequence>
          <xs:element minOccurs="0" name="member_state">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="roles">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Availability">
        <xs:annotation>
          <xs:documentation>Days and times defining when the branch is available for use by a customer</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="NonStandardAvailability" type="tns:NonStandardAvailability">
            <xs:annotation>
              <xs:documentation>Non-standard hours of availability for a branch of an organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StandardAvailability" type="tns:StandardAvailability">
            <xs:annotation>
              <xs:documentation>Standard hours of availability for the branch of the organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Balance">
        <xs:annotation>
          <xs:documentation>Set of elements used to define the balance details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Amount" type="tns:Amount">
            <xs:annotation>
              <xs:documentation>Amount of money of the cash balance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_2">
            <xs:annotation>
              <xs:documentation>Indicates whether the balance is a credit or a debit balance. 
Usage: A zero balance is considered to be a credit balance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CreditLine" type="tns:CreditLine" />
          <xs:element minOccurs="1" name="DateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:OBBalanceType1Code">
            <xs:annotation>
              <xs:documentation>Balance type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="BankInterestRateType">
        <xs:annotation>
          <xs:documentation>Interest rate types,
other than AER, which financial
institutions may use to describe
the annual interest rate payable
to the BCA.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BankInterestRateType1">
        <xs:annotation>
          <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the BCA.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BankInterestRateType2">
        <xs:annotation>
          <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the account holder's account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBB" />
          <xs:enumeration value="INFR" />
          <xs:enumeration value="INGR" />
          <xs:enumeration value="INLR" />
          <xs:enumeration value="INNE" />
          <xs:enumeration value="INOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BankInterestRateType3">
        <xs:annotation>
          <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the PCA.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="LinkedBaseRate" />
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Net" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="BCA">
        <xs:annotation>
          <xs:documentation>BCA means a Business Current Account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="BCAMarketingState" type="tns:BCAMarketingState">
            <xs:annotation>
              <xs:documentation>The marketing state (promotional or regular) of the BCA Product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeFreeLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of the fee free period</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeFreeLengthPeriod" type="tns:FeeFreeLengthPeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The unique ID that has been internally assigned by the financial institution to each of the current account banking products they market to their retail and/or small to medium enterprise (SME) customers.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The name of the BCA product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the product details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OnSaleIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates that the published product is OnSale(value 1) or Back Book (value 0)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSegment" type="tns:OtherSegment">
            <xs:annotation>
              <xs:documentation>Other Segment not available in the standard segment list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Segment" type="tns:Segment">
            <xs:annotation>
              <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.
Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
Follow us: Investopedia on Facebook
With respect to BCA products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BCA1">
        <xs:sequence>
          <xs:element minOccurs="0" name="CreditInterest" type="tns:CreditInterest1">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the BCA account holders</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeesCharges" type="tns:OtherFeesCharges1">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either Overdraft or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Overdraft" type="tns:Overdraft1">
            <xs:annotation>
              <xs:documentation>Borrowing details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDetails" type="tns:ProductDetails" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BCAMarketingState">
        <xs:annotation>
          <xs:documentation>The marketing state (promotional or regular) of the BCA Product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CoreProduct" type="tns:CoreProduct">
            <xs:annotation>
              <xs:documentation>BCA core product details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditInterest" type="tns:CreditInterest">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the BCA account holders</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Eligibility" type="tns:Eligibility">
            <xs:annotation>
              <xs:documentation>Eligibility details for this product i.e. the criteria that an accountholder has to meet in order to be eligible for the BCA product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeaturesAndBenefits" type="tns:FeaturesAndBenefits">
            <xs:annotation>
              <xs:documentation>Feature And Benefits Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state start date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  BCA Product Marketing State.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LastMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MarketingState" type="tns:MarketingState">
            <xs:annotation>
              <xs:documentation>Describes the marketing state (regular or promotional) of the BCA Product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding details for marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeesCharges" type="tns:OtherFeesCharge">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either Overdraft or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Overdraft" type="tns:Overdraft">
            <xs:annotation>
              <xs:documentation>Borrowing details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PredecessorID">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies the marketing state that precedes this marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenureLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of a promotional state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenurePeriod" type="tns:StateTenurePeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Branch">
        <xs:annotation>
          <xs:documentation>Information that locates and identifies a specific branch of a financial institution.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a branch of a financial institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Branch1">
        <xs:annotation>
          <xs:documentation>Information that locates and identifies a specific branch of a financial institution.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Accessibility" type="tns:Accessibility1">
            <xs:annotation>
              <xs:documentation>Accessibility is the ability and ease a customer can access a service, good, associate, or facility. Features which make the Bank accessible to disabled people</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Availability" type="tns:Availability">
            <xs:annotation>
              <xs:documentation>Days and times defining when the branch is available for use by a customer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ContactInfo" type="tns:ContactInfo">
            <xs:annotation>
              <xs:documentation>Communication device number or electronic address used for communication.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="CustomerSegment" type="tns:CustomerSegment">
            <xs:annotation>
              <xs:documentation>The marketing segment which the branch is able to address in terms of customer type. Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a branch of a financial institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which a branch is known and which is usually used to identify that branch.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Note">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Summary description of services, facility and availability.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherAccessibility" type="tns:OtherAccessibility1">
            <xs:annotation>
              <xs:documentation>Enter any new code , name and description for any other Accessibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherCustomerSegment" type="tns:OtherCustomerSegment">
            <xs:annotation>
              <xs:documentation>Enter a new code , name and description for any other Customer Segment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherServiceAndFacility" type="tns:OtherServiceAndFacility">
            <xs:annotation>
              <xs:documentation>Enter any new code , name and description for any Other Facility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Photo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Image related to the branch</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="PostalAddress" type="tns:PostalAddress2">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="SequenceNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Sequence Number that is used in conjunction with Identification to uniquely identify a branch. Physical branches should have 0 assigned, mobile and sub branches should have 1,2,3....etc. assigned.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ServiceAndFacility" type="tns:ServiceAndFacility">
            <xs:annotation>
              <xs:documentation>Service/Facilities offered at a branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SortCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>United Kingdom (UK) Sort Code - identifies British financial institutions on the British national clearing systems. The sort code, which is a six-digit number, is usually formatted as three pairs of numbers, for example 12-34-56. It identifies both the bank and the branch(s) where the account is held.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="8" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type10">
            <xs:annotation>
              <xs:documentation>Codeset to indicate if a branch is physically in 1 location or is mobile</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Brand">
        <xs:annotation>
          <xs:documentation>Brand of the Acquirer of transactions captured by the ATM</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ATM" type="tns:ATM">
            <xs:annotation>
              <xs:documentation>ATM information.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="BrandName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brand Name that an organisation uses to market its products or services to a consumer</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Brand1">
        <xs:annotation>
          <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="BCA" type="tns:BCA">
            <xs:annotation>
              <xs:documentation>BCA means a Business Current Account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="BrandName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brand Name that an organisation uses to market its products or services to a consumer as registered at https://register.fca.org.uk/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Brand2">
        <xs:annotation>
          <xs:documentation>Brand owned by an organisation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Branch" type="tns:Branch1">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific branch of a financial institution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="BrandName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brand Name that an organisation uses to market its products or services to a consumer</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Brand3">
        <xs:annotation>
          <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="BrandName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brand Name that an organisation uses to market its products or services to a consumer as registered at https://register.fca.org.uk/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="CCC" type="tns:CCC">
            <xs:annotation>
              <xs:documentation>CCC means a Commercial Credit Card.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Brand4">
        <xs:annotation>
          <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="BrandName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brand Name that an organisation uses to market its products or services to a consumer as registered at https://register.fca.org.uk/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="PCA" type="tns:PCA1">
            <xs:annotation>
              <xs:documentation>PCA' means a personal current account. That is an account marketed to individuals rather than businesses, which provides the facility to place funds, withdraw cash, hold deposits and to execute payment transaction to and from third parties but does not include any of the following types of accounts: 
(a) an account in which money is held on deposit in a currency other than sterling;  (b) current account mortgage, ie a single account comprising both a personal current account and a mortgage, which is regulated and marketed principally as a mortgage;  
(c) savings accounts (including instant access savings accounts);  
(d) credit card accounts where funds are usually paid in for the sole purpose of repaying a credit card debt; and 
(e) e-money accounts.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Brand5">
        <xs:annotation>
          <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="BrandName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Brand Name that an organisation uses to market its products or services to a consumer as registered at https://register.fca.org.uk/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="SMELoan" type="tns:SMELoan">
            <xs:annotation>
              <xs:documentation>SMELoan means SME unsecured loan.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CalculationFrequency">
        <xs:annotation>
          <xs:documentation>How frequently is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency1">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency2">
        <xs:annotation>
          <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency4">
        <xs:annotation>
          <xs:documentation>How often is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency5">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Flexible" />
          <xs:enumeration value="Fortnightly" />
          <xs:enumeration value="Holiday" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency7">
        <xs:annotation>
          <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency11">
        <xs:annotation>
          <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FQAT" />
          <xs:enumeration value="FQDY" />
          <xs:enumeration value="FQHY" />
          <xs:enumeration value="FQMY" />
          <xs:enumeration value="FQOT" />
          <xs:enumeration value="FQQY" />
          <xs:enumeration value="FQSD" />
          <xs:enumeration value="FQWY" />
          <xs:enumeration value="FQYY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency12">
        <xs:annotation>
          <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PerAcademicTerm" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency13">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountClosing" />
          <xs:enumeration value="AccountOpening" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAccountAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency14">
        <xs:annotation>
          <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountClosing" />
          <xs:enumeration value="AccountOpening" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAccountAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency17">
        <xs:annotation>
          <xs:documentation>How often is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PerAcademicTerm" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency21">
        <xs:annotation>
          <xs:documentation>How often is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationFrequency22">
        <xs:annotation>
          <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Holiday" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CalculationMethod">
        <xs:annotation>
          <xs:documentation>Methods of calculating interest</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Compound" />
          <xs:enumeration value="SimpleInterest" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CappingPeriod">
        <xs:annotation>
          <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="HalfYear" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CappingPeriod5">
        <xs:annotation>
          <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CappingPeriod24">
        <xs:annotation>
          <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnClosing" />
          <xs:enumeration value="OnOpening" />
          <xs:enumeration value="ChargingPeriod" />
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Holiday" />
          <xs:enumeration value="PerItem" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="OnAnniversary" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PerHundredPounds" />
          <xs:enumeration value="PerHour" />
          <xs:enumeration value="PerOccurrence" />
          <xs:enumeration value="PerSheet" />
          <xs:enumeration value="PerTransaction" />
          <xs:enumeration value="PerTransactionAmount" />
          <xs:enumeration value="PerTransactionPercentage" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="SixMonthly" />
          <xs:enumeration value="StatementMonthly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Card">
        <xs:annotation>
          <xs:documentation>Payment Card Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ContactlessIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the card can be used for contactless payments or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MaxDailyCardWithdrawalLimit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum daily cash withdrawallimit on the card.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Card details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherScheme" type="tns:OtherScheme">
            <xs:annotation>
              <xs:documentation>Operator of a card scheme which is not available in the standard scheme code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType2">
            <xs:annotation>
              <xs:documentation>Any other Card Type which is not available in the standard card type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Scheme" type="tns:Scheme">
            <xs:annotation>
              <xs:documentation>Operator of Card Scheme e.g. Visa</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type2">
            <xs:annotation>
              <xs:documentation>Card Type available e.g. Debit</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Card1">
        <xs:annotation>
          <xs:documentation>Payment Card Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ContactlessIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the card can be used for contactless payments(Yes) or not(No).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MaxDailyCardWithdrawalLimit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum daily cash withdrawal limit on the card.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Card details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherScheme" type="tns:OtherScheme">
            <xs:annotation>
              <xs:documentation>Operator of a card scheme which is not available in the standard scheme code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType2">
            <xs:annotation>
              <xs:documentation>Any other Card Type which is not available in the standard card type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Scheme" type="tns:Scheme">
            <xs:annotation>
              <xs:documentation>Operator of Card Scheme e.g. Visa</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type21">
            <xs:annotation>
              <xs:documentation>Card Type available e.g. Debit</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CardScheme">
        <xs:annotation>
          <xs:documentation>Operator of Card Scheme</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Mastercard" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Visa" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardSchemeName">
        <xs:annotation>
          <xs:documentation>Name of the card scheme.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AmericanExpress" />
          <xs:enumeration value="Diners" />
          <xs:enumeration value="Discover" />
          <xs:enumeration value="MasterCard" />
          <xs:enumeration value="VISA" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="CCC">
        <xs:annotation>
          <xs:documentation>CCC means a Commercial Credit Card.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="CCCMarketingState" type="tns:CCCMarketingState">
            <xs:annotation>
              <xs:documentation>The marketing state (promotional or regular) of the CCC Product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The unique ID that has been internally assigned by the financial institution to each of the Commercial Credit Card products they market to their retail and/or small to medium enterprise (SME) customers.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The name of the CCC product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSegment" type="tns:OtherSegment1" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Segment" type="tns:Segment1">
            <xs:annotation>
              <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another. Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd Follow us: Investopedia on Facebook With respect to CCC products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CCCMarketingState">
        <xs:annotation>
          <xs:documentation>The marketing state (promotional or regular) of the CCC Product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CoreProduct" type="tns:CoreProduct1">
            <xs:annotation>
              <xs:documentation>CCC core product details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Eligibility" type="tns:Eligibility1">
            <xs:annotation>
              <xs:documentation>Eligibility details for this product i.e. the criteria that an accountholder has to meet in order to be eligible for the CCC product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeaturesAndBenefits" type="tns:FeaturesAndBenefits1">
            <xs:annotation>
              <xs:documentation>Feature And Benefits Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state start date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  CCC Product Marketing State.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LastMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MarketingState" type="tns:MarketingState1">
            <xs:annotation>
              <xs:documentation>Describes the marketing state (regular or promotional) of the CCC Product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding details for marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OtherFeesCharges" type="tns:OtherFeesCharges">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either NonRepayment or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PredecessorID">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies the marketing state that precedes this marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Repayment" type="tns:Repayment">
            <xs:annotation>
              <xs:documentation>Repayment details of the CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenureLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of a promotional state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenurePeriod" type="tns:StateTenurePeriod1">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Certificate">
        <xs:sequence>
          <xs:element minOccurs="0" name="eidas_profile">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="expired" type="xs:boolean" />
          <xs:element minOccurs="0" name="qtsp_name">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="qtsp_uri">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="revoked" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="roles">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="type">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="valid_eidas_certificate" type="xs:boolean" />
          <xs:element minOccurs="0" name="valid_obietf_certificate" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Charge">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a charge for the payment initiation.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount">
            <xs:annotation>
              <xs:documentation>Amount of money associated with the charge type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ChargeBearer" type="tns:OBChargeBearerType1Code">
            <xs:annotation>
              <xs:documentation>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Charge type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CompetentAuthorityClaims">
        <xs:annotation>
          <xs:documentation>Claims sourced from a competent authority(e.g. FCA) - can be applied to either TPPs to ASPSP</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Authorisations" type="tns:Authorisation">
            <xs:annotation>
              <xs:documentation>Home or Passported Authorisations</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AuthorityId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The ID of the accrediting authority.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="EtsiIdentifier">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>European Telecommunications Standards Institute Organisation Identifier</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MemberState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Member State of the Authority</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RegistrationId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Registration Id with the principle authority</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CompetentAuthorityClaims1">
        <xs:sequence>
          <xs:element minOccurs="0" name="authority_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="authorization_domain">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="authorizations" type="tns:Authorization" />
          <xs:element minOccurs="0" name="registration_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContactInfo">
        <xs:annotation>
          <xs:documentation>Communication device number or electronic address used for communication.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ContactContent">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Collection of information that identifies a phone/Fax number/ email, as defined by telecom services.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ContactDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of contact such as main phone number, alternate phone number, Fax number, alternate fax number, email and alternate email</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ContactType" type="tns:ContactType">
            <xs:annotation>
              <xs:documentation>Contact type such Phone, Fax and email</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherContactType" type="tns:OtherContactType">
            <xs:annotation>
              <xs:documentation>Other contact type which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ContactType">
        <xs:annotation>
          <xs:documentation>Contact type such Phone, Fax and email</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AlternateEmail" />
          <xs:enumeration value="AlternateFax" />
          <xs:enumeration value="AlternatePhone" />
          <xs:enumeration value="Email" />
          <xs:enumeration value="Fax" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Phone" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactType1">
        <xs:restriction base="xs:string">
          <xs:enumeration value="business" />
          <xs:enumeration value="technical" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="CoreProduct">
        <xs:annotation>
          <xs:documentation>BCA core product details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MonthlyCharge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any fees which can be included in a MonthlyCharge. A new field IncludedInMonthlyChargeIndicator in OtherFeeCharges section indicates whether the fees can be grouped in MonthlyCharge.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Core product details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The description of the BCA product used for marketing purposes from a customer perspective.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ProductURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the organisation which redirects to the product (on live products only) available on an external website. There might be more than one product at a given URL.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SalesAccessChannels" type="tns:SalesAccessChannel">
            <xs:annotation>
              <xs:documentation>Channels via which a customer can open a BCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ServicingAccessChannels" type="tns:ServicingAccessChannel">
            <xs:annotation>
              <xs:documentation>Channels via which customers can access BCA services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TcsAndCsURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the financial institution which redirects to the BCA T&amp;Cs on an external website</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CoreProduct1">
        <xs:annotation>
          <xs:documentation>CCC core product details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="APR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Annual Percentage Rate (APR) is a measure that attempts to calculate what percentage of the principal youâ€™ll pay per period (in this case a year), taking every charge â€“ monthly payments over the course of the loan, upfront fees, etc. â€“ into account. For commercial credit cards, this APR is the representative APR which includes any account fees.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="CardScheme" type="tns:CardScheme">
            <xs:annotation>
              <xs:documentation>Operator of Card Scheme</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="ContactlessIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the card can be used with a contactless terminal</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MaxCreditLimit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum amount of credit that the bank will offer against the card account and is normally â€œsubject to statusâ€</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MaxDailyCardWithdrawalLimit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum amount of money that you can withdraw per day (so long as you do not exceed your available credit limit)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MaxPurchaseInterestFreeLengthDays">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum number of days that you have between making a purchase via the credit card and having to repay the balance without incurring interest charges</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinCreditLimit">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The minimum amount of credit that the bank will offer against the card account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding details for core product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherCardScheme" type="tns:OtherCardScheme">
            <xs:annotation>
              <xs:documentation>Other card scheme which is not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PeriodicFee">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Charge made on a periodic basis for the card account e.g. Annual Fee</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PeriodicFeePeriod" type="tns:PeriodicFeePeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the Periodic Fee</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The description of the CCC product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ProductURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the organisation which redirects to the product (on live products only) available on an external website. There might be more than one product at a given URL.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="SalesAccessChannels" type="tns:SalesAccessChannel1">
            <xs:annotation>
              <xs:documentation>Channels via which a customer can open a CCC.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ServicingAccessChannels" type="tns:ServicingAccessChannel1">
            <xs:annotation>
              <xs:documentation>Channels via which customers can access CCC services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TcsAndCsURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the financial institution which redirects to the CCC T&amp;Cs on an external website</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CoreProduct2">
        <xs:annotation>
          <xs:documentation>Core feature of the PCA product which can be associated to a particular Marketing State</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MonthlyMaximumCharge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum relevant charges that could accrue as defined fully in Part 7 of the CMA order</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The description of the PCA product used for marketing purposes from a customer perspective.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ProductURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the organisation which redirects to the product (on live products only) available on an external website. There might be more than one product at a given URL.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SalesAccessChannels" type="tns:SalesAccessChannel2">
            <xs:annotation>
              <xs:documentation>Channels through which a customer can open an account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ServicingAccessChannels" type="tns:ServicingAccessChannel2">
            <xs:annotation>
              <xs:documentation>Methods by which a customer can access the services associated to the PCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TcsAndCsURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the financial institution which redirects to the PCA T&amp;Cs on an external website</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CoreProduct3">
        <xs:annotation>
          <xs:documentation>SME Loan core product details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="EarlyPaymentFeeApplicable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Early repayment fee charged for this loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FullEarlyRepaymentAllowedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>FullEarlyRepaymentAllowedIndicator states whether a borrower can pay off the entire residual prior to the expected end of the loan term without incurring charges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="LoanApplicationFeeChargeType" type="tns:LoanApplicationFeeChargeType">
            <xs:annotation>
              <xs:documentation>Loan application fee charged type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Core Product Details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OverPaymentFeeApplicable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Overpayment fee charged for this loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverpaymentAllowedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>OverpaymentAllowedIndictor says whether a borrower can pay more than the repayment amount specified by the lender, in a particular period, without incurring charges.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The description of the SME Loan product used for marketing purposes from a customer perspective.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ProductURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the organisation which redirects to the product (on live products only) available on an external website. There might be more than one product at a given URL.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="SalesAccessChannels" type="tns:SalesAccessChannel3">
            <xs:annotation>
              <xs:documentation>Methods by which a customer can access the services associated to the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ServicingAccessChannels" type="tns:ServicingAccessChannel3">
            <xs:annotation>
              <xs:documentation>Methods by which a customer can access the services associated to the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TcsAndCsURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the financial institution which redirects to the SME Loan T&amp;Cs on an external website</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditCheck">
        <xs:annotation>
          <xs:documentation>Credit check criteria that the account holder will need to meet to take out the PCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the CreditCheck details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ScoringType" type="tns:ScoringType">
            <xs:annotation>
              <xs:documentation>Opening Credit Scoring Type (Hard or Soft)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditCheckEligibility">
        <xs:annotation>
          <xs:documentation>Credit check criteria that the account holder will need to meet to take out the BCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the CreditCheck details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ScoringType" type="tns:ScoringType">
            <xs:annotation>
              <xs:documentation>Opening Credit Scoring Type (Hard or Soft)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditCheckEligibility1">
        <xs:annotation>
          <xs:documentation>Credit check criteria that the account holder will need to meet to take out the CCC product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the CreditCheck details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ScoringType" type="tns:ScoringType">
            <xs:annotation>
              <xs:documentation>Opening Credit Scoring Type (Hard or Soft)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditCheckEligibility2">
        <xs:annotation>
          <xs:documentation>Credit check criteria that the account holder will need to meet to take out the loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the CreditCheck details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ScoringType" type="tns:ScoringType">
            <xs:annotation>
              <xs:documentation>Opening Credit Scoring Type (Hard or Soft)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterest">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the BCA account holders</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBandSet" type="tns:TierBandSet">
            <xs:annotation>
              <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterest1">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the BCA account holders</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBandSet" type="tns:TierBandSet1">
            <xs:annotation>
              <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterest2">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the Account holders</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBandSet" type="tns:TierBandSet2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterest3">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the PCA account holders</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBandSet" type="tns:TierBandSet3">
            <xs:annotation>
              <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterest4">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the PCA account holders</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBandSet" type="tns:TierBandSet4">
            <xs:annotation>
              <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterestEligibility">
        <xs:annotation>
          <xs:documentation>Eligibility for credit interest</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditInterestEligibility1">
        <xs:annotation>
          <xs:documentation>Eligibility for credit interest</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period3">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type19">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditLine">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details on the credit line.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount" type="tns:Amount1">
            <xs:annotation>
              <xs:documentation>Amount of money of the credit line.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Included" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether or not the credit line is included in the balance of the account.
Usage: If not present, credit line is not included in the balance amount of the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type" type="tns:Type18">
            <xs:annotation>
              <xs:documentation>Limit type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Creditor">
        <xs:annotation>
          <xs:documentation>Party to which an amount of money is due.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which a party is known and which is usually used to identify that party.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostalAddress" type="tns:OBPostalAddress6">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditorAccount">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level.
Note, the account name is not the product name or the nickname of the account.
OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditorAccount8">
        <xs:annotation>
          <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level.
Note, the account name is not the product name or the nickname of the account.
OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreditorAccount20">
        <xs:annotation>
          <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level.
Note, the account name is not the product name or the nickname of the account.
OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CustomerSegment">
        <xs:annotation>
          <xs:documentation>The marketing segment which the branch is able to address in terms of customer type. Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Business" />
          <xs:enumeration value="Corporate" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Personal" />
          <xs:enumeration value="Private" />
          <xs:enumeration value="Premier" />
          <xs:enumeration value="Select" />
          <xs:enumeration value="SME" />
          <xs:enumeration value="Wealth" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Data">
        <xs:sequence>
          <xs:element minOccurs="0" name="certificate" type="tns:Certificate" />
          <xs:element minOccurs="0" name="organisation" type="tns:Organisation1" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data1">
        <xs:annotation>
          <xs:documentation>Environment of the ATM.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Brand" type="tns:Brand">
            <xs:annotation>
              <xs:documentation>Brand of the Acquirer of transactions captured by the ATM</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data2">
        <xs:annotation>
          <xs:documentation>Open Banking Business Current Account product data details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Brand" type="tns:Brand1">
            <xs:annotation>
              <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data3">
        <xs:annotation>
          <xs:documentation>Environment of the branch</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Brand" type="tns:Brand2">
            <xs:annotation>
              <xs:documentation>Brand owned by an organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data4">
        <xs:annotation>
          <xs:documentation>Open Banking Commercial Credit Card product data details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Brand" type="tns:Brand3">
            <xs:annotation>
              <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data5">
        <xs:sequence>
          <xs:element minOccurs="0" name="CallbackUrl">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Callback URL for a TPP hosted service. Will be used by ASPSPs, in conjunction with the resource name, to construct a URL to send event notifications to.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EventTypes">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version for the event notification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data6">
        <xs:sequence>
          <xs:element minOccurs="0" name="CallbackUrl">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Callback URL for a TPP hosted service. Will be used by ASPSPs, in conjunction with the resource name, to construct a URL to send event notifications to.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="EventSubscriptionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the callback URL resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EventTypes">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version for the event notification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data7">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EventSubscription" type="tns:EventSubscription" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data8">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:InstructedAmount1">
            <xs:annotation>
              <xs:documentation>Amount of money to be confirmed as available funds in the debtor account. Contains an Amount and a Currency.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the CBPII, to unambiguously refer to the request related to the payment transaction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data9">
        <xs:sequence>
          <xs:element minOccurs="1" name="DebtorAccount" type="tns:DebtorAccount">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a confirmation of funds consent will be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpirationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified date and time the funds confirmation authorisation will expire.
 If this is not populated, the authorisation will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data10">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned to identify the funds confirmation consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="DebtorAccount" type="tns:DebtorAccount1">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a confirmation of funds consent will be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpirationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified date and time the funds confirmation authorisation will expire.\nIf this is not populated, the authorisation will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data11">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FundsAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate the result of a confirmation of funds check.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FundsConfirmationId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:InstructedAmount1">
            <xs:annotation>
              <xs:documentation>Amount of money to be confirmed as available funds in the debtor account. Contains an Amount and a Currency.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the CBPII, to unambiguously refer to the request related to the payment transaction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data12">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Account" type="tns:OBAccount3" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data13">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Account" type="tns:OBAccount4" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data14">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Balance" type="tns:Balance" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data15">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Beneficiary" type="tns:OBBeneficiary3" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data16">
        <xs:sequence>
          <xs:element minOccurs="0" name="ExpirationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified date and time the permissions will expire.
If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Permissions" type="tns:Permission1" />
          <xs:element minOccurs="0" name="TransactionFromDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified start date and time for the transaction query period.
If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionToDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified end date and time for the transaction query period.
If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data17">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned to identify the account access consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpirationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified date and time the permissions will expire.
If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Permissions" type="tns:Permission1" />
          <xs:element minOccurs="1" name="Status" type="tns:Status">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionFromDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified start date and time for the transaction query period.
If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionToDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified end date and time for the transaction query period.
If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data18">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DirectDebit" type="tns:DirectDebit" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data19">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Offer" type="tns:Offer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data20">
        <xs:sequence>
          <xs:element minOccurs="0" name="Party" type="tns:Party" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data21">
        <xs:sequence>
          <xs:element minOccurs="0" name="Party" type="tns:OBParty2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data22">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Party" type="tns:OBParty2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data23">
        <xs:annotation>
          <xs:documentation>Aligning with the read write specs structure.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Product" type="tns:Product" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data24">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ScheduledPayment" type="tns:OBScheduledPayment2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data25">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StandingOrder" type="tns:OBStandingOrder4" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data26">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StandingOrder" type="tns:OBStandingOrder5" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data27">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data28">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data29">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status2">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data30">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="DomesticPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic payment resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status4">
            <xs:annotation>
              <xs:documentation>Specifies the status of the payment information group.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data31">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation4">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data32">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation4">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data33">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation4">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status2">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data34">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="DomesticScheduledPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic schedule payment resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation4">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status7">
            <xs:annotation>
              <xs:documentation>Specifies the status of the payment order resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data35">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation8">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data36">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation8">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data37">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation8">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status2">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data38">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="DomesticStandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic standing order resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation8">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status7">
            <xs:annotation>
              <xs:documentation>Specifies the status of the payment order resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data39">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation12">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data40">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation12">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data41">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation12">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status11">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data42">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FilePaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the file payment resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation12">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status13">
            <xs:annotation>
              <xs:documentation>Specifies the status of the payment order resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data43">
        <xs:sequence>
          <xs:element minOccurs="0" name="FundsAvailableResult" type="tns:FundsAvailableResult">
            <xs:annotation>
              <xs:documentation>Result of a funds availability check.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data44">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation16">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data45">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation16">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data46">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRateInformation" type="tns:ExchangeRateInformation2">
            <xs:annotation>
              <xs:documentation>Further detailed information on the exchange rate that has been used in the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation16">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status2">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data47">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRateInformation" type="tns:ExchangeRateInformation2">
            <xs:annotation>
              <xs:documentation>Further detailed information on the exchange rate that has been used in the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation16">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InternationalPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the international payment resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status4">
            <xs:annotation>
              <xs:documentation>Specifies the status of the payment information group.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data48">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation20">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data49">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation20">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data50">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRateInformation" type="tns:ExchangeRateInformation2">
            <xs:annotation>
              <xs:documentation>Further detailed information on the exchange rate that has been used in the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation20">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status2">
            <xs:annotation>
              <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data51">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRateInformation" type="tns:ExchangeRateInformation2">
            <xs:annotation>
              <xs:documentation>Further detailed information on the exchange rate that has been used in the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpectedSettlementDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation20">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InternationalScheduledPaymentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the international scheduled payment resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status7">
            <xs:annotation>
              <xs:documentation>Specifies the status of the payment order resource.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data52">
        <xs:sequence>
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation24">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data53">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation24">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data54">
        <xs:sequence>
          <xs:element minOccurs="0" name="Authorisation" type="tns:Authorisation2">
            <xs:annotation>
              <xs:documentation>The authorisation type request from the TPP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CutOffDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation24">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" default="Create" name="Permission">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the Open Banking service request types.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SCASupportData" type="tns:SCASupportData">
            <xs:annotation>
              <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status20">
            <xs:annotation>
              <xs:documentation>Specifies the status of resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data55">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Charges" type="tns:Charge" />
          <xs:element minOccurs="1" name="ConsentId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="CreationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Initiation" type="tns:Initiation24">
            <xs:annotation>
              <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InternationalStandingOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB: Unique identification as assigned by the ASPSP to uniquely identify the international standing order resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MultiAuthorisation" type="tns:MultiAuthorisation">
            <xs:annotation>
              <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status22">
            <xs:annotation>
              <xs:documentation>Specifies the status of resource in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data56">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PaymentStatus" type="tns:PaymentStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data57">
        <xs:annotation>
          <xs:documentation>Open Banking Personal Current Account product data details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Brand" type="tns:Brand4">
            <xs:annotation>
              <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data58">
        <xs:annotation>
          <xs:documentation>Open Banking SME Unsecured Loan product data details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Brand" type="tns:Brand5">
            <xs:annotation>
              <xs:documentation>Brand registered by the banking group at https://register.fca.org.uk/</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Day">
        <xs:annotation>
          <xs:documentation>Working day information</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Name" type="tns:Name">
            <xs:annotation>
              <xs:documentation>Specifies the day of the week</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specify any note that is related the particular opening day e.g. Closed half day on Monday</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OpeningHours" type="tns:OpeningHour">
            <xs:annotation>
              <xs:documentation>Opening &amp; Closing Times of a branch of an organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DebtorAccount">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account of the debtor to which a confirmation of funds consent will be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the account, as assigned by the account servicing institution.
Usage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DebtorAccount1">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account of the debtor to which a confirmation of funds consent will be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the account, as assigned by the account servicing institution.
Usage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DebtorAccount2">
        <xs:annotation>
          <xs:documentation>Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DebtorAccount10">
        <xs:annotation>
          <xs:documentation>Provides the details to identify the debtor account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
Note, the account name is not the product name or the nickname of the account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="SchemeName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the identification scheme, in a coded form as published in an external list.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>This is secondary identification of the account, as assigned by the account servicing institution. 
This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="34" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DeliveryAddress">
        <xs:annotation>
          <xs:documentation>Information that locates and identifies a specific address, as defined by postal services or in free format text.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AddressLine">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BuildingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number that identifies the position of a building on a street.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Nation with its own government, occupying a particular territory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{2,2}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CountrySubDivision">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StreetName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a street or thoroughfare.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TownName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a built-up area, with defined boundaries, and a local government.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DepositInterestAppliedCoverage">
        <xs:annotation>
          <xs:documentation>Amount on which Interest applied.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DepositInterestAppliedCoverage1">
        <xs:annotation>
          <xs:documentation>Amount on which Interest applied.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBA" />
          <xs:enumeration value="INTI" />
          <xs:enumeration value="INWH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DepositInterestAppliedCoverage2">
        <xs:annotation>
          <xs:documentation>Amount on which Interest applied.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Destination">
        <xs:annotation>
          <xs:documentation>Describes whether accrued interest is payable only to the BCA or to another bank account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PayAway" />
          <xs:enumeration value="SelfCredit" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Destination2">
        <xs:annotation>
          <xs:documentation>Describes whether accrued interest is payable only to the BCA or to another bank account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INOT" />
          <xs:enumeration value="INPA" />
          <xs:enumeration value="INSC" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Destination3">
        <xs:annotation>
          <xs:documentation>Describes whether accrued interest is payable only to the PCA or to another bank account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PayAway" />
          <xs:enumeration value="SelfCredit" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DirectDebit">
        <xs:annotation>
          <xs:documentation>Account to or from which a cash entry is made.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DirectDebitId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the direct debit resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DirectDebitStatusCode" type="tns:DirectDebitStatusCode">
            <xs:annotation>
              <xs:documentation>Specifies the status of the direct debit in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MandateIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Direct Debit reference. For AUDDIS service users provide Core Reference. For non AUDDIS service users provide Core reference if possible or last used reference.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of Service User.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PreviousPaymentAmount" type="tns:PreviousPaymentAmount">
            <xs:annotation>
              <xs:documentation>The amount of the most recent direct debit collection.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PreviousPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date of most recent direct debit collection.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DirectDebitStatusCode">
        <xs:annotation>
          <xs:documentation>Specifies the status of the direct debit in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Active" />
          <xs:enumeration value="Inactive" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Eligibility">
        <xs:annotation>
          <xs:documentation>Eligibility details for this product i.e. the criteria that an accountholder has to meet in order to be eligible for the BCA product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgeEligibility" type="tns:AgeEligibility">
            <xs:annotation>
              <xs:documentation>Age eligibility for BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditCheckEligibility" type="tns:CreditCheckEligibility">
            <xs:annotation>
              <xs:documentation>Credit check criteria that the account holder will need to meet to take out the BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IDEligibility" type="tns:IDEligibility">
            <xs:annotation>
              <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IndustryEligibility" type="tns:IndustryEligibility">
            <xs:annotation>
              <xs:documentation>Industry Eligibility that the account holder will need to meet to take out the BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LegalStructureEligibility" type="tns:LegalStructureEligibility">
            <xs:annotation>
              <xs:documentation>Legal structure eligibility requirement to access the BCA product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OfficerEligibility" type="tns:OfficerEligibility">
            <xs:annotation>
              <xs:documentation>Describes the requirement of the officers(owner, partner, directors) to access the BCA product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherEligibility" type="tns:OtherEligibility">
            <xs:annotation>
              <xs:documentation>Other eligibility which is not covered by the main eligibility of the BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResidencyEligibility" type="tns:ResidencyEligibility">
            <xs:annotation>
              <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TradingHistoryEligibility" type="tns:TradingHistoryEligibility">
            <xs:annotation>
              <xs:documentation>Describes the trading history requirements to access the BCA product.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Eligibility1">
        <xs:annotation>
          <xs:documentation>Eligibility details for this product i.e. the criteria that an accountholder has to meet in order to be eligible for the CCC product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgeEligibility" type="tns:AgeEligibility1">
            <xs:annotation>
              <xs:documentation>Age eligibility for CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditCheckEligibility" type="tns:CreditCheckEligibility1">
            <xs:annotation>
              <xs:documentation>Credit check criteria that the account holder will need to meet to take out the CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IDEligibility" type="tns:IDEligibility1">
            <xs:annotation>
              <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IndustryEligibility" type="tns:IndustryEligibility1">
            <xs:annotation>
              <xs:documentation>Industry Eligibility that the account holder will need to meet to take out the CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LegalStructureEligibility" type="tns:LegalStructureEligibility1">
            <xs:annotation>
              <xs:documentation>Legal structure eligibility requirement to access the CCC product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OfficerEligibility" type="tns:OfficerEligibility1">
            <xs:annotation>
              <xs:documentation>Describes the requirement of the officers(owner, partner, directors) to access the CCC product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherEligibility" type="tns:OtherEligibility1">
            <xs:annotation>
              <xs:documentation>Other eligibility which is not covered by the main eligibility of the CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResidencyEligibility" type="tns:ResidencyEligibility1">
            <xs:annotation>
              <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TradingHistoryEligibility" type="tns:TradingHistoryEligibility1">
            <xs:annotation>
              <xs:documentation>Describes the trading history requirements to access the CCC product.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Eligibility2">
        <xs:annotation>
          <xs:documentation>Eligibility details for this product i.e. the criteria that an accountholder has to meet in order to be eligible for the PCA product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgeEligibility" type="tns:AgeEligibility2">
            <xs:annotation>
              <xs:documentation>Age eligibility that a person should be to hold this account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditCheck" type="tns:CreditCheck">
            <xs:annotation>
              <xs:documentation>Credit check criteria that the account holder will need to meet to take out the PCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IDVerificationCheck" type="tns:IDVerificationCheck">
            <xs:annotation>
              <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the PCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherEligibility" type="tns:OtherEligibility2">
            <xs:annotation>
              <xs:documentation>Other eligibility which is not covered by the main eligibility of the PCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResidencyEligibility" type="tns:ResidencyEligibility2">
            <xs:annotation>
              <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Eligibility3">
        <xs:annotation>
          <xs:documentation>Eligibility details for this product i.e. the criteria that an business has to meet in order to be eligible for the SME Loan product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgeEligibility" type="tns:AgeEligibility3">
            <xs:annotation>
              <xs:documentation>Age eligibility apply for the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditCheckEligibility" type="tns:CreditCheckEligibility2">
            <xs:annotation>
              <xs:documentation>Credit check criteria that the account holder will need to meet to take out the loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IDEligibility" type="tns:IDEligibility2">
            <xs:annotation>
              <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IndustryEligibility" type="tns:IndustryEligibility2">
            <xs:annotation>
              <xs:documentation>Industry Eligibility that the account holder will need to meet to take out the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LegalStructureEligibility" type="tns:LegalStructureEligibility2">
            <xs:annotation>
              <xs:documentation>Legal structure eligibility requirement to access the SME Loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OfficerEligibility" type="tns:OfficerEligibility2">
            <xs:annotation>
              <xs:documentation>Describes the requirement of the officers(owner, partner, directors) to access the SME Loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherEligibility" type="tns:OtherEligibility3">
            <xs:annotation>
              <xs:documentation>Other eligibility which is not covered by the main eligibility of the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResidencyEligibility" type="tns:ResidencyEligibility3">
            <xs:annotation>
              <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TradingHistoryEligibility" type="tns:TradingHistoryEligibility2">
            <xs:annotation>
              <xs:documentation>Describes the trading history requirements to access the SME Loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EmailAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A name of a person or an office to which this email belongs.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Primary" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicator to show is this is the primary email address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of email address</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Value">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Value of email address</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Error">
        <xs:annotation>
          <xs:documentation>Error type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="invalid_redirect_uri" />
          <xs:enumeration value="invalid_client_metadata" />
          <xs:enumeration value="invalid_software_statement" />
          <xs:enumeration value="unapproved_software_statement" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Error1">
        <xs:restriction base="xs:string">
          <xs:enumeration value="invalid_redirect_uri" />
          <xs:enumeration value="invalid_client_metadata" />
          <xs:enumeration value="invalid_software_statement" />
          <xs:enumeration value="unapproved_software_statement" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="EventSubscription">
        <xs:sequence>
          <xs:element minOccurs="0" name="CallbackUrl">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Callback URL for a TPP hosted service. Will be used by ASPSPs, in conjunction with the resource name, to construct a URL to send event notifications to.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="EventSubscriptionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by the ASPSP to uniquely identify the callback url resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EventTypes">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version for the event notification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExchangeRateInformation">
        <xs:annotation>
          <xs:documentation>Provides details on the currency exchange rate and contract.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ContractIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="RateType" type="tns:RateType">
            <xs:annotation>
              <xs:documentation>Specifies the type used to complete the currency exchange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="UnitCurrency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExchangeRateInformation2">
        <xs:annotation>
          <xs:documentation>Further detailed information on the exchange rate that has been used in the payment transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ContractIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ExchangeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ExpirationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="RateType" type="tns:RateType">
            <xs:annotation>
              <xs:documentation>Specifies the type used to complete the currency exchange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="UnitCurrency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitEligibility">
        <xs:annotation>
          <xs:documentation>Feature and Benefit eligibility</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period3">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type3">
            <xs:annotation>
              <xs:documentation>eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitEligibility3">
        <xs:annotation>
          <xs:documentation>Feature and Benefit eligibility</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period8">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type12">
            <xs:annotation>
              <xs:documentation>Method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitEligibility6">
        <xs:annotation>
          <xs:documentation>Feature and Benefit eligibility</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period3">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type19">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitEligibility9">
        <xs:annotation>
          <xs:documentation>Feature and Benefit eligibility</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period8">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type30">
            <xs:annotation>
              <xs:documentation>eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitGroup">
        <xs:annotation>
          <xs:documentation>FeatureBenefitGroup can be used to group features &amp; benefits in to packages (which may be chargeable at the group level). E.g. Barclays Student Account allows you to purchase extra benefits packages</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ApplicationFrequency" type="tns:ApplicationFrequency">
            <xs:annotation>
              <xs:documentation>How frequently is the charge for the feature/benefit group applied to the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BenefitGroupNominalValue">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>BenefitGroupNominalValue is  to allow banks to state what they feel their benefit package is worth</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency">
            <xs:annotation>
              <xs:documentation>How frequently is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fee">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount that is charged to the customer for a pack of features/benefits</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Feature/Benefit Name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Feature Benefit Group details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType6">
            <xs:annotation>
              <xs:documentation>Any other types of features &amp; benefits which is not available in the standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type" type="tns:Type6">
            <xs:annotation>
              <xs:documentation>Common types of features and benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitGroup1">
        <xs:annotation>
          <xs:documentation>FeatureBenefitGroup can be used to group features &amp; benefits in to packages (which may be chargeable at the group level).</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ApplicationFrequency" type="tns:ApplicationFrequency4">
            <xs:annotation>
              <xs:documentation>How often is the charge for the feature/benefit group applied to the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BenefitGroupNominalValue">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>BenefitGroupNominalValue is  to allow banks to state what they feel their benefit package is worth</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency4">
            <xs:annotation>
              <xs:documentation>How often is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility3">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem2">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fee">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount that is charged to the customer for a pack of features/benefits</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Feature/Benefit Name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Feature Benefit Group details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType6">
            <xs:annotation>
              <xs:documentation>Any other types of features &amp; benefits which is not available in the standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type" type="tns:Type15">
            <xs:annotation>
              <xs:documentation>Common types of features &amp; benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitGroup2">
        <xs:annotation>
          <xs:documentation>Used to group multiple features/benefits where a charge is applied</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ApplicationFrequency" type="tns:ApplicationFrequency17">
            <xs:annotation>
              <xs:documentation>How often is the charge for the feature/benefit group applied to the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BenefitGroupNominalValue">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>BenefitGroupNominalValue is  to allow banks to state what they feel their benefit package is worth</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency17">
            <xs:annotation>
              <xs:documentation>How often is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility6">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem4">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fee">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee that is charged to the customer for a pack of features/benefits</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Feature/Benefit Name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Feature Benefit Group details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType5">
            <xs:annotation>
              <xs:documentation>Other common types of features &amp; benefits which are not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type" type="tns:Type24">
            <xs:annotation>
              <xs:documentation>Common types of features &amp; benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitGroup3">
        <xs:annotation>
          <xs:documentation>FeatureBenefitGroup can be used to group features &amp; benefits in to packages (which may be chargeable at the group level).</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ApplicationFrequency" type="tns:ApplicationFrequency21">
            <xs:annotation>
              <xs:documentation>How often is the charge for the feature/benefit group applied to the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BenefitGroupNominalValue">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>BenefitGroupNominalValue is  to allow banks to state what they feel their benefit package is worth</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency21">
            <xs:annotation>
              <xs:documentation>How often is the charge for the feature/benefit group calculated for the customer account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility9">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem6">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fee">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount that is charged to the customer for a pack of features/benefits</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Feature/Benefit Name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Feature Benefit Group details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType6">
            <xs:annotation>
              <xs:documentation>Any other types of features &amp; benefits which is not available in the standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type" type="tns:Type33">
            <xs:annotation>
              <xs:documentation>Common types of features &amp; benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitItem">
        <xs:annotation>
          <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount associated to the feature/benefit where applicable e.g. 200 Pounds worth of travel insurance</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Feature and Benefit Item.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True/False indicator for a particular feature/benefit e.g. Interest Free Overdraft? Yes or No</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name which can be attached to the feature/benefit</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the feature/benefit item. Only used for very specific conditions</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType5">
            <xs:annotation>
              <xs:documentation>Other common types of features &amp; benefits which are not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provides textual information about a feature/benefit e.g. 10% off cinema tickets on Tuesday nights</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type5">
            <xs:annotation>
              <xs:documentation>Feature and Benefit type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitItem2">
        <xs:annotation>
          <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount associated to the feature/benefit where applicable e.g. 200 Pounds worth of travel insurance</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility3">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Feature and Benefit Item.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True/False indicator for a particular feature/benefit e.g. Interest Free BalanceTransfer?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name which can be attached to the feature/benefit</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the feature/benefit item. Only used for very specific conditions</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType5">
            <xs:annotation>
              <xs:documentation>Other common types of features &amp; benefits which are not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provides textual information about a feature/benefit e.g. 10% off cinema tickets on Tuesday nights</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type14">
            <xs:annotation>
              <xs:documentation>Feature and Benefit type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitItem4">
        <xs:annotation>
          <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount associated to the feature/benefit where applicable e.g. 200 Pounds worth of travel insurance</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility6">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Feature and Benefit Item.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True/False indicator for a particular feature/benefit e.g. Interest Free Overdraft?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name which can be attached to the feature/benefit</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the feature/benefit item. Only used for very specific conditions</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType5">
            <xs:annotation>
              <xs:documentation>Other common types of features &amp; benefits which are not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provides textual information about a feature/benefit e.g. 10% off cinema tickets on Tuesday nights</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type24">
            <xs:annotation>
              <xs:documentation>Common types of features &amp; benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureBenefitItem6">
        <xs:annotation>
          <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount associated to the feature/benefit where applicable e.g. 200 Pounds worth of travel insurance</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitEligibility" type="tns:FeatureBenefitEligibility9">
            <xs:annotation>
              <xs:documentation>Feature and Benefit eligibility</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Feature and Benefit Item.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True/False indicator for a particular feature/benefit e.g. Interest Free Period Yes or No</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name which can be attached to the feature/benefit</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the feature/benefit item. Only used for very specific conditions</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType5">
            <xs:annotation>
              <xs:documentation>Other common types of features &amp; benefits which are not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provides textual information about a feature/benefit e.g. 10% off cinema tickets on Tuesday nights</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type32">
            <xs:annotation>
              <xs:documentation>Feature and Benefit type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeaturesAndBenefits">
        <xs:annotation>
          <xs:documentation>Feature And Benefits Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Card" type="tns:Card">
            <xs:annotation>
              <xs:documentation>Payment Card Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitGroup" type="tns:FeatureBenefitGroup">
            <xs:annotation>
              <xs:documentation>FeatureBenefitGroup can be used to group features &amp; benefits in to packages (which may be chargeable at the group level). E.g. Barclays Student Account allows you to purchase extra benefits packages</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="MobileWallet" type="tns:MobileWallet">
            <xs:annotation>
              <xs:documentation>Details about the mobile application services that may be available with the BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeaturesAndBenefits1">
        <xs:annotation>
          <xs:documentation>Feature And Benefits Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitGroup" type="tns:FeatureBenefitGroup1">
            <xs:annotation>
              <xs:documentation>FeatureBenefitGroup can be used to group features &amp; benefits in to packages (which may be chargeable at the group level).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem2">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeaturesAndBenefits2">
        <xs:annotation>
          <xs:documentation>Feature And Benefits Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Card" type="tns:Card1">
            <xs:annotation>
              <xs:documentation>Payment Card Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitGroup" type="tns:FeatureBenefitGroup2">
            <xs:annotation>
              <xs:documentation>Used to group multiple features/benefits where a charge is applied</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem4">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="MobileWallet" type="tns:MobileWallet1">
            <xs:annotation>
              <xs:documentation>Details about the mobile application services that may be available with the PCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeaturesAndBenefits3">
        <xs:annotation>
          <xs:documentation>Feature And Benefits Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitGroup" type="tns:FeatureBenefitGroup3">
            <xs:annotation>
              <xs:documentation>FeatureBenefitGroup can be used to group features &amp; benefits in to packages (which may be chargeable at the group level).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeatureBenefitItem" type="tns:FeatureBenefitItem6">
            <xs:annotation>
              <xs:documentation>Detailed features or benefits which may or may not be a part of a feature/benefit group/pack</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Fee">
        <xs:annotation>
          <xs:documentation>Fee associated with the offer type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeApplicableRange">
        <xs:annotation>
          <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaximumAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum Amount on which fee is applicable (where it is expressed as an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MaximumRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum rate on which fee/charge is applicable(where it is expressed as an rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum Amount on which fee/charge is applicable (where it is expressed as an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum rate on which fee/charge is applicable(where it is expressed as an rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeApplicableRange3">
        <xs:annotation>
          <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaximumAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum Amount on which fee is applicable (where it is expressed as an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MaximumRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum rate on which fee/charge is applicable(where it is expressed as an rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum Amount on which fee/charge is applicable (where it is expressed as an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum rate on which fee/charge is applicable(where it is expressed as an rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="FeeCategory">
        <xs:annotation>
          <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Auto" />
          <xs:enumeration value="ATM" />
          <xs:enumeration value="BankersDrafts" />
          <xs:enumeration value="CashCentre" />
          <xs:enumeration value="Card" />
          <xs:enumeration value="Cheque" />
          <xs:enumeration value="CounterServices" />
          <xs:enumeration value="DirectDebit" />
          <xs:enumeration value="Deeds" />
          <xs:enumeration value="Foreign" />
          <xs:enumeration value="FX" />
          <xs:enumeration value="International" />
          <xs:enumeration value="Investigation" />
          <xs:enumeration value="Legal" />
          <xs:enumeration value="Loan" />
          <xs:enumeration value="NightSafe" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PostOffice" />
          <xs:enumeration value="PaymentScheme" />
          <xs:enumeration value="Report" />
          <xs:enumeration value="Safekeeping" />
          <xs:enumeration value="Servicing" />
          <xs:enumeration value="Transaction" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeCategory2">
        <xs:annotation>
          <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CashAdvance" />
          <xs:enumeration value="BalanceTransfer" />
          <xs:enumeration value="Purchase" />
          <xs:enumeration value="Cheque" />
          <xs:enumeration value="Card" />
          <xs:enumeration value="FX" />
          <xs:enumeration value="Penalty" />
          <xs:enumeration value="Servicing" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeCategory5">
        <xs:annotation>
          <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Other" />
          <xs:enumeration value="Servicing" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeCategory9">
        <xs:annotation>
          <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AUTO" />
          <xs:enumeration value="ATM" />
          <xs:enumeration value="BankersDrafts" />
          <xs:enumeration value="CashCentre" />
          <xs:enumeration value="Card" />
          <xs:enumeration value="Cheque" />
          <xs:enumeration value="CounterServices" />
          <xs:enumeration value="Foreign" />
          <xs:enumeration value="FX" />
          <xs:enumeration value="International" />
          <xs:enumeration value="Investigation" />
          <xs:enumeration value="Legal" />
          <xs:enumeration value="NightSafe" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PaymentScheme" />
          <xs:enumeration value="Report" />
          <xs:enumeration value="Safekeeping" />
          <xs:enumeration value="Servicing" />
          <xs:enumeration value="Transaction" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeCategory11">
        <xs:annotation>
          <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BankersDrafts" />
          <xs:enumeration value="CounterServices" />
          <xs:enumeration value="Foreign" />
          <xs:enumeration value="Legal" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PaymentScheme" />
          <xs:enumeration value="Penalty" />
          <xs:enumeration value="Repayment" />
          <xs:enumeration value="Report" />
          <xs:enumeration value="Safekeeping" />
          <xs:enumeration value="Servicing" />
          <xs:enumeration value="Transaction" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="FeeChargeCap">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeCap1">
        <xs:annotation>
          <xs:documentation>Details about any caps (minimum/maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod5">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType8">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeCap2">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular or group of fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod5">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType12">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeCap4">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular or group of fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:OB_Period1Code">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType21" />
          <xs:element minOccurs="1" name="MinMaxType" type="tns:OB_MinMaxType1Code">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType21" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeCap6">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType30">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType15">
            <xs:annotation>
              <xs:documentation>Indicates that this is the minimum/ maximum fee/charge that can be applied by the financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeCap8">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType39">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType15">
            <xs:annotation>
              <xs:documentation>Indicates that this is the minimum/ maximum fee/charge that can be applied by the financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeCap9">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod5">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType47">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency1">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency1">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType1">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncludedInMonthlyChargeIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates that fee/charge is already included in the monthly charge.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategory" type="tns:OtherFeeCategory" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType1">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail1">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency5">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency5">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory2">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType9">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncludedInPeriodicFeeIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Commercial credit cards often have a periodic fee charged (defined in CoreProduct section). Some Fees/charges may be covered by the periodic fee, and you can use the IncludedInPeriodicFeeIndicator to indicate that this is so</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable(YES) rather than a fixed(NO) amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategory" type="tns:OtherFeeCategory" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType9">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail2">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency1">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency1">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory5">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap2">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular or group of fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType14">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency2">
            <xs:annotation>
              <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategoryType" type="tns:OtherFeeCategoryType" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType14">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail3">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:OB_FeeFrequency1Code_2">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:OB_FeeFrequency1Code_3">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange3">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:OB_FeeCategory1Code">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap4" />
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:OB_InterestRateType1Code_1">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:OB_FeeType1Code">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OB_OtherCodeType1_6">
            <xs:annotation>
              <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OB_OtherCodeType1_7">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategoryType" type="tns:OB_OtherCodeType1_0" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OB_OtherCodeType1_8">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OB_OtherFeeChargeDetailType">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail4">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency13">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency13">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory5">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap6">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType8">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType32">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency2">
            <xs:annotation>
              <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategoryType" type="tns:OtherFeeCategoryType" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType14">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail5">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency13">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency13">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory9">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType8">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType40">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategory" type="tns:OtherFeeCategory" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType40">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeeChargeDetail6">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency22">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency22">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeApplicableRange" type="tns:FeeApplicableRange">
            <xs:annotation>
              <xs:documentation>Range or amounts or rates for which the fee/charge applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCategory" type="tns:FeeCategory11">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType14">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType48">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeCategory" type="tns:OtherFeeCategory" />
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType48">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="FeeFreeLengthPeriod">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="HalfYear" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeFreeLengthPeriod1">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeFreeLengthPeriod2">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PACT" />
          <xs:enumeration value="PDAY" />
          <xs:enumeration value="PHYR" />
          <xs:enumeration value="PMTH" />
          <xs:enumeration value="PQTR" />
          <xs:enumeration value="PWEK" />
          <xs:enumeration value="PYER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeRateType">
        <xs:annotation>
          <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeRateType1">
        <xs:annotation>
          <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeRateType8">
        <xs:annotation>
          <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="LinkedBaseRate" />
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Net" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeRateType9">
        <xs:annotation>
          <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="LinkedBaseRate" />
          <xs:enumeration value="Gross" />
          <xs:enumeration value="Net" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeRateType14">
        <xs:annotation>
          <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BOEBaseRate" />
          <xs:enumeration value="FixedRate" />
          <xs:enumeration value="Gross" />
          <xs:enumeration value="LoanProviderBaseRate" />
          <xs:enumeration value="Net" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CashCentreCoinHandling" />
          <xs:enumeration value="CashCentreCashX" />
          <xs:enumeration value="CashCentreCashFeePercent" />
          <xs:enumeration value="CashCentreCashFeeRate" />
          <xs:enumeration value="CashCentreNotesLodged" />
          <xs:enumeration value="CashCentreNotesOut" />
          <xs:enumeration value="CashCentreCashIn" />
          <xs:enumeration value="CashCentreCashOut" />
          <xs:enumeration value="ATMDeposATMPaidIn" />
          <xs:enumeration value="ReportCertBalance" />
          <xs:enumeration value="ATMAbroadConVisaDebit" />
          <xs:enumeration value="ATMCardnetEnvIn" />
          <xs:enumeration value="ATMCashGroupATMDebitCard" />
          <xs:enumeration value="ATMCashNonGroupATMDebitcard" />
          <xs:enumeration value="ATMConGroupATM" />
          <xs:enumeration value="ATMAbroad" />
          <xs:enumeration value="ATMForeignCashDebCard" />
          <xs:enumeration value="ATMAbroadGoldVisaDebit" />
          <xs:enumeration value="ATMNonSterlingWithdrawal" />
          <xs:enumeration value="ATMAbroadVisaDebit" />
          <xs:enumeration value="ATMWithdrawCash" />
          <xs:enumeration value="BACSOnLineAncilliary" />
          <xs:enumeration value="BACSBatch" />
          <xs:enumeration value="BACSOnLineFile" />
          <xs:enumeration value="BACSItem" />
          <xs:enumeration value="BACSBulkBatch" />
          <xs:enumeration value="BACSOnLineOverlimit" />
          <xs:enumeration value="BACSOnLinePayment" />
          <xs:enumeration value="BACSOnLineService" />
          <xs:enumeration value="BACSBulkInternet" />
          <xs:enumeration value="BACSTELDirDebSmartCard" />
          <xs:enumeration value="BACSTELDirDebWebInit" />
          <xs:enumeration value="BACSTELirDebWebInit" />
          <xs:enumeration value="BACSTELDirDebOverlimit" />
          <xs:enumeration value="BACSTELDirDebPayment" />
          <xs:enumeration value="BACSTELDirDebService" />
          <xs:enumeration value="BACSTELDirDebAncilliary" />
          <xs:enumeration value="BACSTELAncilliary" />
          <xs:enumeration value="BACSTELSmartCard" />
          <xs:enumeration value="BACSTELFile" />
          <xs:enumeration value="BACSTELOverlimit" />
          <xs:enumeration value="BACSTELPayment" />
          <xs:enumeration value="BACSTELService" />
          <xs:enumeration value="CHAPSOutBranch" />
          <xs:enumeration value="CHAPSOutOnlineDepositAcc" />
          <xs:enumeration value="CHAPSIn" />
          <xs:enumeration value="CHAPSOutPost" />
          <xs:enumeration value="CHAPSOut" />
          <xs:enumeration value="CHAPSOutOnline" />
          <xs:enumeration value="CHAPSOutManual" />
          <xs:enumeration value="CardCardReplacement" />
          <xs:enumeration value="DraftsBankers" />
          <xs:enumeration value="DraftsCancellation" />
          <xs:enumeration value="CardGuaranteed" />
          <xs:enumeration value="DraftsIntlPayableAbroad" />
          <xs:enumeration value="DraftsIntlStoppedCancelled" />
          <xs:enumeration value="EuroChqXLess" />
          <xs:enumeration value="EuroChqXPlus" />
          <xs:enumeration value="FPSOut" />
          <xs:enumeration value="FPSOutOwn" />
          <xs:enumeration value="FPSInBranch" />
          <xs:enumeration value="LegalArticlesReport" />
          <xs:enumeration value="LegalSealing" />
          <xs:enumeration value="LegalBondAndGuarantee" />
          <xs:enumeration value="LegalCoSearch" />
          <xs:enumeration value="LegalDepositAssignment" />
          <xs:enumeration value="LegalGuaranteePrep" />
          <xs:enumeration value="LegalLifePolicyPrepCo" />
          <xs:enumeration value="LegalLifePolicyPrepPersonal" />
          <xs:enumeration value="LegalPriorityPariPassu" />
          <xs:enumeration value="LegalSubordinationAgreement" />
          <xs:enumeration value="DirDebDirectDebitAdmin" />
          <xs:enumeration value="DirDebDirectDebitCancel" />
          <xs:enumeration value="IntlPayBIBForeignLimit" />
          <xs:enumeration value="IntlPayCreditTransCust" />
          <xs:enumeration value="IntlPayCreditTransNonCust" />
          <xs:enumeration value="IntlPayExpressMoneyMover" />
          <xs:enumeration value="IntlPayEEAPayUrgent" />
          <xs:enumeration value="IntlPayIrishPayUrgent" />
          <xs:enumeration value="IntlPayEEAPay" />
          <xs:enumeration value="IntlPayFXPaymentIn" />
          <xs:enumeration value="IntlPayForeignIn1CPlus" />
          <xs:enumeration value="IntlPayForeignCharge" />
          <xs:enumeration value="IntlPayForeignInternet" />
          <xs:enumeration value="IntlPayForeignInSub1C" />
          <xs:enumeration value="IntlPayPurchaseNonSterling" />
          <xs:enumeration value="IntlPayPaymentTracing" />
          <xs:enumeration value="IntlPayStandardMoneyMover" />
          <xs:enumeration value="IntlPayMT101Transaction" />
          <xs:enumeration value="IntlPayWorldpayPayment" />
          <xs:enumeration value="InvPayBankDetailsWrong" />
          <xs:enumeration value="InvPayForeignBCNR" />
          <xs:enumeration value="InvPayForeignRecall" />
          <xs:enumeration value="InvGeneralInq" />
          <xs:enumeration value="InvOldInstruction" />
          <xs:enumeration value="InvPayReturnDebitXVLess" />
          <xs:enumeration value="InvPayReturnDebitXVPlus" />
          <xs:enumeration value="InvPayStopPayment" />
          <xs:enumeration value="InvPayStandingOrdUnpaid" />
          <xs:enumeration value="SafeKeepAccess" />
          <xs:enumeration value="SafeKeepDeedMedium" />
          <xs:enumeration value="SafeKeepingEnvelope" />
          <xs:enumeration value="SafeKeepingInspection" />
          <xs:enumeration value="SafeKeepingLargeItem" />
          <xs:enumeration value="SafeKeepMultipleItems" />
          <xs:enumeration value="SafeKeepingParcel" />
          <xs:enumeration value="SafeKeepDeedSmall" />
          <xs:enumeration value="SafeKeepOneItem" />
          <xs:enumeration value="LoanArrangement" />
          <xs:enumeration value="NightSafeNightSafeBankOpen" />
          <xs:enumeration value="NightSafeCreditSub5K" />
          <xs:enumeration value="NightSafeNightSafe" />
          <xs:enumeration value="NightSafeNightSafePaidIn" />
          <xs:enumeration value="POPostOfficeCounterCredit" />
          <xs:enumeration value="POPostOfficeCashCredit" />
          <xs:enumeration value="POPostOfficeCashOut" />
          <xs:enumeration value="POPostOfficeWithdrawal" />
          <xs:enumeration value="ChqBookTheftLossAllStopped" />
          <xs:enumeration value="ChqIssuedCurrencyAcc" />
          <xs:enumeration value="ChqCopy" />
          <xs:enumeration value="ChqDraft" />
          <xs:enumeration value="ChqIn" />
          <xs:enumeration value="ChqSpecialChqClearance" />
          <xs:enumeration value="ChqinCashCentre" />
          <xs:enumeration value="ChqOutIssued" />
          <xs:enumeration value="ChqSpecialChqPresentation" />
          <xs:enumeration value="ChqCounterCheque" />
          <xs:enumeration value="ChqChequeswithStatement" />
          <xs:enumeration value="ChqStopped" />
          <xs:enumeration value="ChqTrans" />
          <xs:enumeration value="ChqDraftFX" />
          <xs:enumeration value="ChqForeignCourier" />
          <xs:enumeration value="ChqForeignNegTenThou" />
          <xs:enumeration value="ChqForeignNegHundred" />
          <xs:enumeration value="ChequeForeignBankDivi" />
          <xs:enumeration value="ChqForeignNegFiftyThou" />
          <xs:enumeration value="ChqPensionCheque" />
          <xs:enumeration value="ChequeForeignOtherDivi" />
          <xs:enumeration value="ChqForeignNegFiveThou" />
          <xs:enumeration value="ChqForeignNegMax" />
          <xs:enumeration value="ChqForeignGBPMMDPlus" />
          <xs:enumeration value="ChqGiftCheque" />
          <xs:enumeration value="ChqCounterLodgement" />
          <xs:enumeration value="ChqCashDropLodgement" />
          <xs:enumeration value="ChqForeign" />
          <xs:enumeration value="ChqChequePhotocopy" />
          <xs:enumeration value="ChqPostOfficeCredit" />
          <xs:enumeration value="ChqPostOfficeChequeCollected" />
          <xs:enumeration value="ChqChequeRetrieval" />
          <xs:enumeration value="ChqReconcilliationPerTrans" />
          <xs:enumeration value="ChqSpecialPresentationCount" />
          <xs:enumeration value="ChqSpecialPresentationPTT" />
          <xs:enumeration value="ChqDraftSterling" />
          <xs:enumeration value="ChqUnpaidCharge" />
          <xs:enumeration value="ChqUnpaidTransIn" />
          <xs:enumeration value="ChqUnpaidTransOut" />
          <xs:enumeration value="ChqUnpaidCheque" />
          <xs:enumeration value="ReportAuditLetter" />
          <xs:enumeration value="ReportFAXAdviceAdditional" />
          <xs:enumeration value="ReportTelAdviceAdditional" />
          <xs:enumeration value="ReportCreditHistory" />
          <xs:enumeration value="ReportCertInterestDuplicate" />
          <xs:enumeration value="ReportCertInterest" />
          <xs:enumeration value="ReportCreditHistoryAdditionalInYear" />
          <xs:enumeration value="ReportForeignStatusEnqElec" />
          <xs:enumeration value="ReportForeignStatusEnq" />
          <xs:enumeration value="ReportStatementChqDaily" />
          <xs:enumeration value="ReportStatementChqFortnightly" />
          <xs:enumeration value="ReportStatementChqMonthly" />
          <xs:enumeration value="ReportStatementChqWeekly" />
          <xs:enumeration value="ReportStatementAndDiviChq" />
          <xs:enumeration value="ReportReferralItem" />
          <xs:enumeration value="ReportStatementByATM" />
          <xs:enumeration value="ReportStatementByBranch" />
          <xs:enumeration value="ReportStatementCopyRegular" />
          <xs:enumeration value="ReportStatementDaily" />
          <xs:enumeration value="ReportStatusEnquiry" />
          <xs:enumeration value="ReportStatementFrequent" />
          <xs:enumeration value="ReportStatementMonthly" />
          <xs:enumeration value="ReportStatementCopy1" />
          <xs:enumeration value="ReportStatementToBranch" />
          <xs:enumeration value="ReportSMSTextMiniStatementorAlert" />
          <xs:enumeration value="ReportStatementFortnightly" />
          <xs:enumeration value="ReportSMSTextMiniStatementWoM" />
          <xs:enumeration value="ReportSMSTextAlertBalance" />
          <xs:enumeration value="ReportSMSTextAlert" />
          <xs:enumeration value="ReportTaxCert" />
          <xs:enumeration value="ReportWeeklyStatement" />
          <xs:enumeration value="SEPABranch" />
          <xs:enumeration value="SEPACredit" />
          <xs:enumeration value="SEPADirectDebit" />
          <xs:enumeration value="SEPAIn" />
          <xs:enumeration value="SEPAEuro" />
          <xs:enumeration value="SEPAOut" />
          <xs:enumeration value="SEPAUnpaid" />
          <xs:enumeration value="SEPAWinbitsTransaction" />
          <xs:enumeration value="TransBillPaymentBranch" />
          <xs:enumeration value="TransBillCollect" />
          <xs:enumeration value="TransTelephoneBillPayment" />
          <xs:enumeration value="TransBankPayment" />
          <xs:enumeration value="TransBillPaymentTelephone" />
          <xs:enumeration value="TransCorrespondentBankFee" />
          <xs:enumeration value="TransCreditTransferUKDifferent" />
          <xs:enumeration value="TransCreditTransferUKSame" />
          <xs:enumeration value="TransCredit" />
          <xs:enumeration value="TransCreditTransfer" />
          <xs:enumeration value="TransBranchCredit" />
          <xs:enumeration value="TransDebit" />
          <xs:enumeration value="TransDebCardDeb" />
          <xs:enumeration value="TransUKDirDeb" />
          <xs:enumeration value="TransManualDeb" />
          <xs:enumeration value="TitleDeeds" />
          <xs:enumeration value="TransBuyForeignWithGBP" />
          <xs:enumeration value="TransGoodValueReq" />
          <xs:enumeration value="TransSWIFTOutUKForeign" />
          <xs:enumeration value="TransInconpleteInstruction" />
          <xs:enumeration value="TransManualEntries" />
          <xs:enumeration value="TransManualTrans" />
          <xs:enumeration value="TransNonSterling" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="TransPOSSaleForeign" />
          <xs:enumeration value="TransPriPaymentPost" />
          <xs:enumeration value="TransPOSSaleUK" />
          <xs:enumeration value="TransReconciliationPerTrans" />
          <xs:enumeration value="TransStandingOrdAdmin" />
          <xs:enumeration value="TransStandingOrd" />
          <xs:enumeration value="TransStandingOrdManPay" />
          <xs:enumeration value="TransTelBusiPriPaymentForeignToUKAcc" />
          <xs:enumeration value="TransTeleItem" />
          <xs:enumeration value="TransTelBusiPriPaymentToGrpAcc" />
          <xs:enumeration value="TransTransferExGroup" />
          <xs:enumeration value="TransTelBusiPriPaymentToNonGrpAcc" />
          <xs:enumeration value="TransSWIFTOutNonEEASterling" />
          <xs:enumeration value="AutoAutoCredit" />
          <xs:enumeration value="AutoAutomatedEntries" />
          <xs:enumeration value="AutoAutoCreditPhoneInet" />
          <xs:enumeration value="AutoAutomatedTrans" />
          <xs:enumeration value="AutoDebitCardCommercial" />
          <xs:enumeration value="AutoFPSAutoCredit" />
          <xs:enumeration value="VisaTravellersChqorCurrency" />
          <xs:enumeration value="OnlineInternetBillPayment" />
          <xs:enumeration value="OnlineBusinessOnlineEuroPayment" />
          <xs:enumeration value="OnlineBusinessOnlineUrgentEuroPayment" />
          <xs:enumeration value="OnlineBusinessOnlineForeignPayment" />
          <xs:enumeration value="OnlineInterbankTransfer" />
          <xs:enumeration value="OnlineInterbankPerTransfer" />
          <xs:enumeration value="OnlineInterbranchTransfer" />
          <xs:enumeration value="OnlineInterbranchPerTransfer" />
          <xs:enumeration value="OnlineSubscriptionMonthly" />
          <xs:enumeration value="OnlineBankingPayment" />
          <xs:enumeration value="OnlineReplacementCardReader" />
          <xs:enumeration value="OnlinePaymentinGBPtoUK" />
          <xs:enumeration value="OnlineUrgentPayment" />
          <xs:enumeration value="OnlinePaymentinUSDtoUS" />
          <xs:enumeration value="OnlineBulkDirectDebSterling" />
          <xs:enumeration value="ForeignChqSent" />
          <xs:enumeration value="ForeignChqSelf" />
          <xs:enumeration value="ForeignChqEncashment" />
          <xs:enumeration value="ForeignFXInwardsCust" />
          <xs:enumeration value="ForeignFXTransfersROI" />
          <xs:enumeration value="ForeignFXForwardTrans" />
          <xs:enumeration value="ForeignExMaintenance" />
          <xs:enumeration value="ForeignFXInwardsNonCust" />
          <xs:enumeration value="ForeignFXOutwards" />
          <xs:enumeration value="ForeignPurchase" />
          <xs:enumeration value="ForeignStatusRep" />
          <xs:enumeration value="ForeignChqDraft" />
          <xs:enumeration value="ForeignChqCLess" />
          <xs:enumeration value="ForeignChqMLess" />
          <xs:enumeration value="ForeignChqOther" />
          <xs:enumeration value="ForeignChqMPlus" />
          <xs:enumeration value="ForeignChqCCC" />
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCAccountFeeQuarterly" />
          <xs:enumeration value="ServiceCFixedTariff" />
          <xs:enumeration value="ServiceCBusiDepAccBreakage" />
          <xs:enumeration value="ServiceCMonitorDaily" />
          <xs:enumeration value="ServiceCMinimumMonthlyFee" />
          <xs:enumeration value="ServiceCMonitorMonthly" />
          <xs:enumeration value="ServiceCMonitorWeekly" />
          <xs:enumeration value="ServiceCMT940AccountFirst" />
          <xs:enumeration value="ServiceCMT940AccountSubsequent" />
          <xs:enumeration value="ServiceCOther" />
          <xs:enumeration value="CounterCoinHandling" />
          <xs:enumeration value="CounterCashIn" />
          <xs:enumeration value="CounterCashInNotUs" />
          <xs:enumeration value="CounterCashOut" />
          <xs:enumeration value="CounterCashX" />
          <xs:enumeration value="CounterForeignNoteHandling" />
          <xs:enumeration value="CounterCashFeeRate" />
          <xs:enumeration value="CounterForeignCashOutTx" />
          <xs:enumeration value="CounterCounterLodgement" />
          <xs:enumeration value="CounterCashDropLodgement" />
          <xs:enumeration value="CounterNotesLodged" />
          <xs:enumeration value="CounterNotesOut" />
          <xs:enumeration value="CounterCashInOwn" />
          <xs:enumeration value="CounterCashFeePercent" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType1">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CashCentreCoinHandling" />
          <xs:enumeration value="CashCentreCashX" />
          <xs:enumeration value="CashCentreCashFeePercent" />
          <xs:enumeration value="CashCentreCashFeeRate" />
          <xs:enumeration value="CashCentreNotesLodged" />
          <xs:enumeration value="CashCentreNotesOut" />
          <xs:enumeration value="CashCentreCashIn" />
          <xs:enumeration value="CashCentreCashOut" />
          <xs:enumeration value="ATMDeposATMPaidIn" />
          <xs:enumeration value="ReportCertBalance" />
          <xs:enumeration value="ATMAbroadConVisaDebit" />
          <xs:enumeration value="ATMCardnetEnvIn" />
          <xs:enumeration value="ATMCashGroupATMDebitCard" />
          <xs:enumeration value="ATMCashNonGroupATMDebitcard" />
          <xs:enumeration value="ATMConGroupATM" />
          <xs:enumeration value="ATMAbroad" />
          <xs:enumeration value="ATMForeignCashDebCard" />
          <xs:enumeration value="ATMAbroadGoldVisaDebit" />
          <xs:enumeration value="ATMNonSterlingWithdrawal" />
          <xs:enumeration value="ATMAbroadVisaDebit" />
          <xs:enumeration value="ATMWithdrawCash" />
          <xs:enumeration value="BACSOnLineAncilliary" />
          <xs:enumeration value="BACSBatch" />
          <xs:enumeration value="BACSOnLineFile" />
          <xs:enumeration value="BACSItem" />
          <xs:enumeration value="BACSBulkBatch" />
          <xs:enumeration value="BACSOnLineOverlimit" />
          <xs:enumeration value="BACSOnLinePayment" />
          <xs:enumeration value="BACSOnLineService" />
          <xs:enumeration value="BACSBulkInternet" />
          <xs:enumeration value="BACSTELDirDebSmartCard" />
          <xs:enumeration value="BACSTELDirDebWebInit" />
          <xs:enumeration value="BACSTELirDebWebInit" />
          <xs:enumeration value="BACSTELDirDebOverlimit" />
          <xs:enumeration value="BACSTELDirDebPayment" />
          <xs:enumeration value="BACSTELDirDebService" />
          <xs:enumeration value="BACSTELDirDebAncilliary" />
          <xs:enumeration value="BACSTELAncilliary" />
          <xs:enumeration value="BACSTELSmartCard" />
          <xs:enumeration value="BACSTELFile" />
          <xs:enumeration value="BACSTELOverlimit" />
          <xs:enumeration value="BACSTELPayment" />
          <xs:enumeration value="BACSTELService" />
          <xs:enumeration value="CHAPSOutBranch" />
          <xs:enumeration value="CHAPSOutOnlineDepositAcc" />
          <xs:enumeration value="CHAPSIn" />
          <xs:enumeration value="CHAPSOutPost" />
          <xs:enumeration value="CHAPSOut" />
          <xs:enumeration value="CHAPSOutOnline" />
          <xs:enumeration value="CHAPSOutManual" />
          <xs:enumeration value="CardCardReplacement" />
          <xs:enumeration value="DraftsBankers" />
          <xs:enumeration value="DraftsCancellation" />
          <xs:enumeration value="CardGuaranteed" />
          <xs:enumeration value="DraftsIntlPayableAbroad" />
          <xs:enumeration value="DraftsIntlStoppedCancelled" />
          <xs:enumeration value="EuroChqXLess" />
          <xs:enumeration value="EuroChqXPlus" />
          <xs:enumeration value="FPSOut" />
          <xs:enumeration value="FPSOutOwn" />
          <xs:enumeration value="FPSInBranch" />
          <xs:enumeration value="LegalArticlesReport" />
          <xs:enumeration value="LegalSealing" />
          <xs:enumeration value="LegalBondAndGuarantee" />
          <xs:enumeration value="LegalCoSearch" />
          <xs:enumeration value="LegalDepositAssignment" />
          <xs:enumeration value="LegalGuaranteePrep" />
          <xs:enumeration value="LegalLifePolicyPrepCo" />
          <xs:enumeration value="LegalLifePolicyPrepPersonal" />
          <xs:enumeration value="LegalPriorityPariPassu" />
          <xs:enumeration value="LegalSubordinationAgreement" />
          <xs:enumeration value="DirDebDirectDebitAdmin" />
          <xs:enumeration value="DirDebDirectDebitCancel" />
          <xs:enumeration value="IntlPayBIBForeignLimit" />
          <xs:enumeration value="IntlPayCreditTransCust" />
          <xs:enumeration value="IntlPayCreditTransNonCust" />
          <xs:enumeration value="IntlPayExpressMoneyMover" />
          <xs:enumeration value="IntlPayEEAPayUrgent" />
          <xs:enumeration value="IntlPayIrishPayUrgent" />
          <xs:enumeration value="IntlPayEEAPay" />
          <xs:enumeration value="IntlPayFXPaymentIn" />
          <xs:enumeration value="IntlPayForeignIn1CPlus" />
          <xs:enumeration value="IntlPayForeignCharge" />
          <xs:enumeration value="IntlPayForeignInternet" />
          <xs:enumeration value="IntlPayForeignInSub1C" />
          <xs:enumeration value="IntlPayPurchaseNonSterling" />
          <xs:enumeration value="IntlPayPaymentTracing" />
          <xs:enumeration value="IntlPayStandardMoneyMover" />
          <xs:enumeration value="IntlPayMT101Transaction" />
          <xs:enumeration value="IntlPayWorldpayPayment" />
          <xs:enumeration value="InvPayBankDetailsWrong" />
          <xs:enumeration value="InvPayForeignBCNR" />
          <xs:enumeration value="InvPayForeignRecall" />
          <xs:enumeration value="InvGeneralInq" />
          <xs:enumeration value="InvOldInstruction" />
          <xs:enumeration value="InvPayReturnDebitXVLess" />
          <xs:enumeration value="InvPayReturnDebitXVPlus" />
          <xs:enumeration value="InvPayStopPayment" />
          <xs:enumeration value="InvPayStandingOrdUnpaid" />
          <xs:enumeration value="SafeKeepAccess" />
          <xs:enumeration value="SafeKeepDeedMedium" />
          <xs:enumeration value="SafeKeepingEnvelope" />
          <xs:enumeration value="SafeKeepingInspection" />
          <xs:enumeration value="SafeKeepingLargeItem" />
          <xs:enumeration value="SafeKeepMultipleItems" />
          <xs:enumeration value="SafeKeepingParcel" />
          <xs:enumeration value="SafeKeepDeedSmall" />
          <xs:enumeration value="SafeKeepOneItem" />
          <xs:enumeration value="LoanArrangement" />
          <xs:enumeration value="NightSafeNightSafeBankOpen" />
          <xs:enumeration value="NightSafeCreditSub5K" />
          <xs:enumeration value="NightSafeNightSafe" />
          <xs:enumeration value="NightSafeNightSafePaidIn" />
          <xs:enumeration value="POPostOfficeCounterCredit" />
          <xs:enumeration value="POPostOfficeCashCredit" />
          <xs:enumeration value="POPostOfficeCashOut" />
          <xs:enumeration value="POPostOfficeWithdrawal" />
          <xs:enumeration value="ChqBookTheftLossAllStopped" />
          <xs:enumeration value="ChqIssuedCurrencyAcc" />
          <xs:enumeration value="ChqCopy" />
          <xs:enumeration value="ChqDraft" />
          <xs:enumeration value="ChqIn" />
          <xs:enumeration value="ChqSpecialChqClearance" />
          <xs:enumeration value="ChqinCashCentre" />
          <xs:enumeration value="ChqOutIssued" />
          <xs:enumeration value="ChqSpecialChqPresentation" />
          <xs:enumeration value="ChqCounterCheque" />
          <xs:enumeration value="ChqChequeswithStatement" />
          <xs:enumeration value="ChqStopped" />
          <xs:enumeration value="ChqTrans" />
          <xs:enumeration value="ChqDraftFX" />
          <xs:enumeration value="ChqForeignCourier" />
          <xs:enumeration value="ChqForeignNegTenThou" />
          <xs:enumeration value="ChqForeignNegHundred" />
          <xs:enumeration value="ChequeForeignBankDivi" />
          <xs:enumeration value="ChqForeignNegFiftyThou" />
          <xs:enumeration value="ChqPensionCheque" />
          <xs:enumeration value="ChequeForeignOtherDivi" />
          <xs:enumeration value="ChqForeignNegFiveThou" />
          <xs:enumeration value="ChqForeignNegMax" />
          <xs:enumeration value="ChqForeignGBPMMDPlus" />
          <xs:enumeration value="ChqGiftCheque" />
          <xs:enumeration value="ChqCounterLodgement" />
          <xs:enumeration value="ChqCashDropLodgement" />
          <xs:enumeration value="ChqForeign" />
          <xs:enumeration value="ChqChequePhotocopy" />
          <xs:enumeration value="ChqPostOfficeCredit" />
          <xs:enumeration value="ChqPostOfficeChequeCollected" />
          <xs:enumeration value="ChqChequeRetrieval" />
          <xs:enumeration value="ChqReconcilliationPerTrans" />
          <xs:enumeration value="ChqSpecialPresentationCount" />
          <xs:enumeration value="ChqSpecialPresentationPTT" />
          <xs:enumeration value="ChqDraftSterling" />
          <xs:enumeration value="ChqUnpaidCharge" />
          <xs:enumeration value="ChqUnpaidTransIn" />
          <xs:enumeration value="ChqUnpaidTransOut" />
          <xs:enumeration value="ChqUnpaidCheque" />
          <xs:enumeration value="ReportAuditLetter" />
          <xs:enumeration value="ReportFAXAdviceAdditional" />
          <xs:enumeration value="ReportTelAdviceAdditional" />
          <xs:enumeration value="ReportCreditHistory" />
          <xs:enumeration value="ReportCertInterestDuplicate" />
          <xs:enumeration value="ReportCertInterest" />
          <xs:enumeration value="ReportCreditHistoryAdditionalInYear" />
          <xs:enumeration value="ReportForeignStatusEnqElec" />
          <xs:enumeration value="ReportForeignStatusEnq" />
          <xs:enumeration value="ReportStatementChqDaily" />
          <xs:enumeration value="ReportStatementChqFortnightly" />
          <xs:enumeration value="ReportStatementChqMonthly" />
          <xs:enumeration value="ReportStatementChqWeekly" />
          <xs:enumeration value="ReportStatementAndDiviChq" />
          <xs:enumeration value="ReportReferralItem" />
          <xs:enumeration value="ReportStatementByATM" />
          <xs:enumeration value="ReportStatementByBranch" />
          <xs:enumeration value="ReportStatementCopyRegular" />
          <xs:enumeration value="ReportStatementDaily" />
          <xs:enumeration value="ReportStatusEnquiry" />
          <xs:enumeration value="ReportStatementFrequent" />
          <xs:enumeration value="ReportStatementMonthly" />
          <xs:enumeration value="ReportStatementCopy1" />
          <xs:enumeration value="ReportStatementToBranch" />
          <xs:enumeration value="ReportSMSTextMiniStatementorAlert" />
          <xs:enumeration value="ReportStatementFortnightly" />
          <xs:enumeration value="ReportSMSTextMiniStatementWoM" />
          <xs:enumeration value="ReportSMSTextAlertBalance" />
          <xs:enumeration value="ReportSMSTextAlert" />
          <xs:enumeration value="ReportTaxCert" />
          <xs:enumeration value="ReportWeeklyStatement" />
          <xs:enumeration value="SEPABranch" />
          <xs:enumeration value="SEPACredit" />
          <xs:enumeration value="SEPADirectDebit" />
          <xs:enumeration value="SEPAIn" />
          <xs:enumeration value="SEPAEuro" />
          <xs:enumeration value="SEPAOut" />
          <xs:enumeration value="SEPAUnpaid" />
          <xs:enumeration value="SEPAWinbitsTransaction" />
          <xs:enumeration value="TransBillPaymentBranch" />
          <xs:enumeration value="TransBillCollect" />
          <xs:enumeration value="TransTelephoneBillPayment" />
          <xs:enumeration value="TransBankPayment" />
          <xs:enumeration value="TransBillPaymentTelephone" />
          <xs:enumeration value="TransCorrespondentBankFee" />
          <xs:enumeration value="TransCreditTransferUKDifferent" />
          <xs:enumeration value="TransCreditTransferUKSame" />
          <xs:enumeration value="TransCredit" />
          <xs:enumeration value="TransCreditTransfer" />
          <xs:enumeration value="TransBranchCredit" />
          <xs:enumeration value="TransDebit" />
          <xs:enumeration value="TransDebCardDeb" />
          <xs:enumeration value="TransUKDirDeb" />
          <xs:enumeration value="TransManualDeb" />
          <xs:enumeration value="TitleDeeds" />
          <xs:enumeration value="TransBuyForeignWithGBP" />
          <xs:enumeration value="TransGoodValueReq" />
          <xs:enumeration value="TransSWIFTOutUKForeign" />
          <xs:enumeration value="TransInconpleteInstruction" />
          <xs:enumeration value="TransManualEntries" />
          <xs:enumeration value="TransManualTrans" />
          <xs:enumeration value="TransNonSterling" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="TransPOSSaleForeign" />
          <xs:enumeration value="TransPriPaymentPost" />
          <xs:enumeration value="TransPOSSaleUK" />
          <xs:enumeration value="TransReconciliationPerTrans" />
          <xs:enumeration value="TransStandingOrdAdmin" />
          <xs:enumeration value="TransStandingOrd" />
          <xs:enumeration value="TransStandingOrdManPay" />
          <xs:enumeration value="TransTelBusiPriPaymentForeignToUKAcc" />
          <xs:enumeration value="TransTeleItem" />
          <xs:enumeration value="TransTelBusiPriPaymentToGrpAcc" />
          <xs:enumeration value="TransTransferExGroup" />
          <xs:enumeration value="TransTelBusiPriPaymentToNonGrpAcc" />
          <xs:enumeration value="TransSWIFTOutNonEEASterling" />
          <xs:enumeration value="AutoAutoCredit" />
          <xs:enumeration value="AutoAutomatedEntries" />
          <xs:enumeration value="AutoAutoCreditPhoneInet" />
          <xs:enumeration value="AutoAutomatedTrans" />
          <xs:enumeration value="AutoDebitCardCommercial" />
          <xs:enumeration value="AutoFPSAutoCredit" />
          <xs:enumeration value="VisaTravellersChqorCurrency" />
          <xs:enumeration value="OnlineInternetBillPayment" />
          <xs:enumeration value="OnlineBusinessOnlineEuroPayment" />
          <xs:enumeration value="OnlineBusinessOnlineUrgentEuroPayment" />
          <xs:enumeration value="OnlineBusinessOnlineForeignPayment" />
          <xs:enumeration value="OnlineInterbankTransfer" />
          <xs:enumeration value="OnlineInterbankPerTransfer" />
          <xs:enumeration value="OnlineInterbranchTransfer" />
          <xs:enumeration value="OnlineInterbranchPerTransfer" />
          <xs:enumeration value="OnlineSubscriptionMonthly" />
          <xs:enumeration value="OnlineBankingPayment" />
          <xs:enumeration value="OnlineReplacementCardReader" />
          <xs:enumeration value="OnlinePaymentinGBPtoUK" />
          <xs:enumeration value="OnlineUrgentPayment" />
          <xs:enumeration value="OnlinePaymentinUSDtoUS" />
          <xs:enumeration value="OnlineBulkDirectDebSterling" />
          <xs:enumeration value="ForeignChqSent" />
          <xs:enumeration value="ForeignChqSelf" />
          <xs:enumeration value="ForeignChqEncashment" />
          <xs:enumeration value="ForeignFXInwardsCust" />
          <xs:enumeration value="ForeignFXTransfersROI" />
          <xs:enumeration value="ForeignFXForwardTrans" />
          <xs:enumeration value="ForeignExMaintenance" />
          <xs:enumeration value="ForeignFXInwardsNonCust" />
          <xs:enumeration value="ForeignFXOutwards" />
          <xs:enumeration value="ForeignPurchase" />
          <xs:enumeration value="ForeignStatusRep" />
          <xs:enumeration value="ForeignChqDraft" />
          <xs:enumeration value="ForeignChqCLess" />
          <xs:enumeration value="ForeignChqMLess" />
          <xs:enumeration value="ForeignChqOther" />
          <xs:enumeration value="ForeignChqMPlus" />
          <xs:enumeration value="ForeignChqCCC" />
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCAccountFeeQuarterly" />
          <xs:enumeration value="ServiceCFixedTariff" />
          <xs:enumeration value="ServiceCBusiDepAccBreakage" />
          <xs:enumeration value="ServiceCMonitorDaily" />
          <xs:enumeration value="ServiceCMinimumMonthlyFee" />
          <xs:enumeration value="ServiceCMonitorMonthly" />
          <xs:enumeration value="ServiceCMonitorWeekly" />
          <xs:enumeration value="ServiceCMT940AccountFirst" />
          <xs:enumeration value="ServiceCMT940AccountSubsequent" />
          <xs:enumeration value="ServiceCOther" />
          <xs:enumeration value="CounterCoinHandling" />
          <xs:enumeration value="CounterCashIn" />
          <xs:enumeration value="CounterCashInNotUs" />
          <xs:enumeration value="CounterCashOut" />
          <xs:enumeration value="CounterCashX" />
          <xs:enumeration value="CounterForeignNoteHandling" />
          <xs:enumeration value="CounterCashFeeRate" />
          <xs:enumeration value="CounterForeignCashOutTx" />
          <xs:enumeration value="CounterCounterLodgement" />
          <xs:enumeration value="CounterCashDropLodgement" />
          <xs:enumeration value="CounterNotesLodged" />
          <xs:enumeration value="CounterNotesOut" />
          <xs:enumeration value="CounterCashInOwn" />
          <xs:enumeration value="CounterCashFeePercent" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType2">
        <xs:annotation>
          <xs:documentation>Overdraft fee type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ArrangedOverdraft" />
          <xs:enumeration value="AnnualReview" />
          <xs:enumeration value="EmergencyBorrowing" />
          <xs:enumeration value="BorrowingItem" />
          <xs:enumeration value="OverdraftRenewal" />
          <xs:enumeration value="OverdraftSetup" />
          <xs:enumeration value="Surcharge" />
          <xs:enumeration value="TempOverdraft" />
          <xs:enumeration value="UnauthorisedBorrowing" />
          <xs:enumeration value="UnauthorisedPaidTrans" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="UnauthorisedUnpaidTrans" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType8">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AdditionalCard" />
          <xs:enumeration value="BalanceTransfer" />
          <xs:enumeration value="CashAdvance" />
          <xs:enumeration value="Card" />
          <xs:enumeration value="ChequeIssue" />
          <xs:enumeration value="CashWithdrawal" />
          <xs:enumeration value="EmergencyCard" />
          <xs:enumeration value="ForeignCash" />
          <xs:enumeration value="Handling" />
          <xs:enumeration value="Maintenance" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Purchase" />
          <xs:enumeration value="Penalty" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType9">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AdditionalCard" />
          <xs:enumeration value="BalanceTransfer" />
          <xs:enumeration value="CashAdvance" />
          <xs:enumeration value="Card" />
          <xs:enumeration value="ChequeIssue" />
          <xs:enumeration value="CashWithdrawal" />
          <xs:enumeration value="EmergencyCard" />
          <xs:enumeration value="ForeignCash" />
          <xs:enumeration value="Handling" />
          <xs:enumeration value="Maintenance" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Purchase" />
          <xs:enumeration value="Penalty" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType10">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="LatePayment" />
          <xs:enumeration value="OverCreditLimit" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="ReturnPayment" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType11">
        <xs:annotation>
          <xs:documentation>Non repayment fee type code</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="LatePayment" />
          <xs:enumeration value="OverCreditLimit" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="ReturnPayment" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType12">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Other" />
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCAccountFeeQuarterly" />
          <xs:enumeration value="ServiceCFixedTariff" />
          <xs:enumeration value="ServiceCBusiDepAccBreakage" />
          <xs:enumeration value="ServiceCMinimumMonthlyFee" />
          <xs:enumeration value="ServiceCOther" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType14">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Other" />
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCAccountFeeQuarterly" />
          <xs:enumeration value="ServiceCFixedTariff" />
          <xs:enumeration value="ServiceCBusiDepAccBreakage" />
          <xs:enumeration value="ServiceCMinimumMonthlyFee" />
          <xs:enumeration value="ServiceCOther" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType21">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FEPF" />
          <xs:enumeration value="FTOT" />
          <xs:enumeration value="FYAF" />
          <xs:enumeration value="FYAM" />
          <xs:enumeration value="FYAQ" />
          <xs:enumeration value="FYCP" />
          <xs:enumeration value="FYDB" />
          <xs:enumeration value="FYMI" />
          <xs:enumeration value="FYXX" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType25">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="FBAO" />
          <xs:enumeration value="FBAR" />
          <xs:enumeration value="FBEB" />
          <xs:enumeration value="FBIT" />
          <xs:enumeration value="FBOR" />
          <xs:enumeration value="FBOS" />
          <xs:enumeration value="FBSC" />
          <xs:enumeration value="FBTO" />
          <xs:enumeration value="FBUB" />
          <xs:enumeration value="FBUT" />
          <xs:enumeration value="FTOT" />
          <xs:enumeration value="FTUT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType30">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCOther" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType32">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCOther" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType39">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CashCentreCoinHandling" />
          <xs:enumeration value="CashCentreCashX" />
          <xs:enumeration value="CashCentreCashFeePercent" />
          <xs:enumeration value="CashCentreCashFeeRate" />
          <xs:enumeration value="CashCentreNotesLodged" />
          <xs:enumeration value="CashCentreNotesOut" />
          <xs:enumeration value="CashCentreCashIn" />
          <xs:enumeration value="CashCentreCashOut" />
          <xs:enumeration value="ReportCertBalance" />
          <xs:enumeration value="ATMAbroadConVisaDebit" />
          <xs:enumeration value="ATMConGroupATM" />
          <xs:enumeration value="ATMAbroad" />
          <xs:enumeration value="ATMForeignCashDebCard" />
          <xs:enumeration value="ATMAbroadGoldVisaDebit" />
          <xs:enumeration value="ATMNonSterlingWithdrawal" />
          <xs:enumeration value="ATMAbroadVisaDebit" />
          <xs:enumeration value="CHAPSOutBranch" />
          <xs:enumeration value="CHAPSCancellation" />
          <xs:enumeration value="CHAPSIn" />
          <xs:enumeration value="CHAPSOutInterBank" />
          <xs:enumeration value="CHAPSInterBank" />
          <xs:enumeration value="CHAPSOutPost" />
          <xs:enumeration value="CHAPSOutInterBranch" />
          <xs:enumeration value="CHAPSOut" />
          <xs:enumeration value="CHAPSOutOnline" />
          <xs:enumeration value="CardCardReplacement" />
          <xs:enumeration value="DraftsCounter" />
          <xs:enumeration value="DraftsBankers" />
          <xs:enumeration value="DraftsCancellation" />
          <xs:enumeration value="CardGuaranteed" />
          <xs:enumeration value="DraftsIntlPayableAbroad" />
          <xs:enumeration value="DraftsLostStolen" />
          <xs:enumeration value="CardPersonalisedCard" />
          <xs:enumeration value="DraftsIntlStoppedCancelled" />
          <xs:enumeration value="EmergencyLending" />
          <xs:enumeration value="FPSInBranch" />
          <xs:enumeration value="LegalCourtOrder" />
          <xs:enumeration value="IntlPayFXPaymentIn" />
          <xs:enumeration value="IntlPayForeignPaymentInUKAcc" />
          <xs:enumeration value="IntlPayForeignCharge" />
          <xs:enumeration value="IntlPayForeignInternet" />
          <xs:enumeration value="IntlPayFXPaymentOut" />
          <xs:enumeration value="IntlPayFXPaymentOutIR" />
          <xs:enumeration value="IntlPayPurchaseNonSterling" />
          <xs:enumeration value="IntlPayPaymentTracing" />
          <xs:enumeration value="IntlPayTransNonSterling" />
          <xs:enumeration value="IntlPayTransRateNonSterling" />
          <xs:enumeration value="IntlPayWorldpayPayment" />
          <xs:enumeration value="InvPayBankDetailsWrong" />
          <xs:enumeration value="InvPayForeignBCNR" />
          <xs:enumeration value="InvPayForeignRecall" />
          <xs:enumeration value="InvPayStandingOrdUnpaid" />
          <xs:enumeration value="SafeKeepingEnvelope" />
          <xs:enumeration value="SafeKeepingInspection" />
          <xs:enumeration value="SafeKeepingLargeItem" />
          <xs:enumeration value="SafeKeepingParcel" />
          <xs:enumeration value="NightSafeNightSafePaidIn" />
          <xs:enumeration value="OverdraftReview" />
          <xs:enumeration value="ChqBookTheftLossAllStopped" />
          <xs:enumeration value="ChqCopy" />
          <xs:enumeration value="ChqDraftSterling" />
          <xs:enumeration value="ChqOutIssued" />
          <xs:enumeration value="ChqSpecialChqPresentation" />
          <xs:enumeration value="ChqSpecialChqClearance" />
          <xs:enumeration value="ChqStopped" />
          <xs:enumeration value="ChqinCashCentre" />
          <xs:enumeration value="ChqDraftFX" />
          <xs:enumeration value="ChqForeignCourier" />
          <xs:enumeration value="ChqGiftCheque" />
          <xs:enumeration value="ChqForeign" />
          <xs:enumeration value="ChqChequePhotocopy" />
          <xs:enumeration value="ChqChequeRetrieval" />
          <xs:enumeration value="ChqSpecialPresentationCount" />
          <xs:enumeration value="ChqSpecialPresentationPTT" />
          <xs:enumeration value="ChqUnpaidCharge" />
          <xs:enumeration value="ChqUnpaidTransIn" />
          <xs:enumeration value="ChqUnpaidTransOut" />
          <xs:enumeration value="ChqUnpaidCheque" />
          <xs:enumeration value="ReportCertInterestDuplicate" />
          <xs:enumeration value="ReportCertInterest" />
          <xs:enumeration value="ReportReference" />
          <xs:enumeration value="ReportReferralItem" />
          <xs:enumeration value="ReportStatementCopyRegular" />
          <xs:enumeration value="ReportStatusEnquiry" />
          <xs:enumeration value="ReportStatementFrequent" />
          <xs:enumeration value="ReportStatementCopy1" />
          <xs:enumeration value="SEPAIn" />
          <xs:enumeration value="SEPAEuro" />
          <xs:enumeration value="SEPAOut" />
          <xs:enumeration value="TransCreditTransferUKDifferent" />
          <xs:enumeration value="TransCredit" />
          <xs:enumeration value="TransCreditTransfer" />
          <xs:enumeration value="TransBuyForeignWithGBP" />
          <xs:enumeration value="TransSWIFTOutUKForeign" />
          <xs:enumeration value="TransPOSSaleForeign" />
          <xs:enumeration value="TransReturnPayment" />
          <xs:enumeration value="TransTransferExGroup" />
          <xs:enumeration value="TransSWIFTOutNonEEASterling" />
          <xs:enumeration value="AutoAutomatedEntries" />
          <xs:enumeration value="OnlineReplacementCardReader" />
          <xs:enumeration value="OnlineUrgentPayment" />
          <xs:enumeration value="ForeignChqSent" />
          <xs:enumeration value="ForeignFXInwardsCust" />
          <xs:enumeration value="ForeignFXOutwards" />
          <xs:enumeration value="ForeignPurchase" />
          <xs:enumeration value="ForeignChqDraft" />
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCOther" />
          <xs:enumeration value="CounterCashOut" />
          <xs:enumeration value="CounterForeignNoteHandling" />
          <xs:enumeration value="CounterForeignCashOut" />
          <xs:enumeration value="CounterCashFeeRate" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType40">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CashCentreCoinHandling" />
          <xs:enumeration value="CashCentreCashX" />
          <xs:enumeration value="CashCentreCashFeePercent" />
          <xs:enumeration value="CashCentreCashFeeRate" />
          <xs:enumeration value="CashCentreNotesLodged" />
          <xs:enumeration value="CashCentreNotesOut" />
          <xs:enumeration value="CashCentreCashIn" />
          <xs:enumeration value="CashCentreCashOut" />
          <xs:enumeration value="ReportCertBalance" />
          <xs:enumeration value="ATMAbroadConVisaDebit" />
          <xs:enumeration value="ATMConGroupATM" />
          <xs:enumeration value="ATMAbroad" />
          <xs:enumeration value="ATMForeignCashDebCard" />
          <xs:enumeration value="ATMAbroadGoldVisaDebit" />
          <xs:enumeration value="ATMNonSterlingWithdrawal" />
          <xs:enumeration value="ATMAbroadVisaDebit" />
          <xs:enumeration value="CHAPSOutBranch" />
          <xs:enumeration value="CHAPSCancellation" />
          <xs:enumeration value="CHAPSIn" />
          <xs:enumeration value="CHAPSOutInterBank" />
          <xs:enumeration value="CHAPSInterBank" />
          <xs:enumeration value="CHAPSOutPost" />
          <xs:enumeration value="CHAPSOutInterBranch" />
          <xs:enumeration value="CHAPSOut" />
          <xs:enumeration value="CHAPSOutOnline" />
          <xs:enumeration value="CardCardReplacement" />
          <xs:enumeration value="DraftsCounter" />
          <xs:enumeration value="DraftsBankers" />
          <xs:enumeration value="DraftsCancellation" />
          <xs:enumeration value="CardGuaranteed" />
          <xs:enumeration value="DraftsIntlPayableAbroad" />
          <xs:enumeration value="DraftsLostStolen" />
          <xs:enumeration value="CardPersonalisedCard" />
          <xs:enumeration value="DraftsIntlStoppedCancelled" />
          <xs:enumeration value="EmergencyLending" />
          <xs:enumeration value="FPSInBranch" />
          <xs:enumeration value="LegalCourtOrder" />
          <xs:enumeration value="IntlPayFXPaymentIn" />
          <xs:enumeration value="IntlPayForeignPaymentInUKAcc" />
          <xs:enumeration value="IntlPayForeignCharge" />
          <xs:enumeration value="IntlPayForeignInternet" />
          <xs:enumeration value="IntlPayFXPaymentOut" />
          <xs:enumeration value="IntlPayFXPaymentOutIR" />
          <xs:enumeration value="IntlPayPurchaseNonSterling" />
          <xs:enumeration value="IntlPayPaymentTracing" />
          <xs:enumeration value="IntlPayTransNonSterling" />
          <xs:enumeration value="IntlPayTransRateNonSterling" />
          <xs:enumeration value="IntlPayWorldpayPayment" />
          <xs:enumeration value="InvPayBankDetailsWrong" />
          <xs:enumeration value="InvPayForeignBCNR" />
          <xs:enumeration value="InvPayForeignRecall" />
          <xs:enumeration value="InvPayStandingOrdUnpaid" />
          <xs:enumeration value="SafeKeepingEnvelope" />
          <xs:enumeration value="SafeKeepingInspection" />
          <xs:enumeration value="SafeKeepingLargeItem" />
          <xs:enumeration value="SafeKeepingParcel" />
          <xs:enumeration value="NightSafeNightSafePaidIn" />
          <xs:enumeration value="OverdraftReview" />
          <xs:enumeration value="ChqBookTheftLossAllStopped" />
          <xs:enumeration value="ChqCopy" />
          <xs:enumeration value="ChqDraftSterling" />
          <xs:enumeration value="ChqOutIssued" />
          <xs:enumeration value="ChqSpecialChqPresentation" />
          <xs:enumeration value="ChqSpecialChqClearance" />
          <xs:enumeration value="ChqStopped" />
          <xs:enumeration value="ChqinCashCentre" />
          <xs:enumeration value="ChqDraftFX" />
          <xs:enumeration value="ChqForeignCourier" />
          <xs:enumeration value="ChqGiftCheque" />
          <xs:enumeration value="ChqForeign" />
          <xs:enumeration value="ChqChequePhotocopy" />
          <xs:enumeration value="ChqChequeRetrieval" />
          <xs:enumeration value="ChqSpecialPresentationCount" />
          <xs:enumeration value="ChqSpecialPresentationPTT" />
          <xs:enumeration value="ChqUnpaidCharge" />
          <xs:enumeration value="ChqUnpaidTransIn" />
          <xs:enumeration value="ChqUnpaidTransOut" />
          <xs:enumeration value="ChqUnpaidCheque" />
          <xs:enumeration value="ReportCertInterestDuplicate" />
          <xs:enumeration value="ReportCertInterest" />
          <xs:enumeration value="ReportReference" />
          <xs:enumeration value="ReportReferralItem" />
          <xs:enumeration value="ReportStatementCopyRegular" />
          <xs:enumeration value="ReportStatusEnquiry" />
          <xs:enumeration value="ReportStatementFrequent" />
          <xs:enumeration value="ReportStatementCopy1" />
          <xs:enumeration value="SEPAIn" />
          <xs:enumeration value="SEPAEuro" />
          <xs:enumeration value="SEPAOut" />
          <xs:enumeration value="TransCreditTransferUKDifferent" />
          <xs:enumeration value="TransCredit" />
          <xs:enumeration value="TransCreditTransfer" />
          <xs:enumeration value="TransBuyForeignWithGBP" />
          <xs:enumeration value="TransSWIFTOutUKForeign" />
          <xs:enumeration value="TransPOSSaleForeign" />
          <xs:enumeration value="TransReturnPayment" />
          <xs:enumeration value="TransTransferExGroup" />
          <xs:enumeration value="TransSWIFTOutNonEEASterling" />
          <xs:enumeration value="AutoAutomatedEntries" />
          <xs:enumeration value="OnlineReplacementCardReader" />
          <xs:enumeration value="OnlineUrgentPayment" />
          <xs:enumeration value="ForeignChqSent" />
          <xs:enumeration value="ForeignFXInwardsCust" />
          <xs:enumeration value="ForeignFXOutwards" />
          <xs:enumeration value="ForeignPurchase" />
          <xs:enumeration value="ForeignChqDraft" />
          <xs:enumeration value="ServiceCAccountFee" />
          <xs:enumeration value="ServiceCAccountFeeMonthly" />
          <xs:enumeration value="ServiceCOther" />
          <xs:enumeration value="CounterCashOut" />
          <xs:enumeration value="CounterForeignNoteHandling" />
          <xs:enumeration value="CounterForeignCashOut" />
          <xs:enumeration value="CounterCashFeeRate" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType47">
        <xs:annotation>
          <xs:documentation>Fee/charge type which is being capped</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Application" />
          <xs:enumeration value="Arrangement" />
          <xs:enumeration value="FeeChargeCap" />
          <xs:enumeration value="CreditReference" />
          <xs:enumeration value="EarlyRepayment" />
          <xs:enumeration value="LatePayment" />
          <xs:enumeration value="MissedPaymentFee" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="MissedPaymentRate" />
          <xs:enumeration value="OtherPaymentFee" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PrepaymentFee" />
          <xs:enumeration value="OtherPaymentRate" />
          <xs:enumeration value="ReStatement" />
          <xs:enumeration value="Statement" />
          <xs:enumeration value="SetUp" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FeeType48">
        <xs:annotation>
          <xs:documentation>Fee/Charge Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Application" />
          <xs:enumeration value="Arrangement" />
          <xs:enumeration value="FeeChargeCap" />
          <xs:enumeration value="CreditReference" />
          <xs:enumeration value="EarlyRepayment" />
          <xs:enumeration value="LatePayment" />
          <xs:enumeration value="MissedPaymentFee" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="MissedPaymentRate" />
          <xs:enumeration value="OtherPaymentFee" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PrepaymentFee" />
          <xs:enumeration value="OtherPaymentRate" />
          <xs:enumeration value="ReStatement" />
          <xs:enumeration value="Statement" />
          <xs:enumeration value="SetUp" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FixedVariableInterestRateType">
        <xs:annotation>
          <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Fixed" />
          <xs:enumeration value="Variable" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="FundsAvailableResult">
        <xs:annotation>
          <xs:documentation>Result of a funds availability check.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="FundsAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate the availability of funds given the Amount in the consent request.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FundsAvailableDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the funds availability check was generated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GeographicCoordinates">
        <xs:annotation>
          <xs:documentation>Location on the earth specified by two numbers representing vertical and horizontal position.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Latitude">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Latitude measured in decimal degrees.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^-?\d{1,3}\.\d{1,8}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Longitude">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Angular measurement of the distance of a location on the earth east or west of the Greenwich observatory.
The longitude is measured in decimal degrees.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^-?\d{1,3}\.\d{1,8}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GeographicCoordinates1">
        <xs:annotation>
          <xs:documentation>Location on the earth specified by two numbers representing vertical and horizontal position.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Latitude">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Latitude measured in decimal degrees</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^-?\d{1,3}\.\d{1,8}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Longitude">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Angular measurement of the distance of a location on the earth east or west of the Greenwich observatory.
The longitude is measured in decimal degrees.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^-?\d{1,3}\.\d{1,8}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GeoLocation">
        <xs:annotation>
          <xs:documentation>Geographic location of the ATM specified by geographic coordinates or UTM coordinates.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="GeographicCoordinates" type="tns:GeographicCoordinates">
            <xs:annotation>
              <xs:documentation>Location on the earth specified by two numbers representing vertical and horizontal position.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GeoLocation1">
        <xs:annotation>
          <xs:documentation>Geographic location of the ATM specified by geographic coordinates or UTM coordinates.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="GeographicCoordinates" type="tns:GeographicCoordinates1">
            <xs:annotation>
              <xs:documentation>Location on the earth specified by two numbers representing vertical and horizontal position.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetaclientbywayofClientIDResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="application_type" type="tns:ApplicationType" />
          <xs:element minOccurs="1" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client identifier string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_id_issued_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client secret string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret_expires_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client secret will expire expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0 if does not expire</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="grant_types" type="tns:GrantType" />
          <xs:element minOccurs="1" name="id_token_signed_response_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="request_object_signing_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="response_types" type="tns:ResponseType" />
          <xs:element minOccurs="1" name="scope">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,22}$" />
                <xs:maxLength value="22" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_statement">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tls_client_auth_subject_dn">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_endpoint_auth_method" type="tns:TokenEndpointAuthMethod" />
          <xs:element minOccurs="0" name="token_endpoint_auth_signing_alg" type="tns:SupportedAlgorithms" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="GrantType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="client_credentials" />
          <xs:enumeration value="authorization_code" />
          <xs:enumeration value="refresh_token" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="IDEligibility">
        <xs:annotation>
          <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the BCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ID Verification details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="URL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL to identity verification document list which is required for obtaining the product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IDEligibility1">
        <xs:annotation>
          <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the CCC product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ID Verification details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="URL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL to identity verification document list which is required for obtaining the product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IDEligibility2">
        <xs:annotation>
          <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ID Verification details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="URL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL to identity verification document list which is required for obtaining the product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IDVerificationCheck">
        <xs:annotation>
          <xs:documentation>Identity verification criteria that the account holder will need to meet to take out the PCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ID Verification details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="URL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL to identity verification document list which is required for obtaining the product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IndustryEligibility">
        <xs:annotation>
          <xs:documentation>Industry Eligibility that the account holder will need to meet to take out the BCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the IndustryEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherSICCode" type="tns:OtherSICCode">
            <xs:annotation>
              <xs:documentation>Other SICCODE which is not present in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="SICCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>UK Standard Industry Code of the business eligible to access the BCA product. Ref http://resources.companieshouse.gov.uk/sic/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IndustryEligibility1">
        <xs:annotation>
          <xs:documentation>Industry Eligibility that the account holder will need to meet to take out the CCC product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the IndustryEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSICCodeExcluded" type="tns:OtherSICCodeExcluded">
            <xs:annotation>
              <xs:documentation>Other SICCode which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSICCodeIncluded" type="tns:OtherSICCodeIncluded">
            <xs:annotation>
              <xs:documentation>Other SICCode which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SICCodeExcluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>UK Standard Industry Code of the business not eligible to access the CCC product. Ref http://resources.companieshouse.gov.uk/sic/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SICCodeIncluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>UK Standard Industry Code of the business eligible to access the CCC product. Ref http://resources.companieshouse.gov.uk/sic/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IndustryEligibility2">
        <xs:annotation>
          <xs:documentation>Industry Eligibility that the account holder will need to meet to take out the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the IndustryEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSICCodeExluded" type="tns:OtherSICCodeExluded">
            <xs:annotation>
              <xs:documentation>Other SICCode which is not in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSICCodeIncluded" type="tns:OtherSICCodeIncluded1">
            <xs:annotation>
              <xs:documentation>Other SICCode which is not in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SICCodeExcluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>UK Standard Industry Code of the business not eligible to access the SME Loan product. Ref http://resources.companieshouse.gov.uk/sic/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SICCodeIncluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>UK Standard Industry Code of the business eligible to access the SME Loan product. Ref http://resources.companieshouse.gov.uk/sic/</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:CreditorAccount">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorPostalAddress" type="tns:OBPostalAddress6">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount2">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="EndToEndIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructionIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LocalInstrument">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User community specific instrument.
Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RemittanceInformation" type="tns:RemittanceInformation">
            <xs:annotation>
              <xs:documentation>Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation4">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:CreditorAccount">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorPostalAddress" type="tns:OBPostalAddress6">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount2">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EndToEndIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructionIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LocalInstrument">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User community specific instrument.
Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RemittanceInformation" type="tns:RemittanceInformation">
            <xs:annotation>
              <xs:documentation>Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="RequestedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date at which the initiating party requests the clearing agent to process the payment. 
Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation8">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:CreditorAccount8">
            <xs:annotation>
              <xs:documentation>Identification assigned by an institution to identify an account. This identification is known by the account owner.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount10">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the debtor account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_2">
            <xs:annotation>
              <xs:documentation>The amount of the final Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FirstPaymentAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_0">
            <xs:annotation>
              <xs:documentation>The amount of the first Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED). 
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NumberOfPayments">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RecurringPaymentAmount" type="tns:RecurringPaymentAmount">
            <xs:annotation>
              <xs:documentation>The amount of the recurring Standing Order</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RecurringPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first recurring payment for a Standing Order schedule will be made. 
Usage: This must be populated only if the first recurring date is different to the first payment date.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation12">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ControlSum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total of all individual amounts included in the group, irrespective of currencies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount2">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FileHash">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A base64 encoding of a SHA256 hash of the file to be uploaded.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="44" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FileReference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Reference for the file.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FileType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the payment file type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LocalInstrument">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User community specific instrument.
Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NumberOfTransactions">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number of individual transactions contained in the payment information group.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="[0-9]{1,15}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RemittanceInformation" type="tns:RemittanceInformation">
            <xs:annotation>
              <xs:documentation>Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RequestedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date at which the initiating party requests the clearing agent to process the payment. 
Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation16">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ChargeBearer" type="tns:OBChargeBearerType1Code">
            <xs:annotation>
              <xs:documentation>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Creditor" type="tns:Creditor">
            <xs:annotation>
              <xs:documentation>Party to which an amount of money is due.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:CreditorAccount">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_0">
            <xs:annotation>
              <xs:documentation>Financial institution servicing an account for the creditor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CurrencyOfTransfer">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount2">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="EndToEndIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRateInformation" type="tns:ExchangeRateInformation">
            <xs:annotation>
              <xs:documentation>Provides details on the currency exchange rate and contract.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructionIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="InstructionPriority" type="tns:InstructionPriority">
            <xs:annotation>
              <xs:documentation>Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LocalInstrument">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User community specific instrument.
Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Purpose">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
The list of valid codes is an external code list published separately.
External code sets can be downloaded from www.iso20022.org.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RemittanceInformation" type="tns:RemittanceInformation">
            <xs:annotation>
              <xs:documentation>Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation20">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ChargeBearer" type="tns:OBChargeBearerType1Code">
            <xs:annotation>
              <xs:documentation>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Creditor" type="tns:Creditor">
            <xs:annotation>
              <xs:documentation>Party to which an amount of money is due.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:CreditorAccount">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_0">
            <xs:annotation>
              <xs:documentation>Financial institution servicing an account for the creditor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CurrencyOfTransfer">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount2">
            <xs:annotation>
              <xs:documentation>Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EndToEndIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ExchangeRateInformation" type="tns:ExchangeRateInformation">
            <xs:annotation>
              <xs:documentation>Provides details on the currency exchange rate and contract.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="InstructionIdentification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="InstructionPriority" type="tns:InstructionPriority">
            <xs:annotation>
              <xs:documentation>Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LocalInstrument">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User community specific instrument.
Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Purpose">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
The list of valid codes is an external code list published separately.
External code sets can be downloaded from www.iso20022.org.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RemittanceInformation" type="tns:RemittanceInformation">
            <xs:annotation>
              <xs:documentation>Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="RequestedExecutionDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date at which the initiating party requests the clearing agent to process the payment. 
Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Initiation24">
        <xs:annotation>
          <xs:documentation>The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ChargeBearer" type="tns:OBChargeBearerType1Code">
            <xs:annotation>
              <xs:documentation>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Creditor" type="tns:Creditor">
            <xs:annotation>
              <xs:documentation>Party to which an amount of money is due.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditorAccount" type="tns:CreditorAccount20">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditorAgent" type="tns:OBBranchAndFinancialInstitutionIdentification6_2">
            <xs:annotation>
              <xs:documentation>Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
This is the servicer of the beneficiary account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CurrencyOfTransfer">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="DebtorAccount" type="tns:DebtorAccount10">
            <xs:annotation>
              <xs:documentation>Provides the details to identify the debtor account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FinalPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FirstPaymentDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Individual Definitions:
EvryDay - Every day
EvryWorkgDay - Every working day
IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED). 
ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. 
SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. 
Individual Patterns:
EvryDay (ScheduleCode)
EvryWorkgDay (ScheduleCode)
IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
EvryDay
EvryWorkgDay
IntrvlWkDay:0[1-9]:0[1-7]
WkInMnthDay:0[1-5]:0[1-7]
IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
Full Regular Expression:
^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InstructedAmount" type="tns:OBActiveOrHistoricCurrencyAndAmount_9">
            <xs:annotation>
              <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
Usage: This amount has to be transported unchanged through the transaction chain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NumberOfPayments">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Purpose">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
The list of valid codes is an external code list published separately.
External code sets can be downloaded from www.iso20022.org.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InstructedAmount">
        <xs:annotation>
          <xs:documentation>Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InstructedAmount1">
        <xs:annotation>
          <xs:documentation>Amount of money to be confirmed as available funds in the debtor account. Contains an Amount and a Currency.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="InstructionPriority">
        <xs:annotation>
          <xs:documentation>Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Normal" />
          <xs:enumeration value="Urgent" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="LegalAuthorityClaim">
        <xs:sequence>
          <xs:element minOccurs="0" name="RegisteredId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Company Registration Id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RegisteredName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Company Registered Name</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RegistrationAuthorityId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identification of registering Authority</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LegalAuthotiryClaims">
        <xs:annotation>
          <xs:documentation>Claims sourced from a legal authority(e.g. Companies House) - can be applied to either TPPs to ASPSP</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LegalAuthorityClaims" type="tns:LegalAuthorityClaim">
            <xs:annotation>
              <xs:documentation>Details of each Company Registration Authority with which the Company is registered</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="LegalStructure">
        <xs:annotation>
          <xs:documentation>Defines the legal structure of the business to access the BCA product.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CIO" />
          <xs:enumeration value="ClubSociety" />
          <xs:enumeration value="Charity" />
          <xs:enumeration value="Ltd" />
          <xs:enumeration value="LBG" />
          <xs:enumeration value="LLP" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Partnership" />
          <xs:enumeration value="SoleTrader" />
          <xs:enumeration value="Trust" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LegalStructure1">
        <xs:annotation>
          <xs:documentation>Defines the legal structure of the business to access the CCC product.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CIO" />
          <xs:enumeration value="ClubSociety" />
          <xs:enumeration value="Charity" />
          <xs:enumeration value="Ltd" />
          <xs:enumeration value="LBG" />
          <xs:enumeration value="LLP" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Partnership" />
          <xs:enumeration value="SoleTrader" />
          <xs:enumeration value="Trust" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LegalStructure2">
        <xs:annotation>
          <xs:documentation>Defines the legal structure of the business to access the SME Loan product.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CIO" />
          <xs:enumeration value="ClubSociety" />
          <xs:enumeration value="Charity" />
          <xs:enumeration value="Ltd" />
          <xs:enumeration value="LBG" />
          <xs:enumeration value="LLP" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Partnership" />
          <xs:enumeration value="SoleTrader" />
          <xs:enumeration value="Trust" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="LegalStructureEligibility">
        <xs:annotation>
          <xs:documentation>Legal structure eligibility requirement to access the BCA product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="LegalStructure" type="tns:LegalStructure">
            <xs:annotation>
              <xs:documentation>Defines the legal structure of the business to access the BCA product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the LegalStructureEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherLegalStructure" type="tns:OtherLegalStructure">
            <xs:annotation>
              <xs:documentation>Other legal structure code of the business  which is not present in the standard list</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LegalStructureEligibility1">
        <xs:annotation>
          <xs:documentation>Legal structure eligibility requirement to access the CCC product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="LegalStructure" type="tns:LegalStructure1">
            <xs:annotation>
              <xs:documentation>Defines the legal structure of the business to access the CCC product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the LegalStructureEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherLegalStructure" type="tns:OtherLegalStructure">
            <xs:annotation>
              <xs:documentation>Other legal structure code of the business  which is not present in the standard list</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LegalStructureEligibility2">
        <xs:annotation>
          <xs:documentation>Legal structure eligibility requirement to access the SME Loan product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="LegalStructure" type="tns:LegalStructure2">
            <xs:annotation>
              <xs:documentation>Defines the legal structure of the business to access the SME Loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the LegalStructureEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherLegalStructure" type="tns:OtherLegalStructure">
            <xs:annotation>
              <xs:documentation>Other legal structure code of the business  which is not present in the standard list</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="LoanApplicationFeeChargeType">
        <xs:annotation>
          <xs:documentation>Loan application fee charged type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ChargedAfterLoanApproval" />
          <xs:enumeration value="ChargedIrrespectiveOfLoanApproval" />
          <xs:enumeration value="NoLoanApplicationFee" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="LoanInterest">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the SME Loan holders</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="LoanInterestTierBandSet" type="tns:LoanInterestTierBandSet" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterest1">
        <xs:annotation>
          <xs:documentation>Details about the interest that may be payable to the SME Loan</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="LoanInterestTierBandSet" type="tns:LoanInterestTierBandSet1">
            <xs:annotation>
              <xs:documentation>The group of tiers or bands for which debit interest can be applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the LoanInterest</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestFeeChargeCap">
        <xs:annotation>
          <xs:documentation>Details about any caps (minimum/maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:OB_FeeFrequency1Code_4">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType21" />
          <xs:element minOccurs="1" name="MinMaxType" type="tns:OB_MinMaxType1Code">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType21" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestFeeChargeCap2">
        <xs:annotation>
          <xs:documentation>Details about any caps (minimum/maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod24">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType47">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestFeeChargeDetail">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:OB_FeeFrequency1Code_2">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:OB_FeeFrequency1Code_3">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:OB_InterestRateType1Code_1">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:OB_FeeType1Code">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OB_OtherCodeType1_6">
            <xs:annotation>
              <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OB_OtherCodeType1_7">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OB_OtherCodeType1_5">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not in the standard rate type list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OB_OtherFeeChargeDetailType">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestFeeChargeDetail2">
        <xs:annotation>
          <xs:documentation>Other fees/charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency22">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency22">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType14">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType48">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount. Indicates if the Fee/charge is negotiable (Y) or Fixed (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType14">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not in the standard rate type list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType48">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestFeesCharge">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either LoanRepayment or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LoanInterestFeeChargeCap" type="tns:LoanInterestFeeChargeCap" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="LoanInterestFeeChargeDetail" type="tns:LoanInterestFeeChargeDetail" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestFeesCharge2">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either LoanRepayment or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LoanInterestFeeChargeCap" type="tns:LoanInterestFeeChargeCap2">
            <xs:annotation>
              <xs:documentation>Details about any caps (minimum/maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="LoanInterestFeeChargeDetail" type="tns:LoanInterestFeeChargeDetail2">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestTierBand">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="FixedVariableInterestRateType" type="tns:OB_InterestFixedVariableType1Code">
            <xs:annotation>
              <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a SME Loan.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LoanInterestFeesCharges" type="tns:LoanInterestFeesCharge" />
          <xs:element minOccurs="0" name="LoanProviderInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Loan provider Interest for the SME Loan product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LoanProviderInterestRateType" type="tns:LoanProviderInterestRateType">
            <xs:annotation>
              <xs:documentation>Interest rate types, other than APR, which financial institutions may use to describe the annual interest rate payable for the SME Loan.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MaxTermPeriod" type="tns:MaxTermPeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the Maximum Term</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinTermPeriod" type="tns:MinTermPeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the Minimum Term</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherLoanProviderInterestRateType" type="tns:OtherLoanProviderInterestRateType">
            <xs:annotation>
              <xs:documentation>Other loan interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="RepAPR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made. 
For SME Loan, this APR is the representative APR which includes any account fees.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaxTerm">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum loan term for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaximum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum loan value for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinTerm">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum loan term for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinimum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum loan value for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestTierBand1">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="FixedVariableInterestRateType" type="tns:FixedVariableInterestRateType">
            <xs:annotation>
              <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a SME Loan.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LoanInterestFeesCharges" type="tns:LoanInterestFeesCharge2">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either LoanRepayment or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LoanProviderInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Loan provider Interest for the SME Loan product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LoanProviderInterestRateType" type="tns:LoanProviderInterestRateType1">
            <xs:annotation>
              <xs:documentation>Interest rate types, other than APR, which financial institutions may use to describe the annual interest rate payable for the SME Loan.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MaxTermPeriod" type="tns:MaxTermPeriod1">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the Maximum Term</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinTermPeriod" type="tns:MinTermPeriod1">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the Minimum Term</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherLoanProviderInterestRateType" type="tns:OtherLoanProviderInterestRateType1">
            <xs:annotation>
              <xs:documentation>Other loan interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="RepAPR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made. 

For SME Loan, this APR is the representative APR which includes any account fees.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaxTerm">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum loan term for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaximum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum loan value for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinTerm">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum loan term for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinimum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum loan value for which the loan interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestTierBandSet">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which debit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CalculationMethod" type="tns:OB_InterestCalculationMethod1Code">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Loan interest tierbandset identification. Used by  loan providers for internal use purpose.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LoanInterestFeesCharges" type="tns:LoanInterestFeesCharge" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="LoanInterestTierBand" type="tns:LoanInterestTierBand" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationMethod" type="tns:OB_OtherCodeType1_0" />
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod5">
            <xs:annotation>
              <xs:documentation>The methodology of how credit interest is charged. It can be:-
1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.
2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.
3. Whole
The same interest rate is applied irrespective of the SME Loan balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoanInterestTierBandSet1">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which debit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CalculationMethod" type="tns:CalculationMethod">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Loan interest tierbandset identification. Used by  loan providers for internal use purpose.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LoanInterestFeesCharges" type="tns:LoanInterestFeesCharge2">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either LoanRepayment or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="LoanInterestTierBand" type="tns:LoanInterestTierBand1">
            <xs:annotation>
              <xs:documentation>Tier Band Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod11">
            <xs:annotation>
              <xs:documentation>The methodology of how credit interest is charged. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the SME Loan balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="LoanProviderInterestRateType">
        <xs:annotation>
          <xs:documentation>Interest rate types, other than APR, which financial institutions may use to describe the annual interest rate payable for the SME Loan.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBB" />
          <xs:enumeration value="INFR" />
          <xs:enumeration value="INGR" />
          <xs:enumeration value="INLR" />
          <xs:enumeration value="INNE" />
          <xs:enumeration value="INOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoanProviderInterestRateType1">
        <xs:annotation>
          <xs:documentation>Interest rate types, other than APR, which financial institutions may use to describe the annual interest rate payable for the SME Loan.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BOEBaseRate" />
          <xs:enumeration value="FixedRate" />
          <xs:enumeration value="Gross" />
          <xs:enumeration value="LoanProviderBaseRate" />
          <xs:enumeration value="Net" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Location">
        <xs:annotation>
          <xs:documentation>Location of the ATM.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LocationCategory" type="tns:LocationCategory">
            <xs:annotation>
              <xs:documentation>Indicates the environment of the ATM.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherLocationCategory" type="tns:OtherLocationCategory">
            <xs:annotation>
              <xs:documentation>Enter a new code , name and description for any other location category</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="PostalAddress" type="tns:PostalAddress1">
            <xs:annotation>
              <xs:documentation>Information that locates and identifies a specific address, as defined by postal services or in free format text.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Site" type="tns:Site">
            <xs:annotation>
              <xs:documentation>Used by a Financial Institution internally to identify the location of an ATM.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="LocationCategory">
        <xs:annotation>
          <xs:documentation>Indicates the environment of the ATM.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BranchExternal" />
          <xs:enumeration value="BranchInternal" />
          <xs:enumeration value="BranchLobby" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="RetailerOutlet" />
          <xs:enumeration value="RemoteUnit" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MarketingState">
        <xs:annotation>
          <xs:documentation>Describes the marketing state (regular or promotional) of the BCA Product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Promotional" />
          <xs:enumeration value="Regular" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MarketingState1">
        <xs:annotation>
          <xs:documentation>Describes the marketing state (regular or promotional) of the CCC Product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Promotional" />
          <xs:enumeration value="Regular" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MarketingState2">
        <xs:annotation>
          <xs:documentation>Describes the marketing state (regular or promotional) for which the eligibility criteria applies</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Promotional" />
          <xs:enumeration value="Regular" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MarketingState3">
        <xs:annotation>
          <xs:documentation>Describes the marketing state (regular or promotional) of the SME Loan Product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Promotional" />
          <xs:enumeration value="Regular" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MaxHolidayPeriod">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the repayment holiday</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PACT" />
          <xs:enumeration value="PDAY" />
          <xs:enumeration value="PHYR" />
          <xs:enumeration value="PMTH" />
          <xs:enumeration value="PQTR" />
          <xs:enumeration value="PWEK" />
          <xs:enumeration value="PYER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MaxHolidayPeriod1">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the repayment holiday</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MaxTermPeriod">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the Maximum Term</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PACT" />
          <xs:enumeration value="PDAY" />
          <xs:enumeration value="PHYR" />
          <xs:enumeration value="PMTH" />
          <xs:enumeration value="PQTR" />
          <xs:enumeration value="PWEK" />
          <xs:enumeration value="PYER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MaxTermPeriod1">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the Maximum Term</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="meta">
        <xs:sequence>
          <xs:element minOccurs="0" name="created" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time the resource was created</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lastModified" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time the resource was last modified</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="location">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The location (URI) of the resource</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="resourceType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The resource Type</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The version of the resource</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="MinMaxType">
        <xs:annotation>
          <xs:documentation>Min Max type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Minimum" />
          <xs:enumeration value="Maximum" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MinMaxType15">
        <xs:annotation>
          <xs:documentation>Indicates that this is the minimum/ maximum fee/charge that can be applied by the financial institution</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Minimum" />
          <xs:enumeration value="Maximum" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MinTermPeriod">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the Minimum Term</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PACT" />
          <xs:enumeration value="PDAY" />
          <xs:enumeration value="PHYR" />
          <xs:enumeration value="PMTH" />
          <xs:enumeration value="PQTR" />
          <xs:enumeration value="PWEK" />
          <xs:enumeration value="PYER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MinTermPeriod1">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the Minimum Term</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="MobileWallet">
        <xs:annotation>
          <xs:documentation>Details about the mobile application services that may be available with the BCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding any extra information for MobileWallet.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType9">
            <xs:annotation>
              <xs:documentation>Other Mobile applications that the BCA product supports and that arent in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type9">
            <xs:annotation>
              <xs:documentation>Mobile applications that the BCA product will support</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MobileWallet1">
        <xs:annotation>
          <xs:documentation>Details about the mobile application services that may be available with the PCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding any extra information for MobileWallet.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType26">
            <xs:annotation>
              <xs:documentation>Other Mobile applications that the PCA product supports and that aren't in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type28">
            <xs:annotation>
              <xs:documentation>Mobile applications that the PCA product will support</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Mode">
        <xs:annotation>
          <xs:documentation>Software Statement mode</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Live" />
          <xs:enumeration value="NotLive" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="MultiAuthorisation">
        <xs:annotation>
          <xs:documentation>The multiple authorisation flow response from the ASPSP.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ExpirationDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LastUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Last date and time at the authorisation flow was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NumberReceived">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number of authorisations received.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NumberRequired">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number of authorisations required for payment order (total required at the start of the multi authorisation journey).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status3">
            <xs:annotation>
              <xs:documentation>Specifies the status of the authorisation flow in code form.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Name">
        <xs:annotation>
          <xs:documentation>Specifies the day of the week</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Friday" />
          <xs:enumeration value="Monday" />
          <xs:enumeration value="Saturday" />
          <xs:enumeration value="Sunday" />
          <xs:enumeration value="Thursday" />
          <xs:enumeration value="Tuesday" />
          <xs:enumeration value="Wednesday" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NcaName">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" type="tns:Permission" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="roles">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NonRepaymentFeeCharge">
        <xs:annotation>
          <xs:documentation>Non repayment fee charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="NonRepaymentFeeChargeCap" type="tns:NonRepaymentFeeChargeCap">
            <xs:annotation>
              <xs:documentation>NonRepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on the fees that are charged</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="NonRepaymentFeeChargeDetail" type="tns:NonRepaymentFeeChargeDetail">
            <xs:annotation>
              <xs:documentation>Details about specific fees/charges that are applied for non repayment</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NonRepaymentFeeChargeCap">
        <xs:annotation>
          <xs:documentation>NonRepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on the fees that are charged</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod5">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType10">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NonRepaymentFeeChargeDetail">
        <xs:annotation>
          <xs:documentation>Details about specific fees/charges that are applied for non repayment</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency5">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency5">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType11">
            <xs:annotation>
              <xs:documentation>Non repayment fee type code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount. Indicates if the Fee/charge is negotiable (Y) or Fixed (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType11">
            <xs:annotation>
              <xs:documentation>Other non repayment Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NonStandardAvailability">
        <xs:annotation>
          <xs:documentation>Non-standard hours of availability for a branch of an organisation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Day" type="tns:Day">
            <xs:annotation>
              <xs:documentation>Working day information</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EndDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for non-standard opening periods e.g. Christmas</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Notes related to the Non-standard hours e.g. During shrimp season, the branch has extended opening hours</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StartDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Offer">
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Amount" type="tns:Amount3">
            <xs:annotation>
              <xs:documentation>Amount of money associated with the offer type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Further details of the offer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="EndDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the offer ends.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fee" type="tns:Fee">
            <xs:annotation>
              <xs:documentation>Fee associated with the offer type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OfferId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the offer resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OfferType" type="tns:OfferType">
            <xs:annotation>
              <xs:documentation>Offer type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Rate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate associated with the offer type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StartDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the offer starts.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Term">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Further details of the term of the offer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="URL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL (Uniform Resource Locator) where documentation on the offer can be found</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Value">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Value associated with the offer type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OfferType">
        <xs:annotation>
          <xs:documentation>Offer type, in a coded form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BalanceTransfer" />
          <xs:enumeration value="LimitIncrease" />
          <xs:enumeration value="MoneyTransfer" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PromotionalRate" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OfficerEligibility">
        <xs:annotation>
          <xs:documentation>Describes the requirement of the officers(owner, partner, directors) to access the BCA product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaxAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum amount of officers (for a particular officer type) required to the BCA product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum amount of officers (for a particular officer type) required to the BCA product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the OfficerEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OfficerType" type="tns:OfficerType">
            <xs:annotation>
              <xs:documentation>Defines the types of officers eligible for the BCA product. Examples are Directors, Owners etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherOfficerType" type="tns:OtherOfficerType">
            <xs:annotation>
              <xs:documentation>Other Officer Type which is not available in the standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OfficerEligibility1">
        <xs:annotation>
          <xs:documentation>Describes the requirement of the officers(owner, partner, directors) to access the CCC product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaxAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum amount of officers (for a particular officer type) required to the CCC product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum amount of officers (for a particular officer type) required to the CCC product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the OfficerEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OfficerType" type="tns:OfficerType1">
            <xs:annotation>
              <xs:documentation>Defines the types of officers eligible for the CCC product. Examples are Directors, Owners etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherOfficerType" type="tns:OtherOfficerType">
            <xs:annotation>
              <xs:documentation>Other Officer Type which is not available in the standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OfficerEligibility2">
        <xs:annotation>
          <xs:documentation>Describes the requirement of the officers(owner, partner, directors) to access the SME Loan product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaxAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum amount of officers (for a particular officer type) required to the SME Loan product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum amount of officers (for a particular officer type) required to the SME Loan product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the OfficerEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OfficerType" type="tns:OfficerType2">
            <xs:annotation>
              <xs:documentation>Defines the types of officers eligible for the SME Loan product. Examples are Directors, Owners etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherOfficerType" type="tns:OtherOfficerType">
            <xs:annotation>
              <xs:documentation>Other Officer Type which is not available in the standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OfficerType">
        <xs:annotation>
          <xs:documentation>Defines the types of officers eligible for the BCA product. Examples are Directors, Owners etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Director" />
          <xs:enumeration value="Owner" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Partner" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficerType1">
        <xs:annotation>
          <xs:documentation>Defines the types of officers eligible for the CCC product. Examples are Directors, Owners etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Director" />
          <xs:enumeration value="Owner" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Partner" />
          <xs:enumeration value="SignificantControl" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficerType2">
        <xs:annotation>
          <xs:documentation>Defines the types of officers eligible for the SME Loan product. Examples are Directors, Owners etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Director" />
          <xs:enumeration value="Owner" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Partner" />
          <xs:enumeration value="SignificantControl" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OpeningHour">
        <xs:annotation>
          <xs:documentation>Opening &amp; Closing Times of a branch of an organisation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ClosingTime">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A particular point in the progression of time in a calendar day expressed in either UTC time format (hh:mm:ss.sssZ), local time with UTC offset format (hh:mm:ss.sss+/-hh:mm), or local time format (hh:mm:ss.sss). These representations are defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
Note on the time format:
1) beginning / end of calendar day
00:00:00 = the beginning of a calendar day
24:00:00 = the end of a calendar day
2) fractions of second in time format
Decimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(2[0-3]|[01][0-9]):?([0-5][0-9])$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OpeningTime">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A particular point in the progression of time in a calendar day expressed in either UTC time format (hh:mm:ss.sssZ), local time with UTC offset format (hh:mm:ss.sss+/-hh:mm), or local time format (hh:mm:ss.sss). These representations are defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
Note on the time format:
1) beginning / end of calendar day
00:00:00 = the beginning of a calendar day
24:00:00 = the end of a calendar day
2) fractions of second in time format
Decimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(2[0-3]|[01][0-9]):?([0-5][0-9])$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Organisation">
        <xs:annotation>
          <xs:documentation>Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CreateTimestamp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Creation Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EmailAddresses" type="tns:EmailAddress">
            <xs:annotation>
              <xs:documentation>Email addresses associated with the organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ModifyTimestamp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Modification Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OBAuthorisationState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB Participant Authorisation State</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OBOrganisationId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Open Banking Organisation Identifier</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OrganisationCommonName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The common name of the organisation</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PersonalAccountRoles" type="tns:PersonalAccountRole">
            <xs:annotation>
              <xs:documentation>Individuals who have authorised access to the organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PhoneNumbers" type="tns:PhoneNumber">
            <xs:annotation>
              <xs:documentation>Phone numbers by which an organisation can be contacted</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PostalAddresses" type="tns:PostalAddress">
            <xs:annotation>
              <xs:documentation>Organisations's Postal Addresses</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Organisation status description</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Organisation status</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Organisation1">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="competent_authority_claims" type="tns:CompetentAuthorityClaims1" />
          <xs:element minOccurs="0" name="onboarded_to_open_banking" type="xs:boolean" />
          <xs:element minOccurs="0" name="org_name">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="passports" type="tns:Passports" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="software_statements" type="tns:SoftwareStatement2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Organisation2">
        <xs:annotation>
          <xs:documentation>Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CreateTimestamp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Creation Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EmailAddresses" type="tns:EmailAddress">
            <xs:annotation>
              <xs:documentation>Email addresses associated with the organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ModifyTimestamp">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Modification Timestamp</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OBAuthorisationState">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OB Participant Authorisation State</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OBOrganisationId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Open Banking Organisation Identifier</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OrganisationCommonName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The common name of the organisation</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PersonalAccountRoles" type="tns:PersonalAccountRole">
            <xs:annotation>
              <xs:documentation>Individuals who have authorised access to the organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PhoneNumbers" type="tns:PhoneNumber1">
            <xs:annotation>
              <xs:documentation>Phone numbers by which an organisation can be contacted</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PostalAddresses" type="tns:PostalAddress">
            <xs:annotation>
              <xs:documentation>Organisations's Postal Addresses</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Organisation status description</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Organisation status</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OrganisationAssociativeCertificateType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="qseal" />
          <xs:enumeration value="obseal" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OrganisationCertificateType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="qwac" />
          <xs:enumeration value="qseal" />
          <xs:enumeration value="obwac" />
          <xs:enumeration value="obseal" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OrganisationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="aspsp" />
          <xs:enumeration value="tpp" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OtherAccessibility">
        <xs:annotation>
          <xs:documentation>Enter a new code , name and description for any other ATM accessibility options</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherAccessibility1">
        <xs:annotation>
          <xs:documentation>Enter any new code , name and description for any other Accessibility</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherAmountType">
        <xs:annotation>
          <xs:documentation>Other amount type which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherAmountType1">
        <xs:annotation>
          <xs:documentation>Other amount type which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherApplicationFrequency1">
        <xs:annotation>
          <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherApplicationFrequency2">
        <xs:annotation>
          <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherATMService">
        <xs:annotation>
          <xs:documentation>Enter a new code , name and description for any other ATM Service</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherBankInterestType">
        <xs:annotation>
          <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherBankInterestType2">
        <xs:annotation>
          <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherCalculationFrequency1">
        <xs:annotation>
          <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherCardScheme">
        <xs:annotation>
          <xs:documentation>Other card scheme which is not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherContactType">
        <xs:annotation>
          <xs:documentation>Other contact type which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used whithin an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherCustomerSegment">
        <xs:annotation>
          <xs:documentation>Enter a new code , name and description for any other Customer Segment</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherEligibility">
        <xs:annotation>
          <xs:documentation>Other eligibility which is not covered by the main eligibility of the BCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherEligibility1">
        <xs:annotation>
          <xs:documentation>Other eligibility which is not covered by the main eligibility of the CCC product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type11">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherEligibility2">
        <xs:annotation>
          <xs:documentation>Other eligibility which is not covered by the main eligibility of the PCA product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period3">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type19">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherEligibility3">
        <xs:annotation>
          <xs:documentation>Other eligibility which is not covered by the main eligibility of the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where an amount is required to be specified e.g. Minimum Age.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Full description for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. UKResident is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name provided for the eligibility criteria</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the eligibility conditions.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherType" type="tns:OtherType">
            <xs:annotation>
              <xs:documentation>Non-standard eligibility type code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period16">
            <xs:annotation>
              <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type" type="tns:Type29">
            <xs:annotation>
              <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeCategory">
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeCategoryType">
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeRateType">
        <xs:annotation>
          <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeRateType1">
        <xs:annotation>
          <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeRateType14">
        <xs:annotation>
          <xs:documentation>Other fee rate type which is not in the standard rate type list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharge">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either Overdraft or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherTariffType" type="tns:OtherTariffType">
            <xs:annotation>
              <xs:documentation>Other tariff type which is not in the standard list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TariffName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the tariff</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TariffType" type="tns:TariffType">
            <xs:annotation>
              <xs:documentation>TariffType which defines the fee and charges.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharges">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either NonRepayment or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap1">
            <xs:annotation>
              <xs:documentation>Details about any caps (minimum/maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail1">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharges1">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either Overdraft or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap2">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular or group of fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail2">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherTariffType" type="tns:OtherTariffType">
            <xs:annotation>
              <xs:documentation>Other tariff type which is not in the standard list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TariffName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the tariff</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TariffType" type="tns:TariffType">
            <xs:annotation>
              <xs:documentation>TariffType which defines the fee and charges.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharges2">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either Overdraft or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap4" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail3" />
          <xs:element minOccurs="0" name="OtherTariffType" type="tns:OtherTariffType2">
            <xs:annotation>
              <xs:documentation>Other tariff type which is not in the standard list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TariffName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of the tariff</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TariffType" type="tns:TariffType2">
            <xs:annotation>
              <xs:documentation>TariffType which defines the fee and charges.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharges3">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either borrowing or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap6">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail4">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharges4">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either borrowing or features/benefits</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap8">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail5">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeesCharges5">
        <xs:annotation>
          <xs:documentation>Contains details of fees and charges which are not associated with either loan interest or repayments</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FeeChargeCap" type="tns:FeeChargeCap9">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeChargeDetail" type="tns:FeeChargeDetail6">
            <xs:annotation>
              <xs:documentation>Other fees/charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType">
        <xs:annotation>
          <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType1">
        <xs:annotation>
          <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType3">
        <xs:annotation>
          <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType9">
        <xs:annotation>
          <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory2">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType11">
        <xs:annotation>
          <xs:documentation>Other non repayment Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory2">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType14">
        <xs:annotation>
          <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory5">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType21">
        <xs:annotation>
          <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType40">
        <xs:annotation>
          <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="FeeCategory" type="tns:FeeCategory9">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherFeeType48">
        <xs:annotation>
          <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCategory" type="tns:FeeCategory11">
            <xs:annotation>
              <xs:documentation>Categorisation of fees and charges into standard categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherLegalStructure">
        <xs:annotation>
          <xs:documentation>Other legal structure code of the business  which is not present in the standard list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherLoanProviderInterestRateType">
        <xs:annotation>
          <xs:documentation>Other loan interest rate types which are not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherLoanProviderInterestRateType1">
        <xs:annotation>
          <xs:documentation>Other loan interest rate types which are not available in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherLocationCategory">
        <xs:annotation>
          <xs:documentation>Enter a new code , name and description for any other location category</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherOfficerType">
        <xs:annotation>
          <xs:documentation>Other Officer Type which is not available in the standard code list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherProductType">
        <xs:annotation>
          <xs:documentation>Other product type details associated with the account.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CreditInterest" type="tns:CreditInterest2">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the Account holders</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of the Product associated with the account</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LoanInterest" type="tns:LoanInterest">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the SME Loan holders</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeesCharges" type="tns:OtherFeesCharges2" />
          <xs:element minOccurs="0" name="Overdraft" type="tns:Overdraft2">
            <xs:annotation>
              <xs:documentation>Borrowing details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDetails" type="tns:ProductDetails1" />
          <xs:element minOccurs="0" name="Repayment" type="tns:Repayment1">
            <xs:annotation>
              <xs:documentation>Repayment details of the Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SupplementaryData" type="xs:anyType">
            <xs:annotation>
              <xs:documentation>Additional information that can not be captured in the structured fields and/or any other specific block.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherRepaymentFrequency">
        <xs:annotation>
          <xs:documentation>Other repayment frequency which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherRepaymentFrequency1">
        <xs:annotation>
          <xs:documentation>Other repayment frequency which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherRepaymentType">
        <xs:annotation>
          <xs:documentation>Other repayment type which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherRepaymentType1">
        <xs:annotation>
          <xs:documentation>Other repayment type which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherResidencyType">
        <xs:annotation>
          <xs:documentation>Other residency type which is not available in standard code list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherScheme">
        <xs:annotation>
          <xs:documentation>Operator of a card scheme which is not available in the standard scheme code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSegment">
        <xs:annotation>
          <xs:documentation>Other Segment not available in the standard segment list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an SWAGGER file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSegment1">
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSegment3">
        <xs:annotation>
          <xs:documentation>Other segment code which is not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherServiceAndFacility">
        <xs:annotation>
          <xs:documentation>Enter any new code , name and description for any Other Facility</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSICCode">
        <xs:annotation>
          <xs:documentation>Other SICCODE which is not present in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>SICCode which is not present in the standard code set.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSICCodeExcluded">
        <xs:annotation>
          <xs:documentation>Other SICCode which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSICCodeExluded">
        <xs:annotation>
          <xs:documentation>Other SICCode which is not in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSICCodeIncluded">
        <xs:annotation>
          <xs:documentation>Other SICCode which is not in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherSICCodeIncluded1">
        <xs:annotation>
          <xs:documentation>Other SICCode which is not in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9]{0,5}$" />
                <xs:maxLength value="5" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherTariffType">
        <xs:annotation>
          <xs:documentation>Other tariff type which is not in the standard list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherTariffType2">
        <xs:annotation>
          <xs:documentation>Other tariff type which is not in the standard list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\w{0,4}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherTradingType">
        <xs:annotation>
          <xs:documentation>Other trading type which is not exist in standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherType">
        <xs:annotation>
          <xs:documentation>Non-standard eligibility type code.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherType2">
        <xs:annotation>
          <xs:documentation>Any other Card Type which is not available in the standard card type</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherType5">
        <xs:annotation>
          <xs:documentation>Other common types of features &amp; benefits which are not available in the standard code set</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherType6">
        <xs:annotation>
          <xs:documentation>Any other types of features &amp; benefits which is not available in the standard code list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherType9">
        <xs:annotation>
          <xs:documentation>Other Mobile applications that the BCA product supports and that arent in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherType26">
        <xs:annotation>
          <xs:documentation>Other Mobile applications that the PCA product supports and that aren't in the standard code list</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Code">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The four letter Mnemonic used within an XML file to identify a code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description to describe the purpose of the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Long name associated with the code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Overdraft">
        <xs:annotation>
          <xs:documentation>Borrowing details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Associated Notes about the overdraft rates</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBandSet" type="tns:OverdraftTierBandSet">
            <xs:annotation>
              <xs:documentation>Tier band set details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TcsAndCsURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the financial institution which redirects to the BCA Overdraft T&amp;Cs on an external website</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Overdraft1">
        <xs:annotation>
          <xs:documentation>Borrowing details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Associated Notes about the overdraft rates</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBandSet" type="tns:OverdraftTierBandSet1">
            <xs:annotation>
              <xs:documentation>Tier band set details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Overdraft2">
        <xs:annotation>
          <xs:documentation>Borrowing details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBandSet" type="tns:OverdraftTierBandSet2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Overdraft3">
        <xs:annotation>
          <xs:documentation>Details about Overdraft rates, fees &amp; charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Associated Notes about the overdraft rates</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBandSet" type="tns:OverdraftTierBandSet3">
            <xs:annotation>
              <xs:documentation>Tier band set details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Overdraft4">
        <xs:annotation>
          <xs:documentation>Borrowing details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Associated Notes about the overdraft rates</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBandSet" type="tns:OverdraftTierBandSet4">
            <xs:annotation>
              <xs:documentation>Tier band set details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TcsAndCsURL">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>URL provided by the financial institution which redirects to the PCA Overdraft T&amp;Cs on an external website</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeCap">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if its part of a government scheme, or whether the rate may vary dependent on the applicants circumstances.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Notes related to Overdraft fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeCap4">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod5">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if it’s part of a government scheme, or whether the rate may vary dependent on the applicant’s circumstances.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Notes related to Overdraft fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeCap8">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:OB_Period1Code">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if its part of a government scheme, or whether the rate may vary dependent on the applicants circumstances.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType25" />
          <xs:element minOccurs="1" name="MinMaxType" type="tns:OB_MinMaxType1Code">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType21" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeCap12">
        <xs:annotation>
          <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType15">
            <xs:annotation>
              <xs:documentation>Indicates that this is the minimum/ maximum fee/charge that can be applied by the financial institution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Notes related to Overdraft fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftControlIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies for the overdraft control feature/benefit</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeDetail">
        <xs:annotation>
          <xs:documentation>Details about the fees/charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency2">
            <xs:annotation>
              <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency2">
            <xs:annotation>
              <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount charged for an overdraft fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType1">
            <xs:annotation>
              <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Overdraft fee type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncrementalBorrowingAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Every additional tranche of an overdraft balance to which an overdraft fee is applied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether fee and charges are negotiable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for capturing any other info related to Overdraft Fees Charge Details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType1">
            <xs:annotation>
              <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType3">
            <xs:annotation>
              <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftControlIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the fee/charge is already covered by an Overdraft Control fee or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeDetail2">
        <xs:annotation>
          <xs:documentation>Details about the fees/charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency2">
            <xs:annotation>
              <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency2">
            <xs:annotation>
              <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount charged for an overdraft fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType1">
            <xs:annotation>
              <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Overdraft fee type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncrementalBorrowingAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Every additional tranche of an overdraft balance to which an overdraft fee is applied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether fee and charges are negotiable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for capturing any other info related to Overdraft Fees Charge Details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency1">
            <xs:annotation>
              <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency1">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType1">
            <xs:annotation>
              <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType3">
            <xs:annotation>
              <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftControlIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the fee/charge is already covered by an 'Overdraft Control' fee or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap4">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeDetail4">
        <xs:annotation>
          <xs:documentation>Details about the fees/charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:OB_FeeFrequency1Code_0">
            <xs:annotation>
              <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:OB_FeeFrequency1Code_1">
            <xs:annotation>
              <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount charged for an overdraft fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:OB_InterestRateType1Code_0">
            <xs:annotation>
              <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:OB_OverdraftFeeType1Code">
            <xs:annotation>
              <xs:documentation>Overdraft fee type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncrementalBorrowingAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Every additional tranche of an overdraft balance to which an overdraft fee is applied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether fee and charges are negotiable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OB_OtherCodeType1_1">
            <xs:annotation>
              <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OB_OtherCodeType1_2">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OB_OtherCodeType1_4">
            <xs:annotation>
              <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OB_OtherCodeType1_3">
            <xs:annotation>
              <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftControlIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the fee/charge is already covered by an 'Overdraft Control' fee or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap8" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeDetail6">
        <xs:annotation>
          <xs:documentation>Details about the fees/charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency14">
            <xs:annotation>
              <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency14">
            <xs:annotation>
              <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount charged for an overdraft fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType9">
            <xs:annotation>
              <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Overdraft fee type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncrementalBorrowingAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Every additional tranche of an overdraft balance to which an overdraft fee is applied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for capturing any other info related to Overdraft Fees Charge Details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency1">
            <xs:annotation>
              <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency1">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType1">
            <xs:annotation>
              <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType3">
            <xs:annotation>
              <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftControlIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies for the overdraft control feature/benefit</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap12">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeeChargeDetail8">
        <xs:annotation>
          <xs:documentation>Details about the fees/charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency14">
            <xs:annotation>
              <xs:documentation>Frequency at which the overdraft charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency14">
            <xs:annotation>
              <xs:documentation>How often is the overdraft fee/charge calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount charged for an overdraft fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType9">
            <xs:annotation>
              <xs:documentation>Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType2">
            <xs:annotation>
              <xs:documentation>Overdraft fee type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IncrementalBorrowingAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Every additional tranche of an overdraft balance to which an overdraft fee is applied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for capturing any other info related to Overdraft Fees Charge Details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType1">
            <xs:annotation>
              <xs:documentation>Other fee rate type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType3">
            <xs:annotation>
              <xs:documentation>Other Fee type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftControlIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies for the overdraft control feature/benefit</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap12">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge1">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge2">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap4">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail2">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge3">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap4">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail2">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge4">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap8" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail4" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge5">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap8" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail4" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge6">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap12">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail6">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge7">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap12">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail6">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge8">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap12">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail8">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftFeesCharge9">
        <xs:annotation>
          <xs:documentation>Overdraft fees and charges</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeeChargeCap" type="tns:OverdraftFeeChargeCap12">
            <xs:annotation>
              <xs:documentation>Details about any caps (maximum charges) that apply to a particular fee/charge</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftFeeChargeDetail" type="tns:OverdraftFeeChargeDetail8">
            <xs:annotation>
              <xs:documentation>Details about the fees/charges</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OverdraftInterestChargingCoverage">
        <xs:annotation>
          <xs:documentation>Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is GBP 2k and the interest tiers are:- 0-GBP 500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the Whole of the account balance,  and in the 2nd that it is Tiered.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OverdraftInterestChargingCoverage1">
        <xs:annotation>
          <xs:documentation>Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is £2k and the interest tiers are:- 0-£500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the ‘Whole’ of the account balance,  and in the 2nd that it is ‘Tiered’.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OverdraftInterestChargingCoverage2">
        <xs:annotation>
          <xs:documentation>Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is 2k and the interest tiers are:- 0-500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the Whole of the account balance,  and in the 2nd that it is Tiered.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBA" />
          <xs:enumeration value="INTI" />
          <xs:enumeration value="INWH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OverdraftInterestChargingCoverage3">
        <xs:annotation>
          <xs:documentation>Interest charged on whole amount or tiered/banded</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="OverdraftTierBand">
        <xs:annotation>
          <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgreementLengthMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the maximum length of a band for a fixed overdraft agreement</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AgreementLengthMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the minimum length of a band for a fixed overdraft agreement</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AgreementPeriod" type="tns:AgreementPeriod">
            <xs:annotation>
              <xs:documentation>Specifies the period of a fixed length overdraft agreement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankGuaranteedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if its part of a government scheme, or whether the rate may vary dependent on the applicants circumstances.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EAR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>EAR means Effective Annual Rate and/or Equivalent Annual Rate (frequently
used interchangeably), being the actual annual interest rate of an Overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier/band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge1">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftInterestChargingCoverage" type="tns:OverdraftInterestChargingCoverage">
            <xs:annotation>
              <xs:documentation>Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is GBP 2k and the interest tiers are:- 0-GBP 500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the Whole of the account balance,  and in the 2nd that it is Tiered.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBand1">
        <xs:annotation>
          <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgreementLengthMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the maximum length of a band for a fixed overdraft agreement</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AgreementLengthMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the minimum length of a band for a fixed overdraft agreement</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AgreementPeriod" type="tns:AgreementPeriod1">
            <xs:annotation>
              <xs:documentation>Specifies the period of a fixed length overdraft agreement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankGuaranteedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if it’s part of a government scheme, or whether the rate may vary dependent on the applicant’s circumstances.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EAR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>EAR means Effective Annual Rate and/or Equivalent Annual Rate (frequently
used interchangeably), being the actual annual interest rate of an Overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier/band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge3">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftInterestChargingCoverage" type="tns:OverdraftInterestChargingCoverage1">
            <xs:annotation>
              <xs:documentation>Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is £2k and the interest tiers are:- 0-£500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the ‘Whole’ of the account balance,  and in the 2nd that it is ‘Tiered’.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBand2">
        <xs:annotation>
          <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AgreementLengthMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the maximum length of a band for a fixed overdraft agreement</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AgreementLengthMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the minimum length of a band for a fixed overdraft agreement</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AgreementPeriod" type="tns:AgreementPeriod2">
            <xs:annotation>
              <xs:documentation>Specifies the period of a fixed length overdraft agreement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankGuaranteedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if its part of a government scheme, or whether the rate may vary dependent on the applicants circumstances.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EAR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>EAR means Effective Annual Rate and/or Equivalent Annual Rate (frequently
used interchangeably), being the actual annual interest rate of an Overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge5" />
          <xs:element minOccurs="0" name="OverdraftInterestChargingCoverage" type="tns:OverdraftInterestChargingCoverage2">
            <xs:annotation>
              <xs:documentation>Refers to which interest rate is applied when interests are tiered. For example, if an overdraft balance is 2k and the interest tiers are:- 0-500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable interest rate could either be 0.5% of the entire balance (since the account balance sits in the top interest tier) or (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest is applied to the Whole of the account balance,  and in the 2nd that it is Tiered.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBand3">
        <xs:annotation>
          <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="BankGuaranteedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates that a bank provides the overdraft limit up to TierValueMIn to all customers automatically</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EAR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>EAR means Effective Annual Rate and/or Equivalent Annual Rate (frequently
used interchangeably), being the actual annual interest rate of an Overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier/band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge7">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftInterestChargingCoverage" type="tns:OverdraftInterestChargingCoverage3">
            <xs:annotation>
              <xs:documentation>Interest charged on whole amount or tiered/banded</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBand4">
        <xs:annotation>
          <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="BankGuaranteedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates that a bank provides the overdraft limit up to TierValueMIn to all customers automatically</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EAR">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>EAR means Effective Annual Rate and/or Equivalent Annual Rate (frequently
used interchangeably), being the actual annual interest rate of an Overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier/band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge9">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftInterestChargingCoverage" type="tns:OverdraftInterestChargingCoverage3">
            <xs:annotation>
              <xs:documentation>Interest charged on whole amount or tiered/banded</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMax">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMin">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum value of Overdraft Tier/Band</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBandSet">
        <xs:annotation>
          <xs:documentation>Tier band set details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthorisedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the Overdraft is authorised (Y) or unauthorised (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BufferAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>When a customer exceeds their credit limit, a financial institution will not charge the customer unauthorised overdraft charges if they do not exceed by more than the buffer amount. Note: Authorised overdraft charges may still apply.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumArrangedOverdraftAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it or not enough to cover the withdrawal. Some banking products require an accountholder to take an Arranged Overdraft(minimum) of at least GBP X, or else a bank will not process an Arranged Overdraft request.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the overdraft Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBand" type="tns:OverdraftTierBand">
            <xs:annotation>
              <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftType" type="tns:OverdraftType">
            <xs:annotation>
              <xs:documentation>An overdraft can either be committed which means that the facility cannot be withdrawn without reasonable notification before its agreed end date, or on demand which means that the financial institution can demand repayment at any point in time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod1">
            <xs:annotation>
              <xs:documentation>The methodology of how overdraft is charged. It can be:
Whole  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
Tiered Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
Banded Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBandSet1">
        <xs:annotation>
          <xs:documentation>Tier band set details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthorisedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the Overdraft is authorised (Y) or unauthorised (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BufferAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>When a customer exceeds their credit limit, a financial institution will not charge the customer unauthorised overdraft charges if they do not exceed by more than the buffer amount. Note: Authorised overdraft charges may still apply.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the overdraft Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge2">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBand" type="tns:OverdraftTierBand1">
            <xs:annotation>
              <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftType" type="tns:OverdraftType1">
            <xs:annotation>
              <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod3">
            <xs:annotation>
              <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBandSet2">
        <xs:annotation>
          <xs:documentation>Tier band set details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthorisedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the Overdraft is authorised (Y) or unauthorised (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BufferAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>When a customer exceeds their credit limit, a financial institution will not charge the customer unauthorised overdraft charges if they do not exceed by more than the buffer amount. Note: Authorised overdraft charges may still apply.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge4" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBand" type="tns:OverdraftTierBand2" />
          <xs:element minOccurs="0" name="OverdraftType" type="tns:OverdraftType2">
            <xs:annotation>
              <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod6">
            <xs:annotation>
              <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBandSet3">
        <xs:annotation>
          <xs:documentation>Tier band set details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthorisedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the Overdraft is authorised (Y) or unauthorised (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BufferAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>When a customer exceeds their credit limit, a financial institution will not charge the customer unauthorised overdraft charges if they do not exceed by more than the buffer amount. Note: Authorised overdraft charges may still apply.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the overdraft Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge6">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBand" type="tns:OverdraftTierBand3">
            <xs:annotation>
              <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftType" type="tns:OverdraftType3">
            <xs:annotation>
              <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod3">
            <xs:annotation>
              <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OverdraftTierBandSet4">
        <xs:annotation>
          <xs:documentation>Tier band set details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthorisedIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if the Overdraft is authorised (Y) or unauthorised (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BufferAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>When a customer exceeds their credit limit, a financial institution will not charge the customer unauthorised overdraft charges if they do not exceed by more than the buffer amount. Note: Authorised overdraft charges may still apply.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a overdraft product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumArrangedOverdraftAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it or not enough to cover the withdrawal. Some banking products require an accountholder to take an Arranged Overdraft(minimum) of at least X amount, or else a bank will not process an Arranged Overdraft request.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the overdraft Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverdraftFeesCharges" type="tns:OverdraftFeesCharge8">
            <xs:annotation>
              <xs:documentation>Overdraft fees and charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="OverdraftTierBand" type="tns:OverdraftTierBand4">
            <xs:annotation>
              <xs:documentation>Provides overdraft details for a specific tier or band</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OverdraftType" type="tns:OverdraftType3">
            <xs:annotation>
              <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod10">
            <xs:annotation>
              <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OverdraftType">
        <xs:annotation>
          <xs:documentation>An overdraft can either be committed which means that the facility cannot be withdrawn without reasonable notification before its agreed end date, or on demand which means that the financial institution can demand repayment at any point in time.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Committed" />
          <xs:enumeration value="OnDemand" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OverdraftType1">
        <xs:annotation>
          <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Committed" />
          <xs:enumeration value="OnDemand" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OverdraftType2">
        <xs:annotation>
          <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OVCO" />
          <xs:enumeration value="OVOD" />
          <xs:enumeration value="OVOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OverdraftType3">
        <xs:annotation>
          <xs:documentation>An overdraft can either be 'committed' which means that the facility cannot be withdrawn without reasonable notification before it's agreed end date, or 'on demand' which means that the financial institution can demand repayment at any point in time.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Committed" />
          <xs:enumeration value="OnDemand" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Party">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Address" type="tns:Address" />
          <xs:element minOccurs="0" name="EmailAddress">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address for electronic mail (e-mail).</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Mobile">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Collection of information that identifies a mobile phone number, as defined by telecom services.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\+[0-9]{1,3}-[0-9()+\-]{1,30}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name by which a party is known and which is usually used to identify that party.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="PartyId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A unique and immutable identifier used to identify the customer resource. This identifier has no meaning to the account owner.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PartyNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Number assigned by an agent to identify its customer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PartyType" type="tns:OBExternalPartyType1Code">
            <xs:annotation>
              <xs:documentation>Party type, in a coded form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Phone">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Collection of information that identifies a phone number, as defined by telecom services.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="\+[0-9]{1,3}-[0-9()+\-]{1,30}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Passports">
        <xs:sequence>
          <xs:element minOccurs="0" name="nca_name" type="tns:NcaName" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PaymentContextCode">
        <xs:annotation>
          <xs:documentation>Specifies the payment context</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BillPayment" />
          <xs:enumeration value="EcommerceGoods" />
          <xs:enumeration value="EcommerceServices" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PartyToParty" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PaymentStatus">
        <xs:annotation>
          <xs:documentation>Payment status details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="PaymentTransactionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="210" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Status" type="tns:Status23">
            <xs:annotation>
              <xs:documentation>Status of a transfe, as assigned by the transaction administrator.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusDetail" type="tns:StatusDetail">
            <xs:annotation>
              <xs:documentation>Payment status details as per underlying Payment Rail.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="StatusUpdateDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time at which the status was assigned to the transfer.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PCA">
        <xs:sequence>
          <xs:element minOccurs="0" name="CreditInterest" type="tns:CreditInterest3">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the PCA account holders</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeesCharges" type="tns:OtherFeesCharges3">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either borrowing or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Overdraft" type="tns:Overdraft3">
            <xs:annotation>
              <xs:documentation>Details about Overdraft rates, fees &amp; charges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductDetails" type="tns:ProductDetails2" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PCA1">
        <xs:annotation>
          <xs:documentation>PCA' means a personal current account. That is an account marketed to individuals rather than businesses, which provides the facility to place funds, withdraw cash, hold deposits and to execute payment transaction to and from third parties but does not include any of the following types of accounts: 
(a) an account in which money is held on deposit in a currency other than sterling;  (b) current account mortgage, ie a single account comprising both a personal current account and a mortgage, which is regulated and marketed principally as a mortgage;  
(c) savings accounts (including instant access savings accounts);  
(d) credit card accounts where funds are usually paid in for the sole purpose of repaying a credit card debt; and 
(e) e-money accounts.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The unique ID that has been internally assigned by the financial institution to each of the current account banking products they market to their retail and/or small to medium enterprise (SME) customers.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The name of the PCA product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the product details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OnSaleIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates that the published product is OnSale(value 1) or Back Book (value 0)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSegment" type="tns:OtherSegment1" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="PCAMarketingState" type="tns:PCAMarketingState">
            <xs:annotation>
              <xs:documentation>Describes the type of the known state (regular, promotional )  of the product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Segment" type="tns:Segment5">
            <xs:annotation>
              <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
Follow us: Investopedia on Facebook

With respect to PCA products, they are segmented in relation to different markets that they wish to focus on. For example, Basic PCA products target consumers with poor credit history, Reward PCA products target consumers who spend a lot, and Premium products target High Net Worth individuals.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PCAMarketingState">
        <xs:annotation>
          <xs:documentation>Describes the type of the known state (regular, promotional )  of the product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CoreProduct" type="tns:CoreProduct2">
            <xs:annotation>
              <xs:documentation>Core feature of the PCA product which can be associated to a particular Marketing State</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreditInterest" type="tns:CreditInterest4">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the PCA account holders</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Eligibility" type="tns:Eligibility2">
            <xs:annotation>
              <xs:documentation>Eligibility details for this product i.e. the criteria that an accountholder has to meet in order to be eligible for the PCA product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeaturesAndBenefits" type="tns:FeaturesAndBenefits2">
            <xs:annotation>
              <xs:documentation>Feature And Benefits Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state start date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Eligibility Marketing state.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LastMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MarketingState" type="tns:MarketingState2">
            <xs:annotation>
              <xs:documentation>Describes the marketing state (regular or promotional) for which the eligibility criteria applies</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding details for marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeesCharges" type="tns:OtherFeesCharges4">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either borrowing or features/benefits</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Overdraft" type="tns:Overdraft4">
            <xs:annotation>
              <xs:documentation>Borrowing details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PredecessorID">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies the marketing state that precedes this marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenureLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of a promotional state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenurePeriod" type="tns:StateTenurePeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Period">
        <xs:annotation>
          <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="PerStatementDate" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Period2">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="HalfYear" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Period3">
        <xs:annotation>
          <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="HalfYear" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Period7">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Period8">
        <xs:annotation>
          <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Period16">
        <xs:annotation>
          <xs:documentation>Period for which the other eligibility criteria applies.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Flexible" />
          <xs:enumeration value="Fortnightly" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PeriodicFeePeriod">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the Periodic Fee</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Permission">
        <xs:sequence>
          <xs:element minOccurs="0" name="code">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="effective_from">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="permission">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Permission1">
        <xs:annotation>
          <xs:documentation>Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ReadAccountsBasic" />
          <xs:enumeration value="ReadAccountsDetail" />
          <xs:enumeration value="ReadBalances" />
          <xs:enumeration value="ReadBeneficiariesBasic" />
          <xs:enumeration value="ReadBeneficiariesDetail" />
          <xs:enumeration value="ReadDirectDebits" />
          <xs:enumeration value="ReadOffers" />
          <xs:enumeration value="ReadPAN" />
          <xs:enumeration value="ReadParty" />
          <xs:enumeration value="ReadPartyPSU" />
          <xs:enumeration value="ReadProducts" />
          <xs:enumeration value="ReadScheduledPaymentsBasic" />
          <xs:enumeration value="ReadScheduledPaymentsDetail" />
          <xs:enumeration value="ReadStandingOrdersBasic" />
          <xs:enumeration value="ReadStandingOrdersDetail" />
          <xs:enumeration value="ReadStatementsBasic" />
          <xs:enumeration value="ReadStatementsDetail" />
          <xs:enumeration value="ReadTransactionsBasic" />
          <xs:enumeration value="ReadTransactionsCredits" />
          <xs:enumeration value="ReadTransactionsDebits" />
          <xs:enumeration value="ReadTransactionsDetail" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonalAccountRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="Role">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Role which the individual holds</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="UserName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User's name, email address or other identifying label</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PhoneNumber">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A name of a person or an office to which this phonenumber belongs.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of phone contact</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Value">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Value of phone number through which the organisationcan be contacted</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Verified" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to show that the phone number has been verified</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PhoneNumber1">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A name of a person or an office to which this phone number belongs.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of phone contact</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Value">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Value of phone number through which the organisation can be contacted</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Verified" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to show that the phone number has been verified</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PostalAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Additional address line</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Address Country in full</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="County">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country or regional devision</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of addressee</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="POBox">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>PO Box assosiated with address</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PostCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Post or ZIP Code</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Primary" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate that this is the primary contact address</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StreetAddress">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Street Address, including building number</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Town">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Postal Town</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of postal address</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PostalAddress1">
        <xs:annotation>
          <xs:documentation>Information that locates and identifies a specific address, as defined by postal services or in free format text.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AddressLine">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BuildingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name or Number that identifies the position of a building on a street.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Nation with its own government, occupying a particular territory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="[A-Z]{2}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CountrySubDivision">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies a subdivision of a country, for instance state, region, county.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="GeoLocation" type="tns:GeoLocation">
            <xs:annotation>
              <xs:documentation>Geographic location of the ATM specified by geographic coordinates or UTM coordinates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PostCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StreetName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a street or thoroughfare.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TownName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a built-up area, with defined boundaries, and a local government.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PostalAddress2">
        <xs:annotation>
          <xs:documentation>Information that locates and identifies a specific address, as defined by postal services.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AddressLine">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BuildingNumber">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name or Number that identifies the position of a building on a street.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Country">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Nation with its own government, occupying a particular territory.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="[A-Z]{2}" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CountrySubDivision">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies a subdivision of a country, for instance state, region, county.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="GeoLocation" type="tns:GeoLocation1">
            <xs:annotation>
              <xs:documentation>Geographic location of the ATM specified by geographic coordinates or UTM coordinates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="PostCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="16" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StreetName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a street or thoroughfare.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TownName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Name of a built-up area, with defined boundaries, and a local government.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PreviousPaymentAmount">
        <xs:annotation>
          <xs:documentation>The amount of the most recent direct debit collection.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Product">
        <xs:annotation>
          <xs:documentation>Product details associated with the Account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AccountId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Account Identification of the customer for Product Details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BCA" type="tns:BCA1" />
          <xs:element minOccurs="0" name="MarketingStateId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Product Marketing State.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherProductType" type="tns:OtherProductType">
            <xs:annotation>
              <xs:documentation>Other product type details associated with the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PCA" type="tns:PCA" />
          <xs:element minOccurs="0" name="ProductId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The unique ID that has been internally assigned by the financial institution to each of the current account banking products they market to their retail and/or small to medium enterprise (SME) customers.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ProductName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The name of the Product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ProductType" type="tns:ProductType">
            <xs:annotation>
              <xs:documentation>Product type : Personal Current Account, Business Current Account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryProductId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any secondary Identification which  supports Product Identifier to uniquely identify the current account banking products.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="70" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProductDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="FeeFreeLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of the fee free period</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeFreeLengthPeriod" type="tns:FeeFreeLengthPeriod1">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Core product details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Segment" type="tns:Segment2">
            <xs:annotation>
              <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
With respect to BCA products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProductDetails1">
        <xs:sequence>
          <xs:element minOccurs="0" name="FeeFreeLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of the fee free period</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeFreeLengthPeriod" type="tns:FeeFreeLengthPeriod2">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MonthlyMaximumCharge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum relevant charges that could accrue as defined fully in Part 7 of the CMA order</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherSegment" type="tns:OB_OtherCodeType1_0" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Segment" type="tns:Segment3" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProductDetails2">
        <xs:sequence>
          <xs:element minOccurs="0" name="MonthlyMaximumCharge">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum relevant charges that could accrue as defined fully in Part 7 of the CMA order</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Core product details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Segment" type="tns:Segment4">
            <xs:annotation>
              <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
With respect to PCA products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ProductType">
        <xs:annotation>
          <xs:documentation>Product type : Personal Current Account, Business Current Account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BusinessCurrentAccount" />
          <xs:enumeration value="CommercialCreditCard" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PersonalCurrentAccount" />
          <xs:enumeration value="SMELoan" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RateType">
        <xs:annotation>
          <xs:documentation>Specifies the type used to complete the currency exchange.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Actual" />
          <xs:enumeration value="Agreed" />
          <xs:enumeration value="Indicative" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="RecurringPaymentAmount">
        <xs:annotation>
          <xs:documentation>The amount of the recurring Standing Order</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\\d{1,13}\\.\\d{1,5}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Currency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[A-Z]{3,3}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RegisteraclientbywayofaSoftwareStatementAssertionResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="application_type" type="tns:ApplicationType" />
          <xs:element minOccurs="1" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client identifier string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_id_issued_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client secret string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret_expires_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client secret will expire expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0 if does not expire</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="grant_types" type="tns:GrantType" />
          <xs:element minOccurs="1" name="id_token_signed_response_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="request_object_signing_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="response_types" type="tns:ResponseType" />
          <xs:element minOccurs="1" name="scope">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,22}$" />
                <xs:maxLength value="22" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_statement">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tls_client_auth_subject_dn">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_endpoint_auth_method" type="tns:TokenEndpointAuthMethod" />
          <xs:element minOccurs="0" name="token_endpoint_auth_signing_alg" type="tns:SupportedAlgorithms" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RemittanceInformation">
        <xs:annotation>
          <xs:documentation>Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Reference">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Unstructured">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Repayment">
        <xs:annotation>
          <xs:documentation>Repayment details of the CCC product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MinBalanceRepaymentAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The minimum amount that you have to repay (if it is higher than MinBalancePaymentRate applied to outstanding balance) and if it is lower than the total outstanding balance remaining.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MinBalanceRepaymentRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The percentage of the outstanding balance that you have to repay per month</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="NonRepaymentFeeCharges" type="tns:NonRepaymentFeeCharge">
            <xs:annotation>
              <xs:documentation>Non repayment fee charges details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Repayment details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="RepaymentAllocation" type="tns:RepaymentAllocation">
            <xs:annotation>
              <xs:documentation>Repayment allocation details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Repayment1">
        <xs:annotation>
          <xs:documentation>Repayment details of the Loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AmountType" type="tns:AmountType">
            <xs:annotation>
              <xs:documentation>The repayment is for paying just the interest only or both interest and capital or bullet amount or balance to date etc</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherAmountType" type="tns:OtherAmountType">
            <xs:annotation>
              <xs:documentation>Other amount type which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherRepaymentFrequency" type="tns:OtherRepaymentFrequency">
            <xs:annotation>
              <xs:documentation>Other repayment frequency which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherRepaymentType" type="tns:OtherRepaymentType">
            <xs:annotation>
              <xs:documentation>Other repayment type which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RepaymentFeeCharges" type="tns:RepaymentFeeCharges">
            <xs:annotation>
              <xs:documentation>Applicable fee/charges for repayment such as prepayment, full early repayment or non repayment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RepaymentFrequency" type="tns:RepaymentFrequency">
            <xs:annotation>
              <xs:documentation>Repayment frequency</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RepaymentHoliday" type="tns:RepaymentHoliday" />
          <xs:element minOccurs="0" name="RepaymentType" type="tns:RepaymentType">
            <xs:annotation>
              <xs:documentation>Repayment type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Repayment2">
        <xs:annotation>
          <xs:documentation>Repayment details of the Loan product</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AmountType" type="tns:AmountType1">
            <xs:annotation>
              <xs:documentation>The repayment is for paying just the interest only or both interest and capital or bullet amount or balance to date etc</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Repayment</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherAmountType" type="tns:OtherAmountType1">
            <xs:annotation>
              <xs:documentation>Other amount type which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherRepaymentFrequency" type="tns:OtherRepaymentFrequency1">
            <xs:annotation>
              <xs:documentation>Other repayment frequency which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherRepaymentType" type="tns:OtherRepaymentType1">
            <xs:annotation>
              <xs:documentation>Other repayment type which is not in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RepaymentFeeCharges" type="tns:RepaymentFeeCharges1">
            <xs:annotation>
              <xs:documentation>Applicable fee/charges for repayment such as prepayment, full early repayment or non repayment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RepaymentFrequency" type="tns:RepaymentFrequency1">
            <xs:annotation>
              <xs:documentation>Repayment frequency</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RepaymentHoliday" type="tns:RepaymentHoliday1">
            <xs:annotation>
              <xs:documentation>Details of capital repayment holiday if any</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RepaymentType" type="tns:RepaymentType1">
            <xs:annotation>
              <xs:documentation>Repayment type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentAllocation">
        <xs:annotation>
          <xs:documentation>Repayment allocation details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Additional notes to supplement the Repayment Allocation details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentFeeChargeCap">
        <xs:annotation>
          <xs:documentation>RepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on the fees that are charged</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:OB_Period1Code">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType21" />
          <xs:element minOccurs="1" name="MinMaxType" type="tns:OB_MinMaxType1Code">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType21" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentFeeChargeCap1">
        <xs:annotation>
          <xs:documentation>RepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on the fees that are charged</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CappingPeriod" type="tns:CappingPeriod5">
            <xs:annotation>
              <xs:documentation>Period e.g. day, week, month etc. for which the fee/charge is capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeCapOccurrence">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="FeeType" type="tns:FeeType47">
            <xs:annotation>
              <xs:documentation>Fee/charge type which is being capped</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding  extra details for fee charge cap</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherFeeType" type="tns:OtherFeeType">
            <xs:annotation>
              <xs:documentation>Other fee type code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentFeeChargeDetail">
        <xs:annotation>
          <xs:documentation>Details about specific fees/charges that are applied for repayment</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:OB_FeeFrequency1Code_2">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:OB_FeeFrequency1Code_3">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:OB_InterestRateType1Code_1">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:OB_FeeType1Code">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OB_OtherCodeType1_6">
            <xs:annotation>
              <xs:documentation>Other application frequencies not covered in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OB_OtherCodeType1_7">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OB_OtherCodeType1_8">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OB_OtherFeeChargeDetailType">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentFeeChargeDetail1">
        <xs:annotation>
          <xs:documentation>Details about specific fees/charges that are applied for repayment</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency22">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is applied to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency22">
            <xs:annotation>
              <xs:documentation>How frequently the fee/charge is calculated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeeAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee Amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="FeeRateType" type="tns:FeeRateType14">
            <xs:annotation>
              <xs:documentation>Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeeType" type="tns:FeeType48">
            <xs:annotation>
              <xs:documentation>Fee/Charge Type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NegotiableIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Fee/charge which is usually negotiable rather than a fixed amount. Indicates if the Fee/charge is negotiable (Y) or Fixed (N)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the fee/charge details.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeRateType" type="tns:OtherFeeRateType">
            <xs:annotation>
              <xs:documentation>Other fee rate type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeeType" type="tns:OtherFeeType48">
            <xs:annotation>
              <xs:documentation>Other Fee/charge type which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentFeeCharges">
        <xs:annotation>
          <xs:documentation>Applicable fee/charges for repayment such as prepayment, full early repayment or non repayment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RepaymentFeeChargeCap" type="tns:RepaymentFeeChargeCap" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="RepaymentFeeChargeDetail" type="tns:RepaymentFeeChargeDetail" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentFeeCharges1">
        <xs:annotation>
          <xs:documentation>Applicable fee/charges for repayment such as prepayment, full early repayment or non repayment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RepaymentFeeChargeCap" type="tns:RepaymentFeeChargeCap1">
            <xs:annotation>
              <xs:documentation>RepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on the fees that are charged</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="RepaymentFeeChargeDetail" type="tns:RepaymentFeeChargeDetail1">
            <xs:annotation>
              <xs:documentation>Details about specific fees/charges that are applied for repayment</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="RepaymentFrequency">
        <xs:annotation>
          <xs:documentation>Repayment frequency</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="SMDA" />
          <xs:enumeration value="SMFL" />
          <xs:enumeration value="SMFO" />
          <xs:enumeration value="SMHY" />
          <xs:enumeration value="SMMO" />
          <xs:enumeration value="SMOT" />
          <xs:enumeration value="SMQU" />
          <xs:enumeration value="SMWE" />
          <xs:enumeration value="SMYE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RepaymentFrequency1">
        <xs:annotation>
          <xs:documentation>Repayment frequency</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Daily" />
          <xs:enumeration value="Flexible" />
          <xs:enumeration value="Fortnightly" />
          <xs:enumeration value="HalfYearly" />
          <xs:enumeration value="Monthly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Quarterly" />
          <xs:enumeration value="Weekly" />
          <xs:enumeration value="Yearly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="RepaymentHoliday">
        <xs:annotation>
          <xs:documentation>Details of capital repayment holiday if any</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaxHolidayLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum length/duration of a Repayment Holiday</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MaxHolidayPeriod" type="tns:MaxHolidayPeriod">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the repayment holiday</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RepaymentHoliday1">
        <xs:annotation>
          <xs:documentation>Details of capital repayment holiday if any</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MaxHolidayLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The maximum length/duration of a Repayment Holiday</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="MaxHolidayPeriod" type="tns:MaxHolidayPeriod1">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the repayment holiday</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding details for repayment holiday</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="RepaymentType">
        <xs:annotation>
          <xs:documentation>Repayment type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="USBA" />
          <xs:enumeration value="USBU" />
          <xs:enumeration value="USCI" />
          <xs:enumeration value="USCS" />
          <xs:enumeration value="USER" />
          <xs:enumeration value="USFA" />
          <xs:enumeration value="USFB" />
          <xs:enumeration value="USFI" />
          <xs:enumeration value="USIO" />
          <xs:enumeration value="USOT" />
          <xs:enumeration value="USPF" />
          <xs:enumeration value="USRW" />
          <xs:enumeration value="USSL" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RepaymentType1">
        <xs:annotation>
          <xs:documentation>Repayment type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Balloon" />
          <xs:enumeration value="Bullet" />
          <xs:enumeration value="CapitalAndInterest" />
          <xs:enumeration value="CustomSchedule" />
          <xs:enumeration value="EarlyRepayment" />
          <xs:enumeration value="FixedCapitalFullyAmortising" />
          <xs:enumeration value="FixedCapitalWithBullet" />
          <xs:enumeration value="FixedCapitalAndInterestReducingBalance" />
          <xs:enumeration value="InterestOnly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PrepaymentFee" />
          <xs:enumeration value="RepaymentWithBullet" />
          <xs:enumeration value="StraightLineInterestOnly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RequestedSCAExemptionType">
        <xs:annotation>
          <xs:documentation>This field allows a PISP to request specific SCA Exemption for a Payment Initiation</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BillPayment" />
          <xs:enumeration value="ContactlessTravel" />
          <xs:enumeration value="EcommerceGoods" />
          <xs:enumeration value="EcommerceServices" />
          <xs:enumeration value="Kiosk" />
          <xs:enumeration value="Parking" />
          <xs:enumeration value="PartyToParty" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ResidencyEligibility">
        <xs:annotation>
          <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ResidencyEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherResidencyType" type="tns:OtherResidencyType">
            <xs:annotation>
              <xs:documentation>Other residency type which is not available in standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ResidencyIncluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country code for which BCA product is allowed.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ResidencyType" type="tns:ResidencyType">
            <xs:annotation>
              <xs:documentation>Residency type like Tax residency, Owner residency etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResidencyEligibility1">
        <xs:annotation>
          <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ResidencyEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherResidencyType" type="tns:OtherResidencyType">
            <xs:annotation>
              <xs:documentation>Other residency type which is not available in standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ResidencyIncluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country code for which CCC product is allowed.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ResidencyType" type="tns:ResidencyType">
            <xs:annotation>
              <xs:documentation>Residency type like Tax residency, Owner residency etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResidencyEligibility2">
        <xs:annotation>
          <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ResidencyEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherResidencyType" type="tns:OtherResidencyType">
            <xs:annotation>
              <xs:documentation>Other residency type which is not available in standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ResidencyIncluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country code for which PCA product is allowed.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ResidencyType" type="tns:ResidencyType2">
            <xs:annotation>
              <xs:documentation>Residency type like Tax residency, Owner residency etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResidencyEligibility3">
        <xs:annotation>
          <xs:documentation>Countries in which an accountholder can reside and, therefore, be eligible to open an account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the ResidencyEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherResidencyType" type="tns:OtherResidencyType">
            <xs:annotation>
              <xs:documentation>Other residency type which is not available in standard code list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="ResidencyIncluded">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Country code for which SME Loan product is allowed.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^\w{0,4}$" />
                <xs:maxLength value="4" />
                <xs:minLength value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ResidencyType" type="tns:ResidencyType">
            <xs:annotation>
              <xs:documentation>Residency type like Tax residency, Owner residency etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ResidencyType">
        <xs:annotation>
          <xs:documentation>Residency type like Tax residency, Owner residency etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Incorporated" />
          <xs:enumeration value="Owner" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Trading" />
          <xs:enumeration value="CompanyTax" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ResidencyType2">
        <xs:annotation>
          <xs:documentation>Residency type like Tax residency, Owner residency etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Householder" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ResponseType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="code" />
          <xs:enumeration value="codeIdToken" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SalesAccessChannel">
        <xs:annotation>
          <xs:documentation>Channels via which a customer can open a BCA.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="RelationshipManager" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SalesAccessChannel1">
        <xs:annotation>
          <xs:documentation>Channels via which a customer can open a CCC.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="RelationshipManager" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SalesAccessChannel2">
        <xs:annotation>
          <xs:documentation>Channels through which a customer can open an account.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="RelationshipManager" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SalesAccessChannel3">
        <xs:annotation>
          <xs:documentation>Methods by which a customer can access the services associated to the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="PostOffice" />
          <xs:enumeration value="RelationshipManager" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SCASupportData">
        <xs:annotation>
          <xs:documentation>Supporting Data provided by TPP, when requesting SCA Exemption.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AppliedAuthenticationApproach" type="tns:AppliedAuthenticationApproach">
            <xs:annotation>
              <xs:documentation>Specifies a character string with a maximum length of 40 characters.
Usage: This field indicates whether the PSU was subject to SCA performed by the TPP</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReferencePaymentOrderId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies a character string with a maximum length of 140 characters.
Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RequestedSCAExemptionType" type="tns:RequestedSCAExemptionType">
            <xs:annotation>
              <xs:documentation>This field allows a PISP to request specific SCA Exemption for a Payment Initiation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Schema">
        <xs:restriction base="xs:string">
          <xs:enumeration value="urn:ietf:params:scim:api:messages:2.0:SearchRequest" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Scheme">
        <xs:annotation>
          <xs:documentation>Operator of Card Scheme e.g. Visa</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="MasterCard" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Visa" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ScoringType">
        <xs:annotation>
          <xs:documentation>Opening Credit Scoring Type (Hard or Soft)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Hard" />
          <xs:enumeration value="Soft" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SearchforoneormoreresourcesusingHTTPPOSTResponse1">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBAuthorities">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchforoneormoreresourcesusingHTTPPOSTResponse2">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBQualifiedTrustServiceProviders">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchforoneormoreresourcesusingHTTPPOSTResponse3">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBThirdPartyProviders">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchforoneormoreresourcesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBAuthorities">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchforoneormoreresourcesResponse1">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBQualifiedTrustServiceProviders">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchforoneormoreresourcesResponse2">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Resources" type="tns:OBThirdPartyProviders">
            <xs:annotation>
              <xs:documentation>A multi-valued list of complex objects containing the requested resources.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="itemsPerPage">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The number of resources returned in a list response page.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="schemas">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="startIndex">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The 1-based index of the first result in the current set of list results.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="totalResults">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The total number of results returned by the list or query operation.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Segment">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.
Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
Follow us: Investopedia on Facebook
With respect to BCA products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ClientAccount" />
          <xs:enumeration value="Standard" />
          <xs:enumeration value="NonCommercialChaitiesClbSoc" />
          <xs:enumeration value="NonCommercialPublicAuthGovt" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Religious" />
          <xs:enumeration value="SectorSpecific" />
          <xs:enumeration value="Startup" />
          <xs:enumeration value="Switcher" />
          <xs:enumeration value="NonCommercial" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Segment1">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another. Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd Follow us: Investopedia on Facebook With respect to CCC products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="General" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Segment2">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
With respect to BCA products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ClientAccount" />
          <xs:enumeration value="Standard" />
          <xs:enumeration value="NonCommercialChaitiesClbSoc" />
          <xs:enumeration value="NonCommercialPublicAuthGovt" />
          <xs:enumeration value="Religious" />
          <xs:enumeration value="SectorSpecific" />
          <xs:enumeration value="Startup" />
          <xs:enumeration value="Switcher" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Segment3">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.
Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="GEAS" />
          <xs:enumeration value="GEBA" />
          <xs:enumeration value="GEBR" />
          <xs:enumeration value="GEBU" />
          <xs:enumeration value="GECI" />
          <xs:enumeration value="GECS" />
          <xs:enumeration value="GEFB" />
          <xs:enumeration value="GEFG" />
          <xs:enumeration value="GEG" />
          <xs:enumeration value="GEGR" />
          <xs:enumeration value="GEGS" />
          <xs:enumeration value="GEOT" />
          <xs:enumeration value="GEOV" />
          <xs:enumeration value="GEPA" />
          <xs:enumeration value="GEPR" />
          <xs:enumeration value="GERE" />
          <xs:enumeration value="GEST" />
          <xs:enumeration value="GEYA" />
          <xs:enumeration value="GEYO" />
          <xs:enumeration value="PSCA" />
          <xs:enumeration value="PSES" />
          <xs:enumeration value="PSNC" />
          <xs:enumeration value="PSNP" />
          <xs:enumeration value="PSRG" />
          <xs:enumeration value="PSSS" />
          <xs:enumeration value="PSST" />
          <xs:enumeration value="PSSW" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Segment4">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
With respect to PCA products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Basic" />
          <xs:enumeration value="BenefitAndReward" />
          <xs:enumeration value="CreditInterest" />
          <xs:enumeration value="Cashback" />
          <xs:enumeration value="General" />
          <xs:enumeration value="Graduate" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Overdraft" />
          <xs:enumeration value="Packaged" />
          <xs:enumeration value="Premium" />
          <xs:enumeration value="Reward" />
          <xs:enumeration value="Student" />
          <xs:enumeration value="YoungAdult" />
          <xs:enumeration value="Youth" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Segment5">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
Follow us: Investopedia on Facebook

With respect to PCA products, they are segmented in relation to different markets that they wish to focus on. For example, Basic PCA products target consumers with poor credit history, Reward PCA products target consumers who spend a lot, and Premium products target High Net Worth individuals.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Basic" />
          <xs:enumeration value="BenefitAndReward" />
          <xs:enumeration value="CreditInterest" />
          <xs:enumeration value="Cashback" />
          <xs:enumeration value="General" />
          <xs:enumeration value="Graduate" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Overdraft" />
          <xs:enumeration value="Packaged" />
          <xs:enumeration value="Premium" />
          <xs:enumeration value="Reward" />
          <xs:enumeration value="Student" />
          <xs:enumeration value="YoungAdult" />
          <xs:enumeration value="Youth" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Segment6">
        <xs:annotation>
          <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
Follow us: Investopedia on Facebook

With respect to SME Loan products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AgricultureSector" />
          <xs:enumeration value="Business" />
          <xs:enumeration value="FlexibleBusinessLoan" />
          <xs:enumeration value="FixedGroup" />
          <xs:enumeration value="GovernmentScheme" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="SectorSpecific" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceAndFacility">
        <xs:annotation>
          <xs:documentation>Service/Facilities offered at a branch.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AssistedServiceCounter" />
          <xs:enumeration value="ExternalATM" />
          <xs:enumeration value="AccountVerificationService" />
          <xs:enumeration value="BusinessCounter" />
          <xs:enumeration value="BureauDeChange" />
          <xs:enumeration value="BusinessDepositTerminal" />
          <xs:enumeration value="BusinessITSupport" />
          <xs:enumeration value="CardIssuanceFacility" />
          <xs:enumeration value="CollectionLockers" />
          <xs:enumeration value="CounterServices" />
          <xs:enumeration value="ExternalQuickServicePoint" />
          <xs:enumeration value="InternalQuickServicePoint" />
          <xs:enumeration value="InternalATM" />
          <xs:enumeration value="LodgementDevice" />
          <xs:enumeration value="MortgageAdvisor" />
          <xs:enumeration value="MeetingRooms" />
          <xs:enumeration value="NightSafe" />
          <xs:enumeration value="OnlineBankingPoint" />
          <xs:enumeration value="OnDemandCurrency" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="Parking" />
          <xs:enumeration value="PremierCounter" />
          <xs:enumeration value="QuickDeposit" />
          <xs:enumeration value="SaturdayCounterService" />
          <xs:enumeration value="StatementPrinter" />
          <xs:enumeration value="SelfServiceAccountOpening" />
          <xs:enumeration value="VideoBanking" />
          <xs:enumeration value="WiFi" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ServiceExtension">
        <xs:sequence>
          <xs:element minOccurs="0" name="AdditionalInfoLang">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>'&lt;AdditionalServiceInformation&gt;
&lt;URI xml:lang=''en''&gt; http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/ForWebSiteAuthentication &lt;/URI&gt;
&lt;/AdditionalServiceInformation&gt;'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AdditionalInfoURI">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>'&lt;AdditionalServiceInformation&gt;
&lt;URI xml:lang=''en''&gt; http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/ForWebSiteAuthentication &lt;/URI&gt;
&lt;/AdditionalServiceInformation&gt;'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Critical" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;Extension Critical='true'&gt;</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ServicingAccessChannel">
        <xs:annotation>
          <xs:documentation>Channels via which customers can access BCA services.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ATM" />
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="MobileBankingApp" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="PostOffice" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Text" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServicingAccessChannel1">
        <xs:annotation>
          <xs:documentation>Channels via which customers can access CCC services.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ATM" />
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="MobileBankingApp" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="PostOffice" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Text" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServicingAccessChannel2">
        <xs:annotation>
          <xs:documentation>Methods by which a customer can access the services associated to the PCA product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ATM" />
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="MobileBankingApp" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="PostOffice" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Text" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServicingAccessChannel3">
        <xs:annotation>
          <xs:documentation>Methods by which a customer can access the services associated to the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ATM" />
          <xs:enumeration value="Branch" />
          <xs:enumeration value="CallCentre" />
          <xs:enumeration value="Post" />
          <xs:enumeration value="MobileBankingApp" />
          <xs:enumeration value="Online" />
          <xs:enumeration value="PostOffice" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Text" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SetErrs">
        <xs:sequence>
          <xs:element minOccurs="1" name="description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A human-readable string that provides additional diagnostic information</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="err">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A value from the IANA "Security Event Token Delivery Error Codes" registry that identifies the error as defined here 
https://tools.ietf.org/id/draft-ietf-secevent-http-push-03.html#error_codes</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Site">
        <xs:annotation>
          <xs:documentation>Used by a Financial Institution internally to identify the location of an ATM.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ATM site identification for the Financial Institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ATM site name as used by Financial Institution.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="140" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SMELoan">
        <xs:annotation>
          <xs:documentation>SMELoan means SME unsecured loan.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The unique ID that has been internally assigned by the financial institution to each of the current account banking products they market to their retail and/or small to medium enterprise (SME) customers.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Name">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The name of the SME Loan product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="350" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OtherSegment" type="tns:OtherSegment3">
            <xs:annotation>
              <xs:documentation>Other segment code which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="SMELoanMarketingState" type="tns:SMELoanMarketingState">
            <xs:annotation>
              <xs:documentation>The marketing state (promotional or regular) of the SME Loan Product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Segment" type="tns:Segment6">
            <xs:annotation>
              <xs:documentation>Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.

Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 
Follow us: Investopedia on Facebook

With respect to SME Loan products, they are segmented in relation to different markets that they wish to focus on.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SMELoanMarketingState">
        <xs:annotation>
          <xs:documentation>The marketing state (promotional or regular) of the SME Loan Product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="CoreProduct" type="tns:CoreProduct3">
            <xs:annotation>
              <xs:documentation>SME Loan core product details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Eligibility" type="tns:Eligibility3">
            <xs:annotation>
              <xs:documentation>Eligibility details for this product i.e. the criteria that an business has to meet in order to be eligible for the SME Loan product.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FeaturesAndBenefits" type="tns:FeaturesAndBenefits3">
            <xs:annotation>
              <xs:documentation>Feature And Benefits Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state start date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  SME Loan Product Marketing State.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LastMarketedDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Marketing state end date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="LoanInterest" type="tns:LoanInterest1">
            <xs:annotation>
              <xs:documentation>Details about the interest that may be payable to the SME Loan</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="MarketingState" type="tns:MarketingState3">
            <xs:annotation>
              <xs:documentation>Describes the marketing state (regular or promotional) of the SME Loan Product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Free text for adding details for marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherFeesCharges" type="tns:OtherFeesCharges5">
            <xs:annotation>
              <xs:documentation>Contains details of fees and charges which are not associated with either loan interest or repayments</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PredecessorID">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Identifies the marketing state that precedes this marketing state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Repayment" type="tns:Repayment2">
            <xs:annotation>
              <xs:documentation>Repayment details of the Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenureLength">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The length/duration of a promotional state</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StateTenurePeriod" type="tns:StateTenurePeriod1">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatement">
        <xs:annotation>
          <xs:documentation>Software Statement Schema as defined by Open Banking</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SoftwareStatements" type="tns:SoftwareStatement1">
            <xs:annotation>
              <xs:documentation>Software Statement Attribute</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatement1">
        <xs:sequence>
          <xs:element minOccurs="0" name="Active" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to show if software statement is active</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ClientId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Requested Client Id - note that OB will issue a set of credentials with this clientid for this given piece of software. ASPSPs are not obliged to honour this requested clientid</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Human readable client name. May be localised.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The “home page” or other wise recognisable url of the application (oath client) Version 22, 14th November 2017. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of the unique instance of this piece of software. If only one instance of a piece of software is to be registered then this should be the same as the SoftwareDescription \nV39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique Scheme Wide Software id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The software logo Version 22, 14th November 2017. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Mode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A flag to identify if a piece of software should have access to production PSU accounts. This field has been added at the request of an ASPSP to allow BETA or Non Production testing against production platforms. The default for this system should be 'Live'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ObClientCreated" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>An indicator to show if the client has been created in Open Banking</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OnBehalfOfObOrganisation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The organisation on whom this software statement is behalf of
Altered from reference to string, 10/11/2017</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PolicyUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An optional document containing a link to a Policy document governing the privacy information policy of for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RedirectUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Redirect Uri's for the registered piece of software. May be overridden by the RFC7591 payload. Changed in v27. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Roles">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Roles for which this software statement can be used. Changed to required Mike Ekers request</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SigningKeyIds">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>KeyIds of Keys  used for signing messages</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfServiceUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An optional document containing a link to a Terms of Service document governing the terms of service for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TransportKeyIds">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>KeyIds of Keys used for securing message transport (TLS)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version of the sofware. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatement2">
        <xs:sequence>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatement3">
        <xs:annotation>
          <xs:documentation>Software Statement Schema as defined by Open Banking</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SoftwareStatements" type="tns:SoftwareStatement4">
            <xs:annotation>
              <xs:documentation>Software Statement Attribute</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SoftwareStatement4">
        <xs:sequence>
          <xs:element minOccurs="0" name="Active" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to show if software statement is active</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ClientId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Requested Client Id - note that OB will issue a set
of credentials with this clientid for this given piece of software.
ASPSPs are not obliged to honour this requested clientid</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientName">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Human readable client name. May be localised.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ClientUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The “home page” or other wise recognisable url of the application (oath client)
Version 22, 14th November 2017. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description of the unique instance of this piece of
software. If only one instance of a piece of software is to be
registered then this should be the same as the SoftwareDescription
\nV39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique Scheme Wide Software id</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="LogoUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The software logo
Version 22, 14th November 2017. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Mode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>A flag to identify if a piece of software should have
access to production PSU accounts. This field has been added at
the request of an ASPSP to allow BETA or Non Production testing
against production platforms. The default for this system should
be 'Live'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ObClientCreated" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>An indicator to show if the client has been created in Open Banking</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OnBehalfOfObOrganisation">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The organisation on whom this software statement is behalf of
Altered from reference to string, 10/11/2017</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="PolicyUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An optional document containing a link to a Policy document governing the privacy information policy of for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide.
V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RedirectUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Redirect Uri's for the registered piece of software. May be overridden by the RFC7591 payload. Changed in v27. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Roles">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Roles for which this software statement can be used. Changed to required Mike Ekers request</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SigningKeyIds">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>KeyIds of Keys  used for signing messages</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TermsOfServiceUri">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An optional document containing a link to a Terms of Service document governing the terms of service for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide.
V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TransportKeyIds">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>KeyIds of Keys used for securing message transport (TLS)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Version">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Version of the sofware. V39 Changed to required</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SoftwareStatementCertificateOrKeyType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="obtransport" />
          <xs:enumeration value="obsigning" />
          <xs:enumeration value="sigkey" />
          <xs:enumeration value="enckey" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SortOrder">
        <xs:annotation>
          <xs:documentation>A string indicating the order in which the 'sortBy' parameter is applied.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ascending" />
          <xs:enumeration value="descending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="sortOrder1">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ascending" />
          <xs:enumeration value="descending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StandardAvailability">
        <xs:annotation>
          <xs:documentation>Standard hours of availability for the branch of the organisation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Day" type="tns:Day">
            <xs:annotation>
              <xs:documentation>Working day information</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementAmount">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a generic amount for the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_6">
            <xs:annotation>
              <xs:documentation>Amount of money associated with the amount type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_0">
            <xs:annotation>
              <xs:documentation>Indicates whether the amount is a credit or a debit. 
Usage: A zero amount is considered to be a credit amount.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementBenefit">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a benefit or reward amount for the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_3">
            <xs:annotation>
              <xs:documentation>Amount of money associated with the statement benefit type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Benefit type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementDateTime">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a generic date time for the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="DateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Date and time associated with the date time type.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
All date-time fields in responses must include the timezone. An example is below:
2017-04-05T10:43:07+00:00</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date time type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementFee">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a fee for the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_4">
            <xs:annotation>
              <xs:documentation>Amount of money associated with the statement fee type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_0">
            <xs:annotation>
              <xs:documentation>Indicates whether the amount is a credit or a debit. 
Usage: A zero amount is considered to be a credit amount.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description that may be available for the statement fee.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>How frequently the fee is applied to the Account.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Rate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate charged for Statement Fee (where it is charged in terms of a rate rather than an amount)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RateType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description that may be available for the statement fee rate type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Fee type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementInterest">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a generic interest amount related to the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Amount" type="tns:OBActiveOrHistoricCurrencyAndAmount_5">
            <xs:annotation>
              <xs:documentation>Amount of money associated with the statement interest amount type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CreditDebitIndicator" type="tns:OBCreditDebitCode_0">
            <xs:annotation>
              <xs:documentation>Indicates whether the amount is a credit or a debit. 
Usage: A zero amount is considered to be a credit amount.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Description">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description that may be available for the statement interest.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Frequency">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Specifies the statement fee type requested</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Rate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:double" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="RateType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Description that may be available for the statement Interest rate type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Interest amount type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementRate">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a generic rate related to the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Rate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Rate associated with the statement rate type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Statement rate type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatementValue">
        <xs:annotation>
          <xs:documentation>Set of elements used to provide details of a generic number value related to the statement resource.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="Type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Statement value type, in a coded form.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="40" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Value">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Value associated with the statement value type.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StateTenurePeriod">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="HalfYear" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="AcademicTerm" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StateTenurePeriod1">
        <xs:annotation>
          <xs:documentation>The unit of period (days, weeks, months etc.) of the promotional length</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day" />
          <xs:enumeration value="Half Year" />
          <xs:enumeration value="Month" />
          <xs:enumeration value="Quarter" />
          <xs:enumeration value="Week" />
          <xs:enumeration value="Year" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status">
        <xs:annotation>
          <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Authorised" />
          <xs:enumeration value="AwaitingAuthorisation" />
          <xs:enumeration value="Rejected" />
          <xs:enumeration value="Revoked" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status2">
        <xs:annotation>
          <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Authorised" />
          <xs:enumeration value="AwaitingAuthorisation" />
          <xs:enumeration value="Consumed" />
          <xs:enumeration value="Rejected" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status3">
        <xs:annotation>
          <xs:documentation>Specifies the status of the authorisation flow in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Authorised" />
          <xs:enumeration value="AwaitingFurtherAuthorisation" />
          <xs:enumeration value="Rejected" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status4">
        <xs:annotation>
          <xs:documentation>Specifies the status of the payment information group.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AcceptedCreditSettlementCompleted" />
          <xs:enumeration value="AcceptedSettlementCompleted" />
          <xs:enumeration value="AcceptedSettlementInProcess" />
          <xs:enumeration value="AcceptedWithoutPosting" />
          <xs:enumeration value="Pending" />
          <xs:enumeration value="Rejected" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status7">
        <xs:annotation>
          <xs:documentation>Specifies the status of the payment order resource.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Cancelled" />
          <xs:enumeration value="InitiationCompleted" />
          <xs:enumeration value="InitiationFailed" />
          <xs:enumeration value="InitiationPending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status11">
        <xs:annotation>
          <xs:documentation>Specifies the status of consent resource in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Authorised" />
          <xs:enumeration value="AwaitingAuthorisation" />
          <xs:enumeration value="AwaitingUpload" />
          <xs:enumeration value="Consumed" />
          <xs:enumeration value="Rejected" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status13">
        <xs:annotation>
          <xs:documentation>Specifies the status of the payment order resource.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="InitiationCompleted" />
          <xs:enumeration value="InitiationFailed" />
          <xs:enumeration value="InitiationPending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status20">
        <xs:annotation>
          <xs:documentation>Specifies the status of resource in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Authorised" />
          <xs:enumeration value="AwaitingAuthorisation" />
          <xs:enumeration value="Consumed" />
          <xs:enumeration value="Rejected" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status22">
        <xs:annotation>
          <xs:documentation>Specifies the status of resource in code form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Cancelled" />
          <xs:enumeration value="InitiationCompleted" />
          <xs:enumeration value="InitiationFailed" />
          <xs:enumeration value="InitiationPending" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Status23">
        <xs:annotation>
          <xs:documentation>Status of a transfe, as assigned by the transaction administrator.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Accepted" />
          <xs:enumeration value="AcceptedCancellationRequest" />
          <xs:enumeration value="AcceptedCreditSettlementCompleted" />
          <xs:enumeration value="AcceptedCustomerProfile" />
          <xs:enumeration value="AcceptedFundsChecked" />
          <xs:enumeration value="AcceptedSettlementCompleted" />
          <xs:enumeration value="AcceptedSettlementInProcess" />
          <xs:enumeration value="AcceptedTechnicalValidation" />
          <xs:enumeration value="AcceptedWithChange" />
          <xs:enumeration value="AcceptedWithoutPosting" />
          <xs:enumeration value="Cancelled" />
          <xs:enumeration value="NoCancellationProcess" />
          <xs:enumeration value="PartiallyAcceptedCancellationRequest" />
          <xs:enumeration value="PartiallyAcceptedTechnicalCorrect" />
          <xs:enumeration value="PaymentCancelled" />
          <xs:enumeration value="Pending" />
          <xs:enumeration value="PendingCancellationRequest" />
          <xs:enumeration value="Received" />
          <xs:enumeration value="Rejected" />
          <xs:enumeration value="RejectedCancellationRequest" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusDetail">
        <xs:annotation>
          <xs:documentation>Payment status details as per underlying Payment Rail.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="LocalInstrument">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>User community specific instrument.
Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Status">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Status of a transfer, as assigned by the transaction administrator.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="StatusReason" type="tns:StatusReason">
            <xs:annotation>
              <xs:documentation>Reason Code provided for the status of a transfer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StatusReasonDescription">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Reason provided for the status of a transfer.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusReason">
        <xs:annotation>
          <xs:documentation>Reason Code provided for the status of a transfer.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Cancelled" />
          <xs:enumeration value="PendingFailingSettlement" />
          <xs:enumeration value="PendingSettlement" />
          <xs:enumeration value="Proprietary" />
          <xs:enumeration value="ProprietaryRejection" />
          <xs:enumeration value="Suspended" />
          <xs:enumeration value="Unmatched" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TariffType">
        <xs:annotation>
          <xs:documentation>TariffType which defines the fee and charges.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Electronic" />
          <xs:enumeration value="Mixed" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TariffType2">
        <xs:annotation>
          <xs:documentation>TariffType which defines the fee and charges.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="TTEL" />
          <xs:enumeration value="TTMX" />
          <xs:enumeration value="TTOT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="TierBand">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AER">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>'The annual equivalent
rate (AER) is interest that is calculated
under the assumption that any interest
paid is combined with the original
balance and the next interest payment
will be based on the slightly higher
account balance. Overall, this means
that interest can be compounded
several times in a year depending
on the number of times that interest
payments are made. \nRead more:
Annual Equivalent Rate (AER) http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A'</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank Interest for the BCA product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRateType" type="tns:BankInterestRateType">
            <xs:annotation>
              <xs:documentation>Interest rate types,
other than AER, which financial
institutions may use to describe
the annual interest rate payable
to the BCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherBankInterestType" type="tns:OtherBankInterestType">
            <xs:annotation>
              <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBand1">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AER">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made. 

Read more: Annual Equivalent Rate (AER) http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency7">
            <xs:annotation>
              <xs:documentation>How often is interest applied to the BCA for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's BCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank Interest for the BCA product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRateType" type="tns:BankInterestRateType1">
            <xs:annotation>
              <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the BCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency7">
            <xs:annotation>
              <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DepositInterestAppliedCoverage" type="tns:DepositInterestAppliedCoverage">
            <xs:annotation>
              <xs:documentation>Amount on which Interest applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FixedVariableInterestRateType" type="tns:FixedVariableInterestRateType">
            <xs:annotation>
              <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a BCA.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency1">
            <xs:annotation>
              <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherBankInterestType" type="tns:OtherBankInterestType">
            <xs:annotation>
              <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency1">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaximum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinimum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBand2">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AER">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made. 
Read more: Annual Equivalent Rate (AER) http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency11">
            <xs:annotation>
              <xs:documentation>How often is interest applied to the Product for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank Interest for the product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRateType" type="tns:BankInterestRateType2">
            <xs:annotation>
              <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the account holder's account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency11">
            <xs:annotation>
              <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DepositInterestAppliedCoverage" type="tns:DepositInterestAppliedCoverage1">
            <xs:annotation>
              <xs:documentation>Amount on which Interest applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FixedVariableInterestRateType" type="tns:OB_InterestFixedVariableType1Code">
            <xs:annotation>
              <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for the Product.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OB_OtherCodeType1_1">
            <xs:annotation>
              <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherBankInterestType" type="tns:OtherBankInterestType2">
            <xs:annotation>
              <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OB_OtherCodeType1_2">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaximum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinimum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBand3">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AER">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made. 

Read more: Annual Equivalent Rate (AER) http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency12">
            <xs:annotation>
              <xs:documentation>How often is interest applied to the PCA for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's PCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank Interest for the PCA product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRateType" type="tns:BankInterestRateType3">
            <xs:annotation>
              <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the PCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CalculationFrequency" type="tns:CalculationFrequency12">
            <xs:annotation>
              <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DepositInterestAppliedCoverage" type="tns:DepositInterestAppliedCoverage2">
            <xs:annotation>
              <xs:documentation>Amount on which Interest applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FixedVariableInterestRateType" type="tns:FixedVariableInterestRateType">
            <xs:annotation>
              <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a PCA.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency1">
            <xs:annotation>
              <xs:documentation>Other application frequencies that are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherBankInterestType" type="tns:OtherBankInterestType">
            <xs:annotation>
              <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency1">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in the standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaximum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinimum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBand4">
        <xs:annotation>
          <xs:documentation>Tier Band Details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="AER">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The annual equivalent rate (AER) is interest that is calculated under the assumption that any interest paid is combined with the original balance and the next interest payment will be based on the slightly higher account balance. Overall, this means that interest can be compounded several times in a year depending on the number of times that interest payments are made. 

Read more: Annual Equivalent Rate (AER) http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ApplicationFrequency" type="tns:ApplicationFrequency12">
            <xs:annotation>
              <xs:documentation>How often is interest applied to the PCA for this tier/band i.e. how often the financial institution pays accumulated interest to the customer's PCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRate">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Bank Interest for the PCA product</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="BankInterestRateType" type="tns:BankInterestRateType3">
            <xs:annotation>
              <xs:documentation>Interest rate types, other than AER, which financial institutions may use to describe the annual interest rate payable to the PCA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="CalculationFrequency" type="tns:CalculationFrequency12">
            <xs:annotation>
              <xs:documentation>How often is credit interest calculated for the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DepositInterestAppliedCoverage" type="tns:DepositInterestAppliedCoverage2">
            <xs:annotation>
              <xs:documentation>Amount on which Interest applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="FixedVariableInterestRateType" type="tns:FixedVariableInterestRateType">
            <xs:annotation>
              <xs:documentation>Type of interest rate, Fixed or Variable</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Identification">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Unique and unambiguous identification of a  Tier Band for a PCA.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="35" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherApplicationFrequency" type="tns:OtherApplicationFrequency">
            <xs:annotation>
              <xs:documentation>Other application frequency which is not available in the standard code set</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherBankInterestType" type="tns:OtherBankInterestType">
            <xs:annotation>
              <xs:documentation>Other interest rate types which are not available in the standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationFrequency" type="tns:OtherCalculationFrequency">
            <xs:annotation>
              <xs:documentation>Other calculation frequency which is not available in standard code set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TierValueMaximum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Maximum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="TierValueMinimum">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Minimum deposit value for which the credit interest tier applies.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBandMethod">
        <xs:sequence>
          <xs:element minOccurs="0" name="CalculationMethod" type="tns:CalculationMethod">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Destination" type="tns:Destination">
            <xs:annotation>
              <xs:documentation>Describes whether accrued interest is payable only to the BCA or to another bank account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TierBand" type="tns:TierBand">
            <xs:annotation>
              <xs:documentation>Tier Band Details</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="TierBandMethod1">
        <xs:annotation>
          <xs:documentation>The methodology of how overdraft is charged. It can be:
Whole  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
Tiered Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
Banded Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod2">
        <xs:annotation>
          <xs:documentation>The methodology of how credit interest is paid/applied. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the BCA balance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod3">
        <xs:annotation>
          <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod4">
        <xs:annotation>
          <xs:documentation>The methodology of how credit interest is paid/applied. It can be:-
1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.
2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.
3. Whole
The same interest rate is applied irrespective of the product holder's account balance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBA" />
          <xs:enumeration value="INTI" />
          <xs:enumeration value="INWH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod5">
        <xs:annotation>
          <xs:documentation>The methodology of how credit interest is charged. It can be:-
1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.
2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.
3. Whole
The same interest rate is applied irrespective of the SME Loan balance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBA" />
          <xs:enumeration value="INTI" />
          <xs:enumeration value="INWH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod6">
        <xs:annotation>
          <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INBA" />
          <xs:enumeration value="INTI" />
          <xs:enumeration value="INWH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod7">
        <xs:annotation>
          <xs:documentation>The methodology of how credit interest is charged. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the PCA balance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod9">
        <xs:annotation>
          <xs:documentation>The methodology of how credit interest is paid/applied. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the PCA balance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod10">
        <xs:annotation>
          <xs:documentation>The methodology of how overdraft is charged. It can be:
'Whole'  Where the same charge/rate is applied to the entirety of the overdraft balance (where charges are applicable). 
'Tiered' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount tiers defined by the lending financial organisation
'Banded' Where different charges/rates are applied dependent on overdraft maximum and minimum balance amount bands defined by a government organisation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TierBandMethod11">
        <xs:annotation>
          <xs:documentation>The methodology of how credit interest is charged. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the SME Loan balance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Banded" />
          <xs:enumeration value="Tiered" />
          <xs:enumeration value="Whole" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="TierBandSet">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CreditInterestEligibility" type="tns:CreditInterestEligibility">
            <xs:annotation>
              <xs:documentation>Eligibility for credit interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBandSet1">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CalculationMethod" type="tns:CalculationMethod">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Destination" type="tns:Destination">
            <xs:annotation>
              <xs:documentation>Describes whether accrued interest is payable only to the BCA or to another bank account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBand" type="tns:TierBand1">
            <xs:annotation>
              <xs:documentation>Tier Band Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod2">
            <xs:annotation>
              <xs:documentation>The methodology of how credit interest is paid/applied. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the BCA balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBandSet2">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CalculationMethod" type="tns:OB_InterestCalculationMethod1Code">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="Destination" type="tns:Destination2">
            <xs:annotation>
              <xs:documentation>Describes whether accrued interest is payable only to the BCA or to another bank account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherCalculationMethod" type="tns:OB_OtherCodeType1_0" />
          <xs:element minOccurs="0" name="OtherDestination" type="tns:OB_OtherCodeType1_0" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBand" type="tns:TierBand2" />
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod4">
            <xs:annotation>
              <xs:documentation>The methodology of how credit interest is paid/applied. It can be:-
1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.
2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.
3. Whole
The same interest rate is applied irrespective of the product holder's account balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBandSet3">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CalculationMethod" type="tns:CalculationMethod">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Destination" type="tns:Destination3">
            <xs:annotation>
              <xs:documentation>Describes whether accrued interest is payable only to the PCA or to another bank account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBand" type="tns:TierBand3">
            <xs:annotation>
              <xs:documentation>Tier Band Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod7">
            <xs:annotation>
              <xs:documentation>The methodology of how credit interest is charged. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the PCA balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TierBandSet4">
        <xs:annotation>
          <xs:documentation>The group of tiers or bands for which credit interest can be applied.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CalculationMethod" type="tns:CalculationMethod">
            <xs:annotation>
              <xs:documentation>Methods of calculating interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CreditInterestEligibility" type="tns:CreditInterestEligibility1">
            <xs:annotation>
              <xs:documentation>Eligibility for credit interest</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Destination" type="tns:Destination3">
            <xs:annotation>
              <xs:documentation>Describes whether accrued interest is payable only to the PCA or to another bank account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the Tier Band Set details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="TierBand" type="tns:TierBand4">
            <xs:annotation>
              <xs:documentation>Tier Band Details</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" name="TierBandMethod" type="tns:TierBandMethod9">
            <xs:annotation>
              <xs:documentation>The methodology of how credit interest is paid/applied. It can be:-

1. Banded
Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.

2. Tiered
Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.

3. Whole
The same interest rate is applied irrespective of the PCA balance</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="TokenEndpointAuthMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="private_key_jwt" />
          <xs:enumeration value="client_secret_jwt" />
          <xs:enumeration value="client_secret_basic" />
          <xs:enumeration value="client_secret_post" />
          <xs:enumeration value="tls_client_auth" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="TradingHistoryEligibility">
        <xs:annotation>
          <xs:documentation>Describes the trading history requirements to access the BCA product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount indicating the min max type</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. e.g. PreviousCCJS is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the TradingHistoryEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherTradingType" type="tns:OtherTradingType">
            <xs:annotation>
              <xs:documentation>Other trading type which is not exist in standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period2">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TradingType" type="tns:TradingType">
            <xs:annotation>
              <xs:documentation>Trading type eligibility for the BCA product</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TradingHistoryEligibility1">
        <xs:annotation>
          <xs:documentation>Describes the trading history requirements to access the CCC product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount indicating the min max type</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. e.g. PreviousCCJS is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the TradingHistoryEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherTradingType" type="tns:OtherTradingType">
            <xs:annotation>
              <xs:documentation>Other trading type which is not exist in standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period7">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TradingType" type="tns:TradingType1">
            <xs:annotation>
              <xs:documentation>Trading type eligibility for the CCC product</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TradingHistoryEligibility2">
        <xs:annotation>
          <xs:documentation>Describes the trading history requirements to access the SME Loan product.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Amount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Amount indicating the min max type</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:pattern value="^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Indicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Any eligibility criteria where the value can be indicated by a true or false value. e.g. PreviousCCJS is True or False</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinMaxType" type="tns:MinMaxType">
            <xs:annotation>
              <xs:documentation>Min Max type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Notes">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Optional additional notes to supplement the TradingHistoryEligibility details</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="OtherTradingType" type="tns:OtherTradingType">
            <xs:annotation>
              <xs:documentation>Other trading type which is not exist in standard code list</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Period" type="tns:Period7">
            <xs:annotation>
              <xs:documentation>The unit of period (days, weeks, months etc.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Textual">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Any eligibility criteria where a long description is supplied</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="500" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="TradingType" type="tns:TradingType2">
            <xs:annotation>
              <xs:documentation>Trading type eligibility for the SME Loan product</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="TradingType">
        <xs:annotation>
          <xs:documentation>Trading type eligibility for the BCA product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnnualReturns" />
          <xs:enumeration value="PreviousCCJSAllowed" />
          <xs:enumeration value="GoodTradingHistory" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PreviousBankruptcyAllowed" />
          <xs:enumeration value="TradingLength" />
          <xs:enumeration value="Turnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TradingType1">
        <xs:annotation>
          <xs:documentation>Trading type eligibility for the CCC product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnnualReturns" />
          <xs:enumeration value="PreviousCCJSAllowed" />
          <xs:enumeration value="GoodTradingHistory" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PreviousBankruptcyAllowed" />
          <xs:enumeration value="TradingLength" />
          <xs:enumeration value="Turnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TradingType2">
        <xs:annotation>
          <xs:documentation>Trading type eligibility for the SME Loan product</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnnualReturns" />
          <xs:enumeration value="PreviousCCJSAllowed" />
          <xs:enumeration value="GoodTradingHistory" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PreviousBankruptcyAllowed" />
          <xs:enumeration value="TradingLength" />
          <xs:enumeration value="Turnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type">
        <xs:annotation>
          <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnyBusinessCustomer" />
          <xs:enumeration value="MinimumAnniversary" />
          <xs:enumeration value="ExistingCustomers" />
          <xs:enumeration value="MinimumDeposit" />
          <xs:enumeration value="MinimumTransactions" />
          <xs:enumeration value="NewCustomersOnly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="SwitchersOnly" />
          <xs:enumeration value="StartUp" />
          <xs:enumeration value="SoleUkAccount" />
          <xs:enumeration value="ThirdSectorOnly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type2">
        <xs:annotation>
          <xs:documentation>Card Type available e.g. Debit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BusinessQuickLodgeCard" />
          <xs:enumeration value="CashCard" />
          <xs:enumeration value="DebitCard" />
          <xs:enumeration value="DepositCard" />
          <xs:enumeration value="Other" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type3">
        <xs:annotation>
          <xs:documentation>eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnyBusinessCustomer" />
          <xs:enumeration value="MinimumAnniversary" />
          <xs:enumeration value="ExistingCustomers" />
          <xs:enumeration value="MinimumDeposit" />
          <xs:enumeration value="MinimumTransactions" />
          <xs:enumeration value="NewCustomersOnly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="SwitchersOnly" />
          <xs:enumeration value="StartUp" />
          <xs:enumeration value="SoleUkAccount" />
          <xs:enumeration value="ThirdSectorOnly" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type5">
        <xs:annotation>
          <xs:documentation>Feature and Benefit type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountManagement" />
          <xs:enumeration value="AccountOpeningOrSwitchingIncentive" />
          <xs:enumeration value="Cashback" />
          <xs:enumeration value="InternationalPaymentsSupport" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PreferentialRates" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Rewards" />
          <xs:enumeration value="SecureCash" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type6">
        <xs:annotation>
          <xs:documentation>Common types of features and benefits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountManagement" />
          <xs:enumeration value="AccountOpeningOrSwitchingIncentive" />
          <xs:enumeration value="Cashback" />
          <xs:enumeration value="InternationalPaymentsSupport" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PreferentialRates" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Rewards" />
          <xs:enumeration value="SecureCash" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type9">
        <xs:annotation>
          <xs:documentation>Mobile applications that the BCA product will support</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AndroidPay" />
          <xs:enumeration value="ApplePay" />
          <xs:enumeration value="GooglePay" />
          <xs:enumeration value="IssuerMobileApp" />
          <xs:enumeration value="MobileBankingApp" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PayM" />
          <xs:enumeration value="SamsungPay" />
          <xs:enumeration value="VodafoneWallet" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type10">
        <xs:annotation>
          <xs:documentation>Codeset to indicate if a branch is physically in 1 location or is mobile</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Mobile" />
          <xs:enumeration value="Physical" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type11">
        <xs:annotation>
          <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnyBusinessCustomer" />
          <xs:enumeration value="BusinessCurrentAccount" />
          <xs:enumeration value="CreditScoring" />
          <xs:enumeration value="OtherFinancialHolding" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="MinimumTurnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type12">
        <xs:annotation>
          <xs:documentation>Method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AnyBusinessCustomer" />
          <xs:enumeration value="BusinessCurrentAccount" />
          <xs:enumeration value="CreditScoring" />
          <xs:enumeration value="OtherFinancialHolding" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="MinimumTurnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type14">
        <xs:annotation>
          <xs:documentation>Feature and Benefit type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountManagement" />
          <xs:enumeration value="CashBack" />
          <xs:enumeration value="CreditReports" />
          <xs:enumeration value="Lifestyle" />
          <xs:enumeration value="MotorBreakdown" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PaymentHolidays" />
          <xs:enumeration value="SpendLimits" />
          <xs:enumeration value="TravelInsurance" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type15">
        <xs:annotation>
          <xs:documentation>Common types of features &amp; benefits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountManagement" />
          <xs:enumeration value="CashBack" />
          <xs:enumeration value="CreditReports" />
          <xs:enumeration value="Lifestyle" />
          <xs:enumeration value="MotorBreakdown" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PaymentHolidays" />
          <xs:enumeration value="SpendLimits" />
          <xs:enumeration value="TravelInsurance" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type18">
        <xs:annotation>
          <xs:documentation>Limit type, in a coded form.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Available" />
          <xs:enumeration value="Credit" />
          <xs:enumeration value="Emergency" />
          <xs:enumeration value="PreAgreed" />
          <xs:enumeration value="Temporary" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type19">
        <xs:annotation>
          <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="DirectDebits" />
          <xs:enumeration value="ExistingCustomers" />
          <xs:enumeration value="MinimumOperatingBalance" />
          <xs:enumeration value="MinimumDeposit" />
          <xs:enumeration value="NewCustomersOnly" />
          <xs:enumeration value="PreviousBankruptcyAllowed" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="StudentsOnly" />
          <xs:enumeration value="SoleStudentAccount" />
          <xs:enumeration value="SoleUkAccount" />
          <xs:enumeration value="SwitchersOnly" />
          <xs:enumeration value="UCASFulltimeTwoYears" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type21">
        <xs:annotation>
          <xs:documentation>Card Type available e.g. Debit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CashCard" />
          <xs:enumeration value="DebitCard" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="POCACard" />
          <xs:enumeration value="PrepaidDebitCard" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type24">
        <xs:annotation>
          <xs:documentation>Common types of features &amp; benefits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AccountManagement" />
          <xs:enumeration value="AccountOpeningOrSwitchingIncentive" />
          <xs:enumeration value="Cashback" />
          <xs:enumeration value="Entertainment" />
          <xs:enumeration value="HomeInsurance" />
          <xs:enumeration value="HomeProtection" />
          <xs:enumeration value="InternationalPaymentSupport" />
          <xs:enumeration value="Lifestyle" />
          <xs:enumeration value="MotorBreakdown" />
          <xs:enumeration value="OverdraftControl" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PremiumService" />
          <xs:enumeration value="PreferentialRates" />
          <xs:enumeration value="PassiveSaving" />
          <xs:enumeration value="RelationshipManager" />
          <xs:enumeration value="Rewards" />
          <xs:enumeration value="TechnologyInsurance" />
          <xs:enumeration value="TravelInsurance" />
          <xs:enumeration value="Travel" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type28">
        <xs:annotation>
          <xs:documentation>Mobile applications that the PCA product will support</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="AndroidPay" />
          <xs:enumeration value="ApplePay" />
          <xs:enumeration value="GooglePay" />
          <xs:enumeration value="IssuerMobileApp" />
          <xs:enumeration value="MobileBankingApp" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PayM" />
          <xs:enumeration value="SamsungPay" />
          <xs:enumeration value="VodafoneWallet" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type29">
        <xs:annotation>
          <xs:documentation>Eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BusinessOnly" />
          <xs:enumeration value="CreditScoring" />
          <xs:enumeration value="ExistingCustomers" />
          <xs:enumeration value="IdAndV" />
          <xs:enumeration value="Mortgage" />
          <xs:enumeration value="NoArrearsOnLoan" />
          <xs:enumeration value="NoCustomerInArrears" />
          <xs:enumeration value="NewCustomersOnly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="StartUp" />
          <xs:enumeration value="Turnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type30">
        <xs:annotation>
          <xs:documentation>eligibility type - method by which we group eligibilities for comparison purposes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BusinessOnly" />
          <xs:enumeration value="CreditScoring" />
          <xs:enumeration value="ExistingCustomers" />
          <xs:enumeration value="IdAndV" />
          <xs:enumeration value="Mortgage" />
          <xs:enumeration value="NoArrearsOnLoan" />
          <xs:enumeration value="NoCustomerInArrears" />
          <xs:enumeration value="NewCustomersOnly" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="StartUp" />
          <xs:enumeration value="Turnover" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type32">
        <xs:annotation>
          <xs:documentation>Feature and Benefit type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="EarlySettlement" />
          <xs:enumeration value="FlexibleRepayment" />
          <xs:enumeration value="OverPayment" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PaymentHolidays" />
          <xs:enumeration value="RepaymentHoliday" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Type33">
        <xs:annotation>
          <xs:documentation>Common types of features &amp; benefits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="EarlySettlement" />
          <xs:enumeration value="FlexibleRepayment" />
          <xs:enumeration value="OverPayment" />
          <xs:enumeration value="Other" />
          <xs:enumeration value="PaymentHolidays" />
          <xs:enumeration value="RepaymentHoliday" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="UpdateaclientbywayofClientIDResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="application_type" type="tns:ApplicationType" />
          <xs:element minOccurs="1" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client identifier string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_id_issued_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client identifier was issued expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>OAuth 2.0 client secret string</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string">
                <xs:maxLength value="36" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="client_secret_expires_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Time at which the client secret will expire expressed as seconds since 1970-01-01T00:00:00Z as measured in UTC. Set to 0 if does not expire</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="grant_types" type="tns:GrantType" />
          <xs:element minOccurs="1" name="id_token_signed_response_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="1" maxOccurs="unbounded" name="redirect_uris">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="request_object_signing_alg" type="tns:SupportedAlgorithms" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="response_types" type="tns:ResponseType" />
          <xs:element minOccurs="1" name="scope">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="software_id">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="^[0-9a-zA-Z]{1,22}$" />
                <xs:maxLength value="22" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="software_statement">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tls_client_auth_subject_dn">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:minLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_endpoint_auth_method" type="tns:TokenEndpointAuthMethod" />
          <xs:element minOccurs="0" name="token_endpoint_auth_signing_alg" type="tns:SupportedAlgorithms" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GET_UnsecuredSmeLoans_GET_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="If-Modified-Since" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if modified since a given date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="If-None-Match" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if the given Etag value does not match</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_OutputMessage" type="tns:UnsecuredSMELendingResponse">
        <xs:annotation>
          <xs:documentation>Successful response with a list of `Unsecured SME Lending` data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_400" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have sent a request which could not be understood.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_408" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>Your client has failed to submit a request, and a timeout has occurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_429" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have requested this resource too often. Slow down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_500" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>An error occurred on the server. No further information is available.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_503" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>The service is temporarily unavailable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_UnsecuredSmeLoans_GET_Default" type="tns:Errorobject">
        <xs:annotation>
          <xs:documentation>A standard error response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="If-Modified-Since" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if modified since a given date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="If-None-Match" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if the given Etag value does not match</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_OutputMessage" type="tns:CommercialCreditCardResponse">
        <xs:annotation>
          <xs:documentation>Successful response with a list of `Commercial Credit Card` data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_400" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have sent a request which could not be understood.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_408" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>Your client has failed to submit a request, and a timeout has occurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_429" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have requested this resource too often. Slow down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_500" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>An error occurred on the server. No further information is available.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_503" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>The service is temporarily unavailable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_CommercialCreditCards_GET_Default" type="tns:Errorobject">
        <xs:annotation>
          <xs:documentation>A standard error response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="If-Modified-Since" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if modified since a given date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="If-None-Match" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if the given Etag value does not match</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Atms_GET_OutputMessage" type="tns:ATMResponse">
        <xs:annotation>
          <xs:documentation>Successful response with a list of `ATM` data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_400" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have sent a request which could not be understood.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_408" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>Your client has failed to submit a request, and a timeout has occurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_429" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have requested this resource too often. Slow down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_500" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>An error occurred on the server. No further information is available.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_503" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>The service is temporarily unavailable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Atms_GET_Default" type="tns:Errorobject">
        <xs:annotation>
          <xs:documentation>A standard error response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="If-Modified-Since" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if modified since a given date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="If-None-Match" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if the given Etag value does not match</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_OutputMessage" type="tns:PersonalCurrentAccountResponse">
        <xs:annotation>
          <xs:documentation>Successful response with a list of `Personal Current Account` data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_400" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have sent a request which could not be understood.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_408" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>Your client has failed to submit a request, and a timeout has occurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_429" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have requested this resource too often. Slow down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_500" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>An error occurred on the server. No further information is available.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_503" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>The service is temporarily unavailable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_PersonalCurrentAccounts_GET_Default" type="tns:Errorobject">
        <xs:annotation>
          <xs:documentation>A standard error response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="If-Modified-Since" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if modified since a given date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="If-None-Match" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if the given Etag value does not match</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Branches_GET_OutputMessage" type="tns:BranchResponse">
        <xs:annotation>
          <xs:documentation>Successful response with a list of `Branch` data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_400" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have sent a request which could not be understood.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_408" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>Your client has failed to submit a request, and a timeout has occurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_429" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have requested this resource too often. Slow down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_500" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>An error occurred on the server. No further information is available.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_503" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>The service is temporarily unavailable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Branches_GET_Default" type="tns:Errorobject">
        <xs:annotation>
          <xs:documentation>A standard error response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="If-Modified-Since" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if modified since a given date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="If-None-Match" type="xs:string">
              <xs:annotation>
                <xs:documentation>Used for conditional request, to retrieve data only if the given Etag value does not match</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_OutputMessage" type="tns:BranchCurrentAccountResponse">
        <xs:annotation>
          <xs:documentation>Successful response with a list of `Branch Current Account` data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_400" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have sent a request which could not be understood.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_408" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>Your client has failed to submit a request, and a timeout has occurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_429" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>You have requested this resource too often. Slow down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_500" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>An error occurred on the server. No further information is available.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_503" type="tns:Error503Object">
        <xs:annotation>
          <xs:documentation>The service is temporarily unavailable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_BusinessCurrentAccounts_GET_Default" type="tns:Errorobject">
        <xs:annotation>
          <xs:documentation>A standard error response.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Searchforoneormoreresources_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="filter" type="xs:string">
              <xs:annotation>
                <xs:documentation>The filter string used to request a subset of resources.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortBy" type="xs:string">
              <xs:annotation>
                <xs:documentation>A string indicating the attribute whose value shall be used to order the returned responses.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortOrder" type="tns:sortOrder1">
              <xs:annotation>
                <xs:documentation>A string indicating the order in which the 'sortBy' parameter is applied.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="startIndex" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the 1-based index of the first query result.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="count" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the desired maximum number of query results per page.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Searchforoneormoreresources_OutputMessage" type="tns:SearchforoneormoreresourcesResponse2">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Searchforoneormoreresources_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SCIM2.0SearchRequestMessage" type="tns:SearchRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" type="tns:SearchforoneormoreresourcesusingHTTPPOSTResponse3">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_SearchforoneormoreresourcesusingHTTPPOST_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Retrievetheresource_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>The resource identifier (value of the 'id' attribute).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Retrievetheresource_OutputMessage" type="tns:OBThirdPartyProviders">
        <xs:annotation>
          <xs:documentation>The retrieved resource is included in the response body</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Retrievetheresource_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="filter" type="xs:string">
              <xs:annotation>
                <xs:documentation>The filter string used to request a subset of resources.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortBy" type="xs:string">
              <xs:annotation>
                <xs:documentation>A string indicating the attribute whose value shall be used to order the returned responses.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortOrder" type="tns:sortOrder1">
              <xs:annotation>
                <xs:documentation>A string indicating the order in which the 'sortBy' parameter is applied.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="startIndex" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the 1-based index of the first query result.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="count" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the desired maximum number of query results per page.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage" type="tns:OBAccountPaymentServiceProvidersResponse">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SCIM2.0SearchRequestMessage" type="tns:SearchRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" type="tns:OBAccountPaymentServiceProvidersResponse">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>The resource identifier (value of the 'id' attribute).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage" type="tns:OBAccountPaymentServiceProviders">
        <xs:annotation>
          <xs:documentation>The retrieved resource is included in the response body</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAuthorities_GET_Searchforoneormoreresources_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="filter" type="xs:string">
              <xs:annotation>
                <xs:documentation>The filter string used to request a subset of resources.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortBy" type="xs:string">
              <xs:annotation>
                <xs:documentation>A string indicating the attribute whose value shall be used to order the returned responses.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortOrder" type="tns:sortOrder1">
              <xs:annotation>
                <xs:documentation>A string indicating the order in which the 'sortBy' parameter is applied.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="startIndex" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the 1-based index of the first query result.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="count" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the desired maximum number of query results per page.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBAuthorities_GET_Searchforoneormoreresources_OutputMessage" type="tns:SearchforoneormoreresourcesResponse">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAuthorities_GET_Searchforoneormoreresources_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SCIM2.0SearchRequestMessage" type="tns:SearchRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" type="tns:SearchforoneormoreresourcesusingHTTPPOSTResponse1">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAuthorities_GET_Retrievetheresource_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>The resource identifier (value of the 'id' attribute).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBAuthorities_GET_Retrievetheresource_OutputMessage" type="tns:OBAuthorities">
        <xs:annotation>
          <xs:documentation>The retrieved resource is included in the response body</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBAuthorities_GET_Retrievetheresource_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="filter" type="xs:string">
              <xs:annotation>
                <xs:documentation>The filter string used to request a subset of resources.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortBy" type="xs:string">
              <xs:annotation>
                <xs:documentation>A string indicating the attribute whose value shall be used to order the returned responses.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="sortOrder" type="tns:sortOrder1">
              <xs:annotation>
                <xs:documentation>A string indicating the order in which the 'sortBy' parameter is applied.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="startIndex" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the 1-based index of the first query result.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="count" type="xs:integer">
              <xs:annotation>
                <xs:documentation>An integer indicating the desired maximum number of query results per page.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage" type="tns:SearchforoneormoreresourcesResponse1">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SCIM2.0SearchRequestMessage" type="tns:SearchRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" type="tns:SearchforoneormoreresourcesusingHTTPPOSTResponse2">
        <xs:annotation>
          <xs:documentation>SCIM 2.0 List Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>The resource identifier (value of the 'id' attribute).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="attributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource
attributes to return in the response, overriding the set of attributes that
would be returned by default. 'excludedAttributes' must not also be specified
if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="excludedAttributes" type="xs:string">
              <xs:annotation>
                <xs:documentation>A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. 'attributes' must not also be specified if this is specified.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage" type="tns:OBQualifiedTrustServiceProviders">
        <xs:annotation>
          <xs:documentation>The retrieved resource is included in the response body</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default" type="tns:ErrorResponse">
        <xs:annotation>
          <xs:documentation>An error occurred while executing the operation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="requestBody" type="xs:string">
              <xs:annotation>
                <xs:documentation>A request to register a Software Statement Assertion with an ASPSP</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage" type="tns:RegisteraclientbywayofaSoftwareStatementAssertionResponse">
        <xs:annotation>
          <xs:documentation>Client registration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteaclientbywayofClientID_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ClientId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The client ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_DeleteaclientbywayofClientID_OutputMessage">
        <xs:annotation>
          <xs:documentation>Client deleted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteaclientbywayofClientID_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteaclientbywayofClientID_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteaclientbywayofClientID_405" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaclientbywayofClientID_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ClientId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The client ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetaclientbywayofClientID_OutputMessage" type="tns:GetaclientbywayofClientIDResponse">
        <xs:annotation>
          <xs:documentation>Client registration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaclientbywayofClientID_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaclientbywayofClientID_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_UpdateaclientbywayofClientID_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="requestBody" type="xs:string">
              <xs:annotation>
                <xs:documentation>A request to register a Software Statement Assertion with an ASPSP</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="ClientId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The client ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_UpdateaclientbywayofClientID_OutputMessage" type="tns:UpdateaclientbywayofClientIDResponse">
        <xs:annotation>
          <xs:documentation>Client registration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_UpdateaclientbywayofClientID_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_UpdateaclientbywayofClientID_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_UpdateaclientbywayofClientID_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_OutputMessage" type="tns:OBCallbackUrlsResponse1">
        <xs:annotation>
          <xs:documentation>An array of callback URLs</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_403">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_ReadallcallbackURLs_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBCallbackUrl1Param" type="tns:OBCallbackUrl1">
              <xs:annotation>
                <xs:documentation>Create an Callback URI</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>Header containing a detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_OutputMessage" type="tns:OBCallbackUrlResponse1">
        <xs:annotation>
          <xs:documentation>Callback URL created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_403">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_415">
        <xs:annotation>
          <xs:documentation>Unsupported Media Type</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateacallbackURL_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="CallbackUrlId" type="xs:string">
              <xs:annotation>
                <xs:documentation>CallbackUrlId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_OutputMessage">
        <xs:annotation>
          <xs:documentation>Callback URL changed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_403">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteacallbackURI_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="CallbackUrlId" type="xs:string">
              <xs:annotation>
                <xs:documentation>CallbackUrlId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OBCallbackUrl1Param" type="tns:OBCallbackUrl1">
              <xs:annotation>
                <xs:documentation>Create an Callback URI</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>Header containing a detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_OutputMessage" type="tns:OBCallbackUrlResponse1">
        <xs:annotation>
          <xs:documentation>Callback URL changed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_403">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_415">
        <xs:annotation>
          <xs:documentation>Unsupported Media Type</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_AmendacallbackURI_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBFundsConfirmationConsent1Param" type="tns:OBFundsConfirmationConsent1">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_OutputMessage" type="tns:OBFundsConfirmationConsentResponse1">
        <xs:annotation>
          <xs:documentation>Funds Confirmation Consent Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmationConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage">
        <xs:annotation>
          <xs:documentation>Funds Confirmation Consent Deleted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteFundsConfirmationConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_OutputMessage" type="tns:OBFundsConfirmationConsentResponse1">
        <xs:annotation>
          <xs:documentation>Funds Confirmation Consent Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFundsConfirmationConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBFundsConfirmation1Param" type="tns:OBFundsConfirmation1">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_OutputMessage" type="tns:OBFundsConfirmationResponse1">
        <xs:annotation>
          <xs:documentation>Funds Confirmation Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFundsConfirmations_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventNotification_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBEventNotification1Param" type="xs:hexBinary">
              <xs:annotation>
                <xs:documentation>Create an Callback URI</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-fapi-financial-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateEventNotification_OutputMessage">
        <xs:annotation>
          <xs:documentation>Accepted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_OutputMessage" type="tns:OBEventSubscriptionsResponse1">
        <xs:annotation>
          <xs:documentation>Event Subscription Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetEventSubscriptions_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBEventSubscription1Param" type="tns:OBEventSubscription1">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_OutputMessage" type="tns:OBEventSubscriptionResponse1">
        <xs:annotation>
          <xs:documentation>Event Subscription Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEventSubscriptions_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="EventSubscriptionId" type="xs:string">
              <xs:annotation>
                <xs:documentation>EventSubscriptionId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage">
        <xs:annotation>
          <xs:documentation>Event Subscription Deleted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBEventSubscriptionResponse1Param" type="tns:OBEventSubscriptionResponse1">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="EventSubscriptionId" type="xs:string">
              <xs:annotation>
                <xs:documentation>EventSubscriptionId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage" type="tns:OBEventSubscriptionResponse1">
        <xs:annotation>
          <xs:documentation>Event Subscription Changed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_ChangeEventSubscriptionsEventSubscriptionId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteDomesticConsent3Param" type="tns:OBWriteDomesticConsent3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_OutputMessage" type="tns:OBWriteDomesticConsentResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Payment Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPaymentConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_OutputMessage" type="tns:OBWriteDomesticConsentResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage" type="tns:OBWriteFundsConfirmationResponse1">
        <xs:annotation>
          <xs:documentation>Domestic Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteDomestic2Param" type="tns:OBWriteDomestic2">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_OutputMessage" type="tns:OBWriteDomesticResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Payments Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticPayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="DomesticPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>DomesticPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage" type="tns:OBWriteDomesticResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteDomesticScheduledConsent3Param" type="tns:OBWriteDomesticScheduledConsent3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_OutputMessage" type="tns:OBWriteDomesticScheduledConsentResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Scheduled Payment Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPaymentConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage" type="tns:OBWriteDomesticScheduledConsentResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Scheduled Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteDomesticScheduled2Param" type="tns:OBWriteDomesticScheduled2">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_OutputMessage" type="tns:OBWriteDomesticScheduledResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Scheduled Payments Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticScheduledPayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="DomesticScheduledPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>DomesticScheduledPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage" type="tns:OBWriteDomesticScheduledResponse3">
        <xs:annotation>
          <xs:documentation>Domestic Scheduled Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteFileConsent3Param" type="tns:OBWriteFileConsent3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_OutputMessage" type="tns:OBWriteFileConsentResponse3">
        <xs:annotation>
          <xs:documentation>File Payment Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_OutputMessage" type="tns:OBWriteFileConsentResponse3">
        <xs:annotation>
          <xs:documentation>File Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_OutputMessage" type="xs:anyType">
        <xs:annotation>
          <xs:documentation>File Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentConsentsConsentIdFile_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="FileParam" type="xs:anyType">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage">
        <xs:annotation>
          <xs:documentation>File Payment Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePaymentConsentsConsentIdFile_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteFile2Param" type="tns:OBWriteFile2">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_OutputMessage" type="tns:OBWriteFileResponse2">
        <xs:annotation>
          <xs:documentation>File Payments Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateFilePayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="FilePaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>FilePaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_OutputMessage" type="tns:OBWriteFileResponse2">
        <xs:annotation>
          <xs:documentation>File Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="FilePaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>FilePaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage" type="xs:anyType">
        <xs:annotation>
          <xs:documentation>File Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdReportFile_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteInternationalConsent3Param" type="tns:OBWriteInternationalConsent3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_OutputMessage" type="tns:OBWriteInternationalConsentResponse3">
        <xs:annotation>
          <xs:documentation>International Payment Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPaymentConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_OutputMessage" type="tns:OBWriteInternationalConsentResponse3">
        <xs:annotation>
          <xs:documentation>International Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage" type="tns:OBWriteFundsConfirmationResponse1">
        <xs:annotation>
          <xs:documentation>International Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteInternational2Param" type="tns:OBWriteInternational2">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_OutputMessage" type="tns:OBWriteInternationalResponse3">
        <xs:annotation>
          <xs:documentation>International Payments Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalPayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="InternationalPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>InternationalPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage" type="tns:OBWriteInternationalResponse3">
        <xs:annotation>
          <xs:documentation>International Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteInternationalScheduledConsent3Param" type="tns:OBWriteInternationalScheduledConsent3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_OutputMessage" type="tns:OBWriteInternationalScheduledConsentResponse3">
        <xs:annotation>
          <xs:documentation>International Scheduled Payment Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPaymentConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage" type="tns:OBWriteInternationalScheduledConsentResponse3">
        <xs:annotation>
          <xs:documentation>International Scheduled Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage" type="tns:OBWriteFundsConfirmationResponse1">
        <xs:annotation>
          <xs:documentation>International Scheduled Payment Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteInternationalScheduled2Param" type="tns:OBWriteInternationalScheduled2">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_OutputMessage" type="tns:OBWriteInternationalScheduledResponse3">
        <xs:annotation>
          <xs:documentation>International Scheduled Payments Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalScheduledPayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="InternationalScheduledPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>InternationalScheduledPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage" type="tns:OBWriteInternationalScheduledResponse3">
        <xs:annotation>
          <xs:documentation>International Scheduled Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="DomesticPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>DomesticPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="DomesticScheduledPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>DomesticScheduledPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="DomesticStandingOrderId" type="xs:string">
              <xs:annotation>
                <xs:documentation>DomesticStandingOrderId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="FilePaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>FilePaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="InternationalPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>InternationalPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="InternationalScheduledPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>InternationalScheduledPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="InternationalStandingOrderPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>InternationalStandingOrderPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage" type="tns:OBWritePaymentDetailsResponse1">
        <xs:annotation>
          <xs:documentation>Payment Details Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBEventPolling1Param" type="tns:OBEventPolling1">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateEvents_OutputMessage" type="tns:OBEventPollingResponse1">
        <xs:annotation>
          <xs:documentation>Events Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateEvents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBReadConsent1Param" type="tns:OBReadConsent1">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_OutputMessage" type="tns:OBReadConsentResponse1">
        <xs:annotation>
          <xs:documentation>Account Access Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateAccountAccessConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage">
        <xs:annotation>
          <xs:documentation>Account Access Consents Deleted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteAccountAccessConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_OutputMessage" type="tns:OBReadConsentResponse1">
        <xs:annotation>
          <xs:documentation>Account Access Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountAccessConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_OutputMessage" type="tns:OBReadParty3">
        <xs:annotation>
          <xs:documentation>Parties Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParties_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_OutputMessage" type="tns:OBReadParty2">
        <xs:annotation>
          <xs:documentation>Parties Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdParty_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetParty_OutputMessage" type="tns:OBReadParty2">
        <xs:annotation>
          <xs:documentation>Parties Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetParty_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_OutputMessage" type="tns:OBReadScheduledPayment2">
        <xs:annotation>
          <xs:documentation>Scheduled Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdScheduledPayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_OutputMessage" type="tns:OBReadScheduledPayment2">
        <xs:annotation>
          <xs:documentation>Scheduled Payments Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetScheduledPayments_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_OutputMessage" type="tns:OBReadProduct2">
        <xs:annotation>
          <xs:documentation>Products Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdProduct_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetProducts_OutputMessage" type="tns:OBReadProduct2">
        <xs:annotation>
          <xs:documentation>Products Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetProducts_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccounts_OutputMessage" type="tns:OBReadAccount4">
        <xs:annotation>
          <xs:documentation>Accounts Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccounts_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_OutputMessage" type="tns:OBReadAccount4">
        <xs:annotation>
          <xs:documentation>Accounts Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_OutputMessage" type="tns:OBReadBalance1">
        <xs:annotation>
          <xs:documentation>Balances Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBalances_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetBalances_OutputMessage" type="tns:OBReadBalance1">
        <xs:annotation>
          <xs:documentation>Balances Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBalances_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_OutputMessage" type="tns:OBReadBeneficiary3">
        <xs:annotation>
          <xs:documentation>Beneficiaries Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdBeneficiaries_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_OutputMessage" type="tns:OBReadBeneficiary3">
        <xs:annotation>
          <xs:documentation>Beneficiaries Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetBeneficiaries_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fromStatementDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter statements FROM
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="toStatementDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter statements TO
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_OutputMessage" type="tns:OBReadStatement1">
        <xs:annotation>
          <xs:documentation>Statements Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatements_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="StatementId" type="xs:string">
              <xs:annotation>
                <xs:documentation>StatementId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_OutputMessage" type="tns:OBReadStatement1">
        <xs:annotation>
          <xs:documentation>Statements Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="StatementId" type="xs:string">
              <xs:annotation>
                <xs:documentation>StatementId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage" type="xs:anyType">
        <xs:annotation>
          <xs:documentation>Statements Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdFile_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fromStatementDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter statements FROM
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="toStatementDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter statements TO
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetStatements_OutputMessage" type="tns:OBReadStatement1">
        <xs:annotation>
          <xs:documentation>Statements Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStatements_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_OutputMessage" type="tns:OBReadStandingOrder5">
        <xs:annotation>
          <xs:documentation>Standing Orders Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStandingOrders_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_OutputMessage" type="tns:OBReadStandingOrder5">
        <xs:annotation>
          <xs:documentation>Standing Orders Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetStandingOrders_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="StatementId" type="xs:string">
              <xs:annotation>
                <xs:documentation>StatementId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage" type="tns:OBReadTransaction4">
        <xs:annotation>
          <xs:documentation>Transactions Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fromBookingDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter transactions FROM
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="toBookingDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter transactions TO
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_OutputMessage" type="tns:OBReadTransaction4">
        <xs:annotation>
          <xs:documentation>Transactions Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdTransactions_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fromBookingDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter transactions FROM
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="toBookingDateTime" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>The UTC ISO 8601 Date Time to filter transactions TO
NB Time component is optional - set to 00:00:00 for just Date.
If the Date Time contains a timezone, the ASPSP must ignore the timezone component.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetTransactions_OutputMessage" type="tns:OBReadTransaction4">
        <xs:annotation>
          <xs:documentation>Transactions Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetTransactions_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_OutputMessage" type="tns:OBReadOffer1">
        <xs:annotation>
          <xs:documentation>Offers Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdOffers_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetOffers_OutputMessage" type="tns:OBReadOffer1">
        <xs:annotation>
          <xs:documentation>Offers Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetOffers_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AccountId" type="xs:string">
              <xs:annotation>
                <xs:documentation>AccountId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_OutputMessage" type="tns:OBReadDirectDebit1">
        <xs:annotation>
          <xs:documentation>Direct Debits Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetAccountsAccountIdDirectDebits_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_OutputMessage" type="tns:OBReadDirectDebit1">
        <xs:annotation>
          <xs:documentation>Direct Debits Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDirectDebits_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getcertificatesforthegivensoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationAssociativeCertificateType" type="tns:OrganisationAssociativeCertificateType">
              <xs:annotation>
                <xs:documentation>The certificate type that can be associated with a software statement</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="CertificateOrKeyId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The certificate or key Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="256" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementCertificateOrKeyType" type="tns:SoftwareStatementCertificateOrKeyType">
              <xs:annotation>
                <xs:documentation>The certificate or key type that can be associated with a software statement</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="CSROrKey" type="tns:CertificateOrKeyGetSchema">
              <xs:annotation>
                <xs:documentation>PEM file -- the contents of the PEM file will differ depending upon *SoftwareStatementCertificateOrKeyType*. If *SoftwareStatementCertificateOrKeyType* is set to *obsigning* or *obtransport* then the PEM file should contain a Certificate Signing Request (CSR) for an OB signing or OB transport certificate respectively; if *SoftwareStatementCertificateOrKeyType* is set to *sigkey*, *enckey* then the PEM file should contain a public signing or encryption key respectively.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementCertificateOrKeyType" type="tns:SoftwareStatementCertificateOrKeyType">
              <xs:annotation>
                <xs:documentation>The certificate or key type that can be associated with a software statement</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="CertificateValidationRequestBody" type="xs:string">
              <xs:annotation>
                <xs:documentation>Certificate Validation Payload</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_Validatecertificate_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Validatecertificate_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteDomesticStandingOrderConsent4Param" type="tns:OBWriteDomesticStandingOrderConsent4">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_OutputMessage" type="tns:OBWriteDomesticStandingOrderConsentResponse4">
        <xs:annotation>
          <xs:documentation>Domestic Standing Order Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrderConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage" type="tns:OBWriteDomesticStandingOrderConsentResponse4">
        <xs:annotation>
          <xs:documentation>Domestic Standing Order Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrderConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteDomesticStandingOrder3Param" type="tns:OBWriteDomesticStandingOrder3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_OutputMessage" type="tns:OBWriteDomesticStandingOrderResponse4">
        <xs:annotation>
          <xs:documentation>Domestic Standing Orders Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateDomesticStandingOrders_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="DomesticStandingOrderId" type="xs:string">
              <xs:annotation>
                <xs:documentation>DomesticStandingOrderId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage" type="tns:OBWriteDomesticStandingOrderResponse4">
        <xs:annotation>
          <xs:documentation>Domestic Standing Orders Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteInternationalStandingOrderConsent4Param" type="tns:OBWriteInternationalStandingOrderConsent4">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_OutputMessage" type="tns:OBWriteInternationalStandingOrderConsentResponse4">
        <xs:annotation>
          <xs:documentation>International Standing Order Consents Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrderConsents_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="ConsentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>ConsentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage" type="tns:OBWriteInternationalStandingOrderConsentResponse4">
        <xs:annotation>
          <xs:documentation>International Standing Order Consents Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrderConsentsConsentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OBWriteInternationalStandingOrder3Param" type="tns:OBWriteInternationalStandingOrder3">
              <xs:annotation>
                <xs:documentation>Default</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="x-idempotency-key">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>Every request will be processed only once per x-idempotency-key.  The
Idempotency Key will be valid for 24 hours.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(?!\s)(.*)(\S)$" />
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="x-jws-signature" type="xs:string">
              <xs:annotation>
                <xs:documentation>A detached JWS signature of the body of the payload.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_OutputMessage" type="tns:OBWriteInternationalStandingOrderResponse4">
        <xs:annotation>
          <xs:documentation>International Standing Orders Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateInternationalStandingOrders_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="InternationalStandingOrderPaymentId" type="xs:string">
              <xs:annotation>
                <xs:documentation>InternationalStandingOrderPaymentId</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-auth-date">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The time when the PSU last logged in with the TPP. 
All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
Sun, 10 Sep 2017 19:43:31 UTC</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-customer-ip-address" type="xs:string">
              <xs:annotation>
                <xs:documentation>The PSU's IP address if the PSU is currently logged in with the TPP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="x-fapi-interaction-id" type="xs:string">
              <xs:annotation>
                <xs:documentation>An RFC4122 UID used as a correlation id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Authorization" type="xs:string">
              <xs:annotation>
                <xs:documentation>An Authorisation Token as per https://tools.ietf.org/html/rfc6750</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage" type="tns:OBWriteInternationalStandingOrderResponse4">
        <xs:annotation>
          <xs:documentation>International Standing Orders Read</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Bad request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Forbidden</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405">
        <xs:annotation>
          <xs:documentation>Method Not Allowed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429">
        <xs:annotation>
          <xs:documentation>Too Many Requests</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500" type="tns:OBErrorResponse1">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage">
        <xs:annotation>
          <xs:documentation>List of the organisation - Schema in scim-swagger.json
</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" fixed="tpp" name="OrganisationTypeForQSealCOnboarding" type="xs:string">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Enrol" type="tns:EnrolSchema">
              <xs:annotation>
                <xs:documentation>The payload submitted when a TPP attempts to enrol with an eIDAS QWAC or QSealC certificate. It's format and contents will depend on the value of the `Content-Type` header:  TPP onto the Open Banking Directory (required fields to be validated). For eIDAS QSealC-bearing TPPs use a signed JWT (JWS).

* __application/json__ -- a JSON payload for QWAC onboarding.
* __application/jwt__ -- a signed JWT (JWS) for QSealC onboarding.
* __application/jose__ -- same as __application/jwt__.

## QWAC-based Onboarding

Set `Content-Type` to `application/json` and send the payload conforming to the schema.

EXAMPLE REQUEST PAYLOAD FOR QWAC-BASED ONBOARDING

```
POST /organisation/tpp HTTP/1.1
Content-Type: application/json
Accept: application/json
Host: matls-dirapi.openbanking.org.uk
{
  "client_name": "string",
  "scope": "string",
  "token_endpoint_auth_method": "string",
  "tls_client_auth_subject_dn": "string",
  "grant_types": [
    "string"
  ],
  "token_endpoint_auth_signing_alg": "string"
}
```

## QSealC-based Onboarding

Set `Content-Type` to `application/jwt` or `application/jose` and send the payload conforming to the schema as a signed JWT.

The QSealC, the issuing certificate, and the root certificate (all in DER format) must be used as the items of the array, which forms the value of the `x5c` claim in the JWT header.

The JWT MUST be signed using the private key associated with the QSealC listed in the `x5c` claim in the header.

```
{
  "typ": "JWT",
  "alg": "ES256",
  "kid": "ABCD1234",
  "x5c": ["qsealc", "issuer certificate", "root certificate"]
}
{
  "client_name": "string",
  "scope": "string",
  "token_endpoint_auth_method": "string",
  "tls_client_auth_subject_dn": "string",
  "grant_types": [
    "string"
  ],
  "token_endpoint_auth_signing_alg": "string"
}
```

EXAMPLE REQUEST PAYLOAD FOR QSealC-BASED ONBOARDING

```
POST /organisation/tpp HTTP/1.1
Content-Type: application/jwt | application/jose
Accept: application/json
Host: matls-dirapi.openbanking.org.uk
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IkFCQ0QxMjM0IiwieDVjIjpbInFzZWFsYyIsImlzc3VlciBjZXJ0aWZpY2F0ZSIsInJvb3QgY2VydGlmaWNhdGUiXX0.eyJyZWRpcmVjdF91cmlzIjpbInN0cmluZyJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InN0cmluZyIsImdyYW50X3R5cGVzIjpbInN0cmluZyJdLCJyZXNwb25zZV90eXBlcyI6WyJzdHJpbmciXSwiY2xpZW50X25hbWUiOiJzdHJpbmciLCJjbGllbnRfdXJpIjoic3RyaW5nIiwibG9nb191cmkiOiJzdHJpbmciLCJzY29wZSI6InN0cmluZyIsImNvbnRhY3RzIjpbInVzZXJAZXhhbXBsZS5jb20iXSwidG9zX3VyaSI6InN0cmluZyIsInBvbGljeV91cmkiOiJzdHJpbmciLCJqd2tzX3VyaSI6InN0cmluZyIsImp3a3MiOnt9LCJzb2Z0d2FyZV9pZCI6InN0cmluZyIsInNvZnR3YXJlX3ZlcnNpb24iOiJzdHJpbmcifQ.lMsADSHkFGUw5PtgdEqXslYArzqf6tbg0lo0kCitOUA
```</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage">
        <xs:annotation>
          <xs:documentation>Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthegivenorganisationsdetails_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getthegivenorganisationsdetails_OutputMessage">
        <xs:annotation>
          <xs:documentation>Full details of the organisation - Schema in scim-swagger.json
</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthegivenorganisationsdetails_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthegivenorganisationsdetails_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetallAuthorisationServersforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AuthorisationServer" type="tns:AuthorisationServerRequestSchema">
              <xs:annotation>
                <xs:documentation>Properties to create/update authorisation server</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_CreateanAuthorisationServerforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AuthorisationServerId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The authorisation server Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_OutputMessage">
        <xs:annotation>
          <xs:documentation>No Content</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_DeleteanAuthorisationServer_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AuthorisationServerId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The authorisation server Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Get.well-knownentity_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="AuthorisationServer" type="tns:AuthorisationServerRequestSchema">
              <xs:annotation>
                <xs:documentation>Properties to create/update authorisation server</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="AuthorisationServerId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The authorisation server Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_OutputMessage">
        <xs:annotation>
          <xs:documentation>Accepted</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Update.well-knownentity_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthecertificatesforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationCertificateType" type="tns:OrganisationCertificateType">
              <xs:annotation>
                <xs:documentation>The certificate type</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationCertificateType" type="tns:OrganisationCertificateType">
              <xs:annotation>
                <xs:documentation>The certificate type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="CertificateOrCSROrJWS" type="tns:CertificateOrKeyGetSchema">
              <xs:annotation>
                <xs:documentation>* __PEM file__ -- when the request `Content-Type` header is set to  `application/x-pem-file` the contents of the PEM file will differ depending upon `OrganisationCertificateType`. If `OrganisationCertificateType` is set to `qwac`, `qseal` then the PEM file should contain a *QWAC* or a *QSEAL* certificate respectively; if `OrganisationCertificateType` is set to `obwac` or `obseal` then the PEM file should contain a Certificate Signing Request (CSR) for an OB-issued *OBWAC* or *OBSEAL* certificate respectively.
* __Signed JWT__ -- when the request `Content-Type` header is set to `application/jwt` the body of the signed JWT will contain a CSR or a certificate.

### Requesting a Certificate using a signed JWT

The header `kid` claim is the ID of the QSealC certificate assigned to it by the OB JWKS store.

The body `csr` claim is the CSR in the DER format.

```
{
  "typ": "JWT",
  "alg": "ES256",
  "kid": "ABCD1234",
}
{
  "csr": "string"
}
```

### Uploaing a Certificate using a signed JWT

The header `kid` claim is the ID of the QSealC certificate assigned to it by the OB JWKS store.

The body `x5c` claim is the array of certificate, issuer certificate, and root certificate in the DER format.

```
{
  "typ": "JWT",
  "alg": "ES256",
  "kid": "ABCD1234",
}
{
  "x5c": ["qsealc", "issuer certificate", "root certificate"]
}
```

EXAMPLE REQUEST PAYLOAD USING SIGNED JWT REQUESTS

```
POST /organisation/tpp/123456789012345678/certificate/obwac HTTP/1.1
Content-Type: application/jwt
Accept: application/json
Host: matls-dirapi.openbanking.org.uk
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IkFCQ0QxMjM0IiwieDVjIjpbInFzZWFsYyIsImlzc3VlciBjZXJ0aWZpY2F0ZSIsInJvb3QgY2VydGlmaWNhdGUiXX0.eyJyZWRpcmVjdF91cmlzIjpbInN0cmluZyJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InN0cmluZyIsImdyYW50X3R5cGVzIjpbInN0cmluZyJdLCJyZXNwb25zZV90eXBlcyI6WyJzdHJpbmcibSwiY2xpZW50X25hbWUiOiJzdHJpbmciLCJjbGllbnRfdXJpIjoic3RyaW5nIiwibG9nb191cmkiOiJzdHJpbmciLCJzY29wZSI6InN0cmluZyIsImNvbnRhY3RzIjpbInVzZXJAZXhhbXBsZS5jb20iXSwidG9zX3VyaSI6InN0cmluZyIsInBvbGljeV91cmkiOiJzdHJpbmciLCJqd2tzX3VyaSI6InN0cmluZyIsImp3a3MiOnt9LCJzb2Z0d2FyZV9pZCI6InN0cmluZyIsInNvZnR3YXJlX3ZlcnNpb24iOiJzdHJpbmcifQ.lMsADSHkFGUw5PtgdEqXslYArzqf6tbg0lo0kCitOUA
```</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="CertificateOrKeyId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The certificate or key Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="256" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage">
        <xs:annotation>
          <xs:documentation>No Content</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="CertificateOrKeyId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The certificate or key Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="256" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="ContactType" type="tns:ContactType1">
              <xs:annotation>
                <xs:documentation>The contact type</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="ContactType" type="tns:ContactType1">
              <xs:annotation>
                <xs:documentation>The contact type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="Contact" type="tns:ContactSchema">
              <xs:annotation>
                <xs:documentation>Properties to update business/technical contacts</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getallsoftwarestatementsforthegivenorganisation_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatement" type="tns:SoftwareStatementCreateSchema">
              <xs:annotation>
                <xs:documentation>Software Statement payload</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_Createasoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>Created</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_Getasoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementState" type="tns:SoftwareStatementStateSchema">
              <xs:annotation>
                <xs:documentation>Payload used to deactivate/reactivate a Software Statement</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Updateasoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="CertificateOrKeyAssociation" type="tns:CertificateOrKeyAssociationSchema">
              <xs:annotation>
                <xs:documentation>Certificate or Key Association Payload</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationAssociativeCertificateType" type="tns:OrganisationAssociativeCertificateType">
              <xs:annotation>
                <xs:documentation>The certificate type that can be associated with a software statement</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="CertificateOrKeyId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The certificate or key Id</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="256" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409">
        <xs:annotation>
          <xs:documentation>Conflict</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="1" maxOccurs="unbounded" name="SoftwareStatementRedirectURI" type="xs:string">
              <xs:annotation>
                <xs:documentation>Software Statement Redirect URI</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_409">
        <xs:annotation>
          <xs:documentation>Conflict</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="POST_AddaredirectURItothegivenSoftwareStatement_502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" name="OrganisationType" type="tns:OrganisationType">
              <xs:annotation>
                <xs:documentation>OB Organisation Type</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="OrganisationId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The organsation ID</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="SoftwareStatementId">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation>The software statement ID</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="22" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage">
        <xs:annotation>
          <xs:documentation>OK</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400">
        <xs:annotation>
          <xs:documentation>Bad Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401">
        <xs:annotation>
          <xs:documentation>Unauthorized</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404">
        <xs:annotation>
          <xs:documentation>Not found</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406">
        <xs:annotation>
          <xs:documentation>Not Acceptable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500">
        <xs:annotation>
          <xs:documentation>Internal Server Error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502">
        <xs:annotation>
          <xs:documentation>Bad Gateway</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:schema>
  </types>
  <message name="GET_UnsecuredSmeLoans_GET_InputMessage">
    <part name="GET_UnsecuredSmeLoans_GET_InputMessage" xmlns:q1="http://laegler.com/openbanking/soap/model" element="q1:GET_UnsecuredSmeLoans_GET_InputMessage" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_OutputMessage">
    <part name="GET_UnsecuredSmeLoans_GET_OutputMessage" xmlns:q2="http://laegler.com/openbanking/soap/model" element="q2:GET_UnsecuredSmeLoans_GET_OutputMessage" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_400">
    <part name="GET_UnsecuredSmeLoans_GET_400" xmlns:q3="http://laegler.com/openbanking/soap/model" element="q3:GET_UnsecuredSmeLoans_GET_400" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_408">
    <part name="GET_UnsecuredSmeLoans_GET_408" xmlns:q4="http://laegler.com/openbanking/soap/model" element="q4:GET_UnsecuredSmeLoans_GET_408" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_429">
    <part name="GET_UnsecuredSmeLoans_GET_429" xmlns:q5="http://laegler.com/openbanking/soap/model" element="q5:GET_UnsecuredSmeLoans_GET_429" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_500">
    <part name="GET_UnsecuredSmeLoans_GET_500" xmlns:q6="http://laegler.com/openbanking/soap/model" element="q6:GET_UnsecuredSmeLoans_GET_500" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_503">
    <part name="GET_UnsecuredSmeLoans_GET_503" xmlns:q7="http://laegler.com/openbanking/soap/model" element="q7:GET_UnsecuredSmeLoans_GET_503" />
  </message>
  <message name="GET_UnsecuredSmeLoans_GET_Default">
    <part name="GET_UnsecuredSmeLoans_GET_Default" xmlns:q8="http://laegler.com/openbanking/soap/model" element="q8:GET_UnsecuredSmeLoans_GET_Default" />
  </message>
  <message name="GET_CommercialCreditCards_GET_InputMessage">
    <part name="GET_CommercialCreditCards_GET_InputMessage" xmlns:q9="http://laegler.com/openbanking/soap/model" element="q9:GET_CommercialCreditCards_GET_InputMessage" />
  </message>
  <message name="GET_CommercialCreditCards_GET_OutputMessage">
    <part name="GET_CommercialCreditCards_GET_OutputMessage" xmlns:q10="http://laegler.com/openbanking/soap/model" element="q10:GET_CommercialCreditCards_GET_OutputMessage" />
  </message>
  <message name="GET_CommercialCreditCards_GET_400">
    <part name="GET_CommercialCreditCards_GET_400" xmlns:q11="http://laegler.com/openbanking/soap/model" element="q11:GET_CommercialCreditCards_GET_400" />
  </message>
  <message name="GET_CommercialCreditCards_GET_408">
    <part name="GET_CommercialCreditCards_GET_408" xmlns:q12="http://laegler.com/openbanking/soap/model" element="q12:GET_CommercialCreditCards_GET_408" />
  </message>
  <message name="GET_CommercialCreditCards_GET_429">
    <part name="GET_CommercialCreditCards_GET_429" xmlns:q13="http://laegler.com/openbanking/soap/model" element="q13:GET_CommercialCreditCards_GET_429" />
  </message>
  <message name="GET_CommercialCreditCards_GET_500">
    <part name="GET_CommercialCreditCards_GET_500" xmlns:q14="http://laegler.com/openbanking/soap/model" element="q14:GET_CommercialCreditCards_GET_500" />
  </message>
  <message name="GET_CommercialCreditCards_GET_503">
    <part name="GET_CommercialCreditCards_GET_503" xmlns:q15="http://laegler.com/openbanking/soap/model" element="q15:GET_CommercialCreditCards_GET_503" />
  </message>
  <message name="GET_CommercialCreditCards_GET_Default">
    <part name="GET_CommercialCreditCards_GET_Default" xmlns:q16="http://laegler.com/openbanking/soap/model" element="q16:GET_CommercialCreditCards_GET_Default" />
  </message>
  <message name="GET_Atms_GET_InputMessage">
    <part name="GET_Atms_GET_InputMessage" xmlns:q17="http://laegler.com/openbanking/soap/model" element="q17:GET_Atms_GET_InputMessage" />
  </message>
  <message name="GET_Atms_GET_OutputMessage">
    <part name="GET_Atms_GET_OutputMessage" xmlns:q18="http://laegler.com/openbanking/soap/model" element="q18:GET_Atms_GET_OutputMessage" />
  </message>
  <message name="GET_Atms_GET_400">
    <part name="GET_Atms_GET_400" xmlns:q19="http://laegler.com/openbanking/soap/model" element="q19:GET_Atms_GET_400" />
  </message>
  <message name="GET_Atms_GET_408">
    <part name="GET_Atms_GET_408" xmlns:q20="http://laegler.com/openbanking/soap/model" element="q20:GET_Atms_GET_408" />
  </message>
  <message name="GET_Atms_GET_429">
    <part name="GET_Atms_GET_429" xmlns:q21="http://laegler.com/openbanking/soap/model" element="q21:GET_Atms_GET_429" />
  </message>
  <message name="GET_Atms_GET_500">
    <part name="GET_Atms_GET_500" xmlns:q22="http://laegler.com/openbanking/soap/model" element="q22:GET_Atms_GET_500" />
  </message>
  <message name="GET_Atms_GET_503">
    <part name="GET_Atms_GET_503" xmlns:q23="http://laegler.com/openbanking/soap/model" element="q23:GET_Atms_GET_503" />
  </message>
  <message name="GET_Atms_GET_Default">
    <part name="GET_Atms_GET_Default" xmlns:q24="http://laegler.com/openbanking/soap/model" element="q24:GET_Atms_GET_Default" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_InputMessage">
    <part name="GET_PersonalCurrentAccounts_GET_InputMessage" xmlns:q25="http://laegler.com/openbanking/soap/model" element="q25:GET_PersonalCurrentAccounts_GET_InputMessage" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_OutputMessage">
    <part name="GET_PersonalCurrentAccounts_GET_OutputMessage" xmlns:q26="http://laegler.com/openbanking/soap/model" element="q26:GET_PersonalCurrentAccounts_GET_OutputMessage" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_400">
    <part name="GET_PersonalCurrentAccounts_GET_400" xmlns:q27="http://laegler.com/openbanking/soap/model" element="q27:GET_PersonalCurrentAccounts_GET_400" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_408">
    <part name="GET_PersonalCurrentAccounts_GET_408" xmlns:q28="http://laegler.com/openbanking/soap/model" element="q28:GET_PersonalCurrentAccounts_GET_408" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_429">
    <part name="GET_PersonalCurrentAccounts_GET_429" xmlns:q29="http://laegler.com/openbanking/soap/model" element="q29:GET_PersonalCurrentAccounts_GET_429" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_500">
    <part name="GET_PersonalCurrentAccounts_GET_500" xmlns:q30="http://laegler.com/openbanking/soap/model" element="q30:GET_PersonalCurrentAccounts_GET_500" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_503">
    <part name="GET_PersonalCurrentAccounts_GET_503" xmlns:q31="http://laegler.com/openbanking/soap/model" element="q31:GET_PersonalCurrentAccounts_GET_503" />
  </message>
  <message name="GET_PersonalCurrentAccounts_GET_Default">
    <part name="GET_PersonalCurrentAccounts_GET_Default" xmlns:q32="http://laegler.com/openbanking/soap/model" element="q32:GET_PersonalCurrentAccounts_GET_Default" />
  </message>
  <message name="GET_Branches_GET_InputMessage">
    <part name="GET_Branches_GET_InputMessage" xmlns:q33="http://laegler.com/openbanking/soap/model" element="q33:GET_Branches_GET_InputMessage" />
  </message>
  <message name="GET_Branches_GET_OutputMessage">
    <part name="GET_Branches_GET_OutputMessage" xmlns:q34="http://laegler.com/openbanking/soap/model" element="q34:GET_Branches_GET_OutputMessage" />
  </message>
  <message name="GET_Branches_GET_400">
    <part name="GET_Branches_GET_400" xmlns:q35="http://laegler.com/openbanking/soap/model" element="q35:GET_Branches_GET_400" />
  </message>
  <message name="GET_Branches_GET_408">
    <part name="GET_Branches_GET_408" xmlns:q36="http://laegler.com/openbanking/soap/model" element="q36:GET_Branches_GET_408" />
  </message>
  <message name="GET_Branches_GET_429">
    <part name="GET_Branches_GET_429" xmlns:q37="http://laegler.com/openbanking/soap/model" element="q37:GET_Branches_GET_429" />
  </message>
  <message name="GET_Branches_GET_500">
    <part name="GET_Branches_GET_500" xmlns:q38="http://laegler.com/openbanking/soap/model" element="q38:GET_Branches_GET_500" />
  </message>
  <message name="GET_Branches_GET_503">
    <part name="GET_Branches_GET_503" xmlns:q39="http://laegler.com/openbanking/soap/model" element="q39:GET_Branches_GET_503" />
  </message>
  <message name="GET_Branches_GET_Default">
    <part name="GET_Branches_GET_Default" xmlns:q40="http://laegler.com/openbanking/soap/model" element="q40:GET_Branches_GET_Default" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_InputMessage">
    <part name="GET_BusinessCurrentAccounts_GET_InputMessage" xmlns:q41="http://laegler.com/openbanking/soap/model" element="q41:GET_BusinessCurrentAccounts_GET_InputMessage" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_OutputMessage">
    <part name="GET_BusinessCurrentAccounts_GET_OutputMessage" xmlns:q42="http://laegler.com/openbanking/soap/model" element="q42:GET_BusinessCurrentAccounts_GET_OutputMessage" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_400">
    <part name="GET_BusinessCurrentAccounts_GET_400" xmlns:q43="http://laegler.com/openbanking/soap/model" element="q43:GET_BusinessCurrentAccounts_GET_400" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_408">
    <part name="GET_BusinessCurrentAccounts_GET_408" xmlns:q44="http://laegler.com/openbanking/soap/model" element="q44:GET_BusinessCurrentAccounts_GET_408" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_429">
    <part name="GET_BusinessCurrentAccounts_GET_429" xmlns:q45="http://laegler.com/openbanking/soap/model" element="q45:GET_BusinessCurrentAccounts_GET_429" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_500">
    <part name="GET_BusinessCurrentAccounts_GET_500" xmlns:q46="http://laegler.com/openbanking/soap/model" element="q46:GET_BusinessCurrentAccounts_GET_500" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_503">
    <part name="GET_BusinessCurrentAccounts_GET_503" xmlns:q47="http://laegler.com/openbanking/soap/model" element="q47:GET_BusinessCurrentAccounts_GET_503" />
  </message>
  <message name="GET_BusinessCurrentAccounts_GET_Default">
    <part name="GET_BusinessCurrentAccounts_GET_Default" xmlns:q48="http://laegler.com/openbanking/soap/model" element="q48:GET_BusinessCurrentAccounts_GET_Default" />
  </message>
  <message name="GET_Searchforoneormoreresources_InputMessage">
    <part name="GET_Searchforoneormoreresources_InputMessage" xmlns:q49="http://laegler.com/openbanking/soap/model" element="q49:GET_Searchforoneormoreresources_InputMessage" />
  </message>
  <message name="GET_Searchforoneormoreresources_OutputMessage">
    <part name="GET_Searchforoneormoreresources_OutputMessage" xmlns:q50="http://laegler.com/openbanking/soap/model" element="q50:GET_Searchforoneormoreresources_OutputMessage" />
  </message>
  <message name="GET_Searchforoneormoreresources_Default">
    <part name="GET_Searchforoneormoreresources_Default" xmlns:q51="http://laegler.com/openbanking/soap/model" element="q51:GET_Searchforoneormoreresources_Default" />
  </message>
  <message name="POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
    <part name="POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" xmlns:q52="http://laegler.com/openbanking/soap/model" element="q52:POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
  </message>
  <message name="POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
    <part name="POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" xmlns:q53="http://laegler.com/openbanking/soap/model" element="q53:POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" />
  </message>
  <message name="POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
    <part name="POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q54="http://laegler.com/openbanking/soap/model" element="q54:POST_SearchforoneormoreresourcesusingHTTPPOST_Default" />
  </message>
  <message name="GET_Retrievetheresource_InputMessage">
    <part name="GET_Retrievetheresource_InputMessage" xmlns:q55="http://laegler.com/openbanking/soap/model" element="q55:GET_Retrievetheresource_InputMessage" />
  </message>
  <message name="GET_Retrievetheresource_OutputMessage">
    <part name="GET_Retrievetheresource_OutputMessage" xmlns:q56="http://laegler.com/openbanking/soap/model" element="q56:GET_Retrievetheresource_OutputMessage" />
  </message>
  <message name="GET_Retrievetheresource_Default">
    <part name="GET_Retrievetheresource_Default" xmlns:q57="http://laegler.com/openbanking/soap/model" element="q57:GET_Retrievetheresource_Default" />
  </message>
  <message name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage">
    <part name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage" xmlns:q58="http://laegler.com/openbanking/soap/model" element="q58:OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage" />
  </message>
  <message name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage">
    <part name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage" xmlns:q59="http://laegler.com/openbanking/soap/model" element="q59:OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage" />
  </message>
  <message name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default">
    <part name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default" xmlns:q60="http://laegler.com/openbanking/soap/model" element="q60:OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default" />
  </message>
  <message name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
    <part name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" xmlns:q61="http://laegler.com/openbanking/soap/model" element="q61:OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
  </message>
  <message name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
    <part name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" xmlns:q62="http://laegler.com/openbanking/soap/model" element="q62:OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" />
  </message>
  <message name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
    <part name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q63="http://laegler.com/openbanking/soap/model" element="q63:OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" />
  </message>
  <message name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage">
    <part name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage" xmlns:q64="http://laegler.com/openbanking/soap/model" element="q64:OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage" />
  </message>
  <message name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage">
    <part name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage" xmlns:q65="http://laegler.com/openbanking/soap/model" element="q65:OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage" />
  </message>
  <message name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default">
    <part name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default" xmlns:q66="http://laegler.com/openbanking/soap/model" element="q66:OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default" />
  </message>
  <message name="OBAuthorities_GET_Searchforoneormoreresources_InputMessage">
    <part name="OBAuthorities_GET_Searchforoneormoreresources_InputMessage" xmlns:q67="http://laegler.com/openbanking/soap/model" element="q67:OBAuthorities_GET_Searchforoneormoreresources_InputMessage" />
  </message>
  <message name="OBAuthorities_GET_Searchforoneormoreresources_OutputMessage">
    <part name="OBAuthorities_GET_Searchforoneormoreresources_OutputMessage" xmlns:q68="http://laegler.com/openbanking/soap/model" element="q68:OBAuthorities_GET_Searchforoneormoreresources_OutputMessage" />
  </message>
  <message name="OBAuthorities_GET_Searchforoneormoreresources_Default">
    <part name="OBAuthorities_GET_Searchforoneormoreresources_Default" xmlns:q69="http://laegler.com/openbanking/soap/model" element="q69:OBAuthorities_GET_Searchforoneormoreresources_Default" />
  </message>
  <message name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
    <part name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" xmlns:q70="http://laegler.com/openbanking/soap/model" element="q70:OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
  </message>
  <message name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
    <part name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" xmlns:q71="http://laegler.com/openbanking/soap/model" element="q71:OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" />
  </message>
  <message name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
    <part name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q72="http://laegler.com/openbanking/soap/model" element="q72:OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" />
  </message>
  <message name="OBAuthorities_GET_Retrievetheresource_InputMessage">
    <part name="OBAuthorities_GET_Retrievetheresource_InputMessage" xmlns:q73="http://laegler.com/openbanking/soap/model" element="q73:OBAuthorities_GET_Retrievetheresource_InputMessage" />
  </message>
  <message name="OBAuthorities_GET_Retrievetheresource_OutputMessage">
    <part name="OBAuthorities_GET_Retrievetheresource_OutputMessage" xmlns:q74="http://laegler.com/openbanking/soap/model" element="q74:OBAuthorities_GET_Retrievetheresource_OutputMessage" />
  </message>
  <message name="OBAuthorities_GET_Retrievetheresource_Default">
    <part name="OBAuthorities_GET_Retrievetheresource_Default" xmlns:q75="http://laegler.com/openbanking/soap/model" element="q75:OBAuthorities_GET_Retrievetheresource_Default" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage">
    <part name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage" xmlns:q76="http://laegler.com/openbanking/soap/model" element="q76:OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage">
    <part name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage" xmlns:q77="http://laegler.com/openbanking/soap/model" element="q77:OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default">
    <part name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default" xmlns:q78="http://laegler.com/openbanking/soap/model" element="q78:OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage">
    <part name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" xmlns:q79="http://laegler.com/openbanking/soap/model" element="q79:OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
    <part name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" xmlns:q80="http://laegler.com/openbanking/soap/model" element="q80:OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
    <part name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q81="http://laegler.com/openbanking/soap/model" element="q81:OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage">
    <part name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage" xmlns:q82="http://laegler.com/openbanking/soap/model" element="q82:OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage">
    <part name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage" xmlns:q83="http://laegler.com/openbanking/soap/model" element="q83:OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage" />
  </message>
  <message name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default">
    <part name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default" xmlns:q84="http://laegler.com/openbanking/soap/model" element="q84:OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default" />
  </message>
  <message name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage">
    <part name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage" xmlns:q85="http://laegler.com/openbanking/soap/model" element="q85:POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage" />
  </message>
  <message name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage">
    <part name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage" xmlns:q86="http://laegler.com/openbanking/soap/model" element="q86:POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage" />
  </message>
  <message name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_400">
    <part name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_400" xmlns:q87="http://laegler.com/openbanking/soap/model" element="q87:POST_RegisteraclientbywayofaSoftwareStatementAssertion_400" />
  </message>
  <message name="DELETE_DeleteaclientbywayofClientID_InputMessage">
    <part name="DELETE_DeleteaclientbywayofClientID_InputMessage" xmlns:q88="http://laegler.com/openbanking/soap/model" element="q88:DELETE_DeleteaclientbywayofClientID_InputMessage" />
  </message>
  <message name="DELETE_DeleteaclientbywayofClientID_OutputMessage">
    <part name="DELETE_DeleteaclientbywayofClientID_OutputMessage" xmlns:q89="http://laegler.com/openbanking/soap/model" element="q89:DELETE_DeleteaclientbywayofClientID_OutputMessage" />
  </message>
  <message name="DELETE_DeleteaclientbywayofClientID_401">
    <part name="DELETE_DeleteaclientbywayofClientID_401" xmlns:q90="http://laegler.com/openbanking/soap/model" element="q90:DELETE_DeleteaclientbywayofClientID_401" />
  </message>
  <message name="DELETE_DeleteaclientbywayofClientID_403">
    <part name="DELETE_DeleteaclientbywayofClientID_403" xmlns:q91="http://laegler.com/openbanking/soap/model" element="q91:DELETE_DeleteaclientbywayofClientID_403" />
  </message>
  <message name="DELETE_DeleteaclientbywayofClientID_405">
    <part name="DELETE_DeleteaclientbywayofClientID_405" xmlns:q92="http://laegler.com/openbanking/soap/model" element="q92:DELETE_DeleteaclientbywayofClientID_405" />
  </message>
  <message name="GET_GetaclientbywayofClientID_InputMessage">
    <part name="GET_GetaclientbywayofClientID_InputMessage" xmlns:q93="http://laegler.com/openbanking/soap/model" element="q93:GET_GetaclientbywayofClientID_InputMessage" />
  </message>
  <message name="GET_GetaclientbywayofClientID_OutputMessage">
    <part name="GET_GetaclientbywayofClientID_OutputMessage" xmlns:q94="http://laegler.com/openbanking/soap/model" element="q94:GET_GetaclientbywayofClientID_OutputMessage" />
  </message>
  <message name="GET_GetaclientbywayofClientID_401">
    <part name="GET_GetaclientbywayofClientID_401" xmlns:q95="http://laegler.com/openbanking/soap/model" element="q95:GET_GetaclientbywayofClientID_401" />
  </message>
  <message name="GET_GetaclientbywayofClientID_403">
    <part name="GET_GetaclientbywayofClientID_403" xmlns:q96="http://laegler.com/openbanking/soap/model" element="q96:GET_GetaclientbywayofClientID_403" />
  </message>
  <message name="PUT_UpdateaclientbywayofClientID_InputMessage">
    <part name="PUT_UpdateaclientbywayofClientID_InputMessage" xmlns:q97="http://laegler.com/openbanking/soap/model" element="q97:PUT_UpdateaclientbywayofClientID_InputMessage" />
  </message>
  <message name="PUT_UpdateaclientbywayofClientID_OutputMessage">
    <part name="PUT_UpdateaclientbywayofClientID_OutputMessage" xmlns:q98="http://laegler.com/openbanking/soap/model" element="q98:PUT_UpdateaclientbywayofClientID_OutputMessage" />
  </message>
  <message name="PUT_UpdateaclientbywayofClientID_400">
    <part name="PUT_UpdateaclientbywayofClientID_400" xmlns:q99="http://laegler.com/openbanking/soap/model" element="q99:PUT_UpdateaclientbywayofClientID_400" />
  </message>
  <message name="PUT_UpdateaclientbywayofClientID_401">
    <part name="PUT_UpdateaclientbywayofClientID_401" xmlns:q100="http://laegler.com/openbanking/soap/model" element="q100:PUT_UpdateaclientbywayofClientID_401" />
  </message>
  <message name="PUT_UpdateaclientbywayofClientID_403">
    <part name="PUT_UpdateaclientbywayofClientID_403" xmlns:q101="http://laegler.com/openbanking/soap/model" element="q101:PUT_UpdateaclientbywayofClientID_403" />
  </message>
  <message name="GET_ReadallcallbackURLs_InputMessage">
    <part name="GET_ReadallcallbackURLs_InputMessage" xmlns:q102="http://laegler.com/openbanking/soap/model" element="q102:GET_ReadallcallbackURLs_InputMessage" />
  </message>
  <message name="GET_ReadallcallbackURLs_OutputMessage">
    <part name="GET_ReadallcallbackURLs_OutputMessage" xmlns:q103="http://laegler.com/openbanking/soap/model" element="q103:GET_ReadallcallbackURLs_OutputMessage" />
  </message>
  <message name="GET_ReadallcallbackURLs_400">
    <part name="GET_ReadallcallbackURLs_400" xmlns:q104="http://laegler.com/openbanking/soap/model" element="q104:GET_ReadallcallbackURLs_400" />
  </message>
  <message name="GET_ReadallcallbackURLs_401">
    <part name="GET_ReadallcallbackURLs_401" xmlns:q105="http://laegler.com/openbanking/soap/model" element="q105:GET_ReadallcallbackURLs_401" />
  </message>
  <message name="GET_ReadallcallbackURLs_403">
    <part name="GET_ReadallcallbackURLs_403" xmlns:q106="http://laegler.com/openbanking/soap/model" element="q106:GET_ReadallcallbackURLs_403" />
  </message>
  <message name="GET_ReadallcallbackURLs_404">
    <part name="GET_ReadallcallbackURLs_404" xmlns:q107="http://laegler.com/openbanking/soap/model" element="q107:GET_ReadallcallbackURLs_404" />
  </message>
  <message name="GET_ReadallcallbackURLs_405">
    <part name="GET_ReadallcallbackURLs_405" xmlns:q108="http://laegler.com/openbanking/soap/model" element="q108:GET_ReadallcallbackURLs_405" />
  </message>
  <message name="GET_ReadallcallbackURLs_406">
    <part name="GET_ReadallcallbackURLs_406" xmlns:q109="http://laegler.com/openbanking/soap/model" element="q109:GET_ReadallcallbackURLs_406" />
  </message>
  <message name="GET_ReadallcallbackURLs_429">
    <part name="GET_ReadallcallbackURLs_429" xmlns:q110="http://laegler.com/openbanking/soap/model" element="q110:GET_ReadallcallbackURLs_429" />
  </message>
  <message name="GET_ReadallcallbackURLs_500">
    <part name="GET_ReadallcallbackURLs_500" xmlns:q111="http://laegler.com/openbanking/soap/model" element="q111:GET_ReadallcallbackURLs_500" />
  </message>
  <message name="POST_CreateacallbackURL_InputMessage">
    <part name="POST_CreateacallbackURL_InputMessage" xmlns:q112="http://laegler.com/openbanking/soap/model" element="q112:POST_CreateacallbackURL_InputMessage" />
  </message>
  <message name="POST_CreateacallbackURL_OutputMessage">
    <part name="POST_CreateacallbackURL_OutputMessage" xmlns:q113="http://laegler.com/openbanking/soap/model" element="q113:POST_CreateacallbackURL_OutputMessage" />
  </message>
  <message name="POST_CreateacallbackURL_400">
    <part name="POST_CreateacallbackURL_400" xmlns:q114="http://laegler.com/openbanking/soap/model" element="q114:POST_CreateacallbackURL_400" />
  </message>
  <message name="POST_CreateacallbackURL_401">
    <part name="POST_CreateacallbackURL_401" xmlns:q115="http://laegler.com/openbanking/soap/model" element="q115:POST_CreateacallbackURL_401" />
  </message>
  <message name="POST_CreateacallbackURL_403">
    <part name="POST_CreateacallbackURL_403" xmlns:q116="http://laegler.com/openbanking/soap/model" element="q116:POST_CreateacallbackURL_403" />
  </message>
  <message name="POST_CreateacallbackURL_405">
    <part name="POST_CreateacallbackURL_405" xmlns:q117="http://laegler.com/openbanking/soap/model" element="q117:POST_CreateacallbackURL_405" />
  </message>
  <message name="POST_CreateacallbackURL_406">
    <part name="POST_CreateacallbackURL_406" xmlns:q118="http://laegler.com/openbanking/soap/model" element="q118:POST_CreateacallbackURL_406" />
  </message>
  <message name="POST_CreateacallbackURL_415">
    <part name="POST_CreateacallbackURL_415" xmlns:q119="http://laegler.com/openbanking/soap/model" element="q119:POST_CreateacallbackURL_415" />
  </message>
  <message name="POST_CreateacallbackURL_429">
    <part name="POST_CreateacallbackURL_429" xmlns:q120="http://laegler.com/openbanking/soap/model" element="q120:POST_CreateacallbackURL_429" />
  </message>
  <message name="POST_CreateacallbackURL_500">
    <part name="POST_CreateacallbackURL_500" xmlns:q121="http://laegler.com/openbanking/soap/model" element="q121:POST_CreateacallbackURL_500" />
  </message>
  <message name="DELETE_DeleteacallbackURI_InputMessage">
    <part name="DELETE_DeleteacallbackURI_InputMessage" xmlns:q122="http://laegler.com/openbanking/soap/model" element="q122:DELETE_DeleteacallbackURI_InputMessage" />
  </message>
  <message name="DELETE_DeleteacallbackURI_OutputMessage">
    <part name="DELETE_DeleteacallbackURI_OutputMessage" xmlns:q123="http://laegler.com/openbanking/soap/model" element="q123:DELETE_DeleteacallbackURI_OutputMessage" />
  </message>
  <message name="DELETE_DeleteacallbackURI_400">
    <part name="DELETE_DeleteacallbackURI_400" xmlns:q124="http://laegler.com/openbanking/soap/model" element="q124:DELETE_DeleteacallbackURI_400" />
  </message>
  <message name="DELETE_DeleteacallbackURI_401">
    <part name="DELETE_DeleteacallbackURI_401" xmlns:q125="http://laegler.com/openbanking/soap/model" element="q125:DELETE_DeleteacallbackURI_401" />
  </message>
  <message name="DELETE_DeleteacallbackURI_403">
    <part name="DELETE_DeleteacallbackURI_403" xmlns:q126="http://laegler.com/openbanking/soap/model" element="q126:DELETE_DeleteacallbackURI_403" />
  </message>
  <message name="DELETE_DeleteacallbackURI_404">
    <part name="DELETE_DeleteacallbackURI_404" xmlns:q127="http://laegler.com/openbanking/soap/model" element="q127:DELETE_DeleteacallbackURI_404" />
  </message>
  <message name="DELETE_DeleteacallbackURI_405">
    <part name="DELETE_DeleteacallbackURI_405" xmlns:q128="http://laegler.com/openbanking/soap/model" element="q128:DELETE_DeleteacallbackURI_405" />
  </message>
  <message name="DELETE_DeleteacallbackURI_406">
    <part name="DELETE_DeleteacallbackURI_406" xmlns:q129="http://laegler.com/openbanking/soap/model" element="q129:DELETE_DeleteacallbackURI_406" />
  </message>
  <message name="DELETE_DeleteacallbackURI_429">
    <part name="DELETE_DeleteacallbackURI_429" xmlns:q130="http://laegler.com/openbanking/soap/model" element="q130:DELETE_DeleteacallbackURI_429" />
  </message>
  <message name="DELETE_DeleteacallbackURI_500">
    <part name="DELETE_DeleteacallbackURI_500" xmlns:q131="http://laegler.com/openbanking/soap/model" element="q131:DELETE_DeleteacallbackURI_500" />
  </message>
  <message name="PUT_AmendacallbackURI_InputMessage">
    <part name="PUT_AmendacallbackURI_InputMessage" xmlns:q132="http://laegler.com/openbanking/soap/model" element="q132:PUT_AmendacallbackURI_InputMessage" />
  </message>
  <message name="PUT_AmendacallbackURI_OutputMessage">
    <part name="PUT_AmendacallbackURI_OutputMessage" xmlns:q133="http://laegler.com/openbanking/soap/model" element="q133:PUT_AmendacallbackURI_OutputMessage" />
  </message>
  <message name="PUT_AmendacallbackURI_400">
    <part name="PUT_AmendacallbackURI_400" xmlns:q134="http://laegler.com/openbanking/soap/model" element="q134:PUT_AmendacallbackURI_400" />
  </message>
  <message name="PUT_AmendacallbackURI_401">
    <part name="PUT_AmendacallbackURI_401" xmlns:q135="http://laegler.com/openbanking/soap/model" element="q135:PUT_AmendacallbackURI_401" />
  </message>
  <message name="PUT_AmendacallbackURI_403">
    <part name="PUT_AmendacallbackURI_403" xmlns:q136="http://laegler.com/openbanking/soap/model" element="q136:PUT_AmendacallbackURI_403" />
  </message>
  <message name="PUT_AmendacallbackURI_404">
    <part name="PUT_AmendacallbackURI_404" xmlns:q137="http://laegler.com/openbanking/soap/model" element="q137:PUT_AmendacallbackURI_404" />
  </message>
  <message name="PUT_AmendacallbackURI_405">
    <part name="PUT_AmendacallbackURI_405" xmlns:q138="http://laegler.com/openbanking/soap/model" element="q138:PUT_AmendacallbackURI_405" />
  </message>
  <message name="PUT_AmendacallbackURI_406">
    <part name="PUT_AmendacallbackURI_406" xmlns:q139="http://laegler.com/openbanking/soap/model" element="q139:PUT_AmendacallbackURI_406" />
  </message>
  <message name="PUT_AmendacallbackURI_415">
    <part name="PUT_AmendacallbackURI_415" xmlns:q140="http://laegler.com/openbanking/soap/model" element="q140:PUT_AmendacallbackURI_415" />
  </message>
  <message name="PUT_AmendacallbackURI_429">
    <part name="PUT_AmendacallbackURI_429" xmlns:q141="http://laegler.com/openbanking/soap/model" element="q141:PUT_AmendacallbackURI_429" />
  </message>
  <message name="PUT_AmendacallbackURI_500">
    <part name="PUT_AmendacallbackURI_500" xmlns:q142="http://laegler.com/openbanking/soap/model" element="q142:PUT_AmendacallbackURI_500" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_InputMessage">
    <part name="POST_CreateFundsConfirmationConsents_InputMessage" xmlns:q143="http://laegler.com/openbanking/soap/model" element="q143:POST_CreateFundsConfirmationConsents_InputMessage" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_OutputMessage">
    <part name="POST_CreateFundsConfirmationConsents_OutputMessage" xmlns:q144="http://laegler.com/openbanking/soap/model" element="q144:POST_CreateFundsConfirmationConsents_OutputMessage" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_400">
    <part name="POST_CreateFundsConfirmationConsents_400" xmlns:q145="http://laegler.com/openbanking/soap/model" element="q145:POST_CreateFundsConfirmationConsents_400" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_401">
    <part name="POST_CreateFundsConfirmationConsents_401" xmlns:q146="http://laegler.com/openbanking/soap/model" element="q146:POST_CreateFundsConfirmationConsents_401" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_403">
    <part name="POST_CreateFundsConfirmationConsents_403" xmlns:q147="http://laegler.com/openbanking/soap/model" element="q147:POST_CreateFundsConfirmationConsents_403" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_404">
    <part name="POST_CreateFundsConfirmationConsents_404" xmlns:q148="http://laegler.com/openbanking/soap/model" element="q148:POST_CreateFundsConfirmationConsents_404" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_405">
    <part name="POST_CreateFundsConfirmationConsents_405" xmlns:q149="http://laegler.com/openbanking/soap/model" element="q149:POST_CreateFundsConfirmationConsents_405" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_406">
    <part name="POST_CreateFundsConfirmationConsents_406" xmlns:q150="http://laegler.com/openbanking/soap/model" element="q150:POST_CreateFundsConfirmationConsents_406" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_429">
    <part name="POST_CreateFundsConfirmationConsents_429" xmlns:q151="http://laegler.com/openbanking/soap/model" element="q151:POST_CreateFundsConfirmationConsents_429" />
  </message>
  <message name="POST_CreateFundsConfirmationConsents_500">
    <part name="POST_CreateFundsConfirmationConsents_500" xmlns:q152="http://laegler.com/openbanking/soap/model" element="q152:POST_CreateFundsConfirmationConsents_500" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage" xmlns:q153="http://laegler.com/openbanking/soap/model" element="q153:DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage" xmlns:q154="http://laegler.com/openbanking/soap/model" element="q154:DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_400">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_400" xmlns:q155="http://laegler.com/openbanking/soap/model" element="q155:DELETE_DeleteFundsConfirmationConsentsConsentId_400" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_401">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_401" xmlns:q156="http://laegler.com/openbanking/soap/model" element="q156:DELETE_DeleteFundsConfirmationConsentsConsentId_401" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_403">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_403" xmlns:q157="http://laegler.com/openbanking/soap/model" element="q157:DELETE_DeleteFundsConfirmationConsentsConsentId_403" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_404">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_404" xmlns:q158="http://laegler.com/openbanking/soap/model" element="q158:DELETE_DeleteFundsConfirmationConsentsConsentId_404" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_405">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_405" xmlns:q159="http://laegler.com/openbanking/soap/model" element="q159:DELETE_DeleteFundsConfirmationConsentsConsentId_405" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_406">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_406" xmlns:q160="http://laegler.com/openbanking/soap/model" element="q160:DELETE_DeleteFundsConfirmationConsentsConsentId_406" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_429">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_429" xmlns:q161="http://laegler.com/openbanking/soap/model" element="q161:DELETE_DeleteFundsConfirmationConsentsConsentId_429" />
  </message>
  <message name="DELETE_DeleteFundsConfirmationConsentsConsentId_500">
    <part name="DELETE_DeleteFundsConfirmationConsentsConsentId_500" xmlns:q162="http://laegler.com/openbanking/soap/model" element="q162:DELETE_DeleteFundsConfirmationConsentsConsentId_500" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_InputMessage">
    <part name="GET_GetFundsConfirmationConsentsConsentId_InputMessage" xmlns:q163="http://laegler.com/openbanking/soap/model" element="q163:GET_GetFundsConfirmationConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_OutputMessage">
    <part name="GET_GetFundsConfirmationConsentsConsentId_OutputMessage" xmlns:q164="http://laegler.com/openbanking/soap/model" element="q164:GET_GetFundsConfirmationConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_400">
    <part name="GET_GetFundsConfirmationConsentsConsentId_400" xmlns:q165="http://laegler.com/openbanking/soap/model" element="q165:GET_GetFundsConfirmationConsentsConsentId_400" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_401">
    <part name="GET_GetFundsConfirmationConsentsConsentId_401" xmlns:q166="http://laegler.com/openbanking/soap/model" element="q166:GET_GetFundsConfirmationConsentsConsentId_401" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_403">
    <part name="GET_GetFundsConfirmationConsentsConsentId_403" xmlns:q167="http://laegler.com/openbanking/soap/model" element="q167:GET_GetFundsConfirmationConsentsConsentId_403" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_404">
    <part name="GET_GetFundsConfirmationConsentsConsentId_404" xmlns:q168="http://laegler.com/openbanking/soap/model" element="q168:GET_GetFundsConfirmationConsentsConsentId_404" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_405">
    <part name="GET_GetFundsConfirmationConsentsConsentId_405" xmlns:q169="http://laegler.com/openbanking/soap/model" element="q169:GET_GetFundsConfirmationConsentsConsentId_405" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_406">
    <part name="GET_GetFundsConfirmationConsentsConsentId_406" xmlns:q170="http://laegler.com/openbanking/soap/model" element="q170:GET_GetFundsConfirmationConsentsConsentId_406" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_429">
    <part name="GET_GetFundsConfirmationConsentsConsentId_429" xmlns:q171="http://laegler.com/openbanking/soap/model" element="q171:GET_GetFundsConfirmationConsentsConsentId_429" />
  </message>
  <message name="GET_GetFundsConfirmationConsentsConsentId_500">
    <part name="GET_GetFundsConfirmationConsentsConsentId_500" xmlns:q172="http://laegler.com/openbanking/soap/model" element="q172:GET_GetFundsConfirmationConsentsConsentId_500" />
  </message>
  <message name="POST_CreateFundsConfirmations_InputMessage">
    <part name="POST_CreateFundsConfirmations_InputMessage" xmlns:q173="http://laegler.com/openbanking/soap/model" element="q173:POST_CreateFundsConfirmations_InputMessage" />
  </message>
  <message name="POST_CreateFundsConfirmations_OutputMessage">
    <part name="POST_CreateFundsConfirmations_OutputMessage" xmlns:q174="http://laegler.com/openbanking/soap/model" element="q174:POST_CreateFundsConfirmations_OutputMessage" />
  </message>
  <message name="POST_CreateFundsConfirmations_400">
    <part name="POST_CreateFundsConfirmations_400" xmlns:q175="http://laegler.com/openbanking/soap/model" element="q175:POST_CreateFundsConfirmations_400" />
  </message>
  <message name="POST_CreateFundsConfirmations_401">
    <part name="POST_CreateFundsConfirmations_401" xmlns:q176="http://laegler.com/openbanking/soap/model" element="q176:POST_CreateFundsConfirmations_401" />
  </message>
  <message name="POST_CreateFundsConfirmations_403">
    <part name="POST_CreateFundsConfirmations_403" xmlns:q177="http://laegler.com/openbanking/soap/model" element="q177:POST_CreateFundsConfirmations_403" />
  </message>
  <message name="POST_CreateFundsConfirmations_404">
    <part name="POST_CreateFundsConfirmations_404" xmlns:q178="http://laegler.com/openbanking/soap/model" element="q178:POST_CreateFundsConfirmations_404" />
  </message>
  <message name="POST_CreateFundsConfirmations_405">
    <part name="POST_CreateFundsConfirmations_405" xmlns:q179="http://laegler.com/openbanking/soap/model" element="q179:POST_CreateFundsConfirmations_405" />
  </message>
  <message name="POST_CreateFundsConfirmations_406">
    <part name="POST_CreateFundsConfirmations_406" xmlns:q180="http://laegler.com/openbanking/soap/model" element="q180:POST_CreateFundsConfirmations_406" />
  </message>
  <message name="POST_CreateFundsConfirmations_429">
    <part name="POST_CreateFundsConfirmations_429" xmlns:q181="http://laegler.com/openbanking/soap/model" element="q181:POST_CreateFundsConfirmations_429" />
  </message>
  <message name="POST_CreateFundsConfirmations_500">
    <part name="POST_CreateFundsConfirmations_500" xmlns:q182="http://laegler.com/openbanking/soap/model" element="q182:POST_CreateFundsConfirmations_500" />
  </message>
  <message name="POST_CreateEventNotification_InputMessage">
    <part name="POST_CreateEventNotification_InputMessage" xmlns:q183="http://laegler.com/openbanking/soap/model" element="q183:POST_CreateEventNotification_InputMessage" />
  </message>
  <message name="POST_CreateEventNotification_OutputMessage">
    <part name="POST_CreateEventNotification_OutputMessage" xmlns:q184="http://laegler.com/openbanking/soap/model" element="q184:POST_CreateEventNotification_OutputMessage" />
  </message>
  <message name="GET_GetEventSubscriptions_InputMessage">
    <part name="GET_GetEventSubscriptions_InputMessage" xmlns:q185="http://laegler.com/openbanking/soap/model" element="q185:GET_GetEventSubscriptions_InputMessage" />
  </message>
  <message name="GET_GetEventSubscriptions_OutputMessage">
    <part name="GET_GetEventSubscriptions_OutputMessage" xmlns:q186="http://laegler.com/openbanking/soap/model" element="q186:GET_GetEventSubscriptions_OutputMessage" />
  </message>
  <message name="GET_GetEventSubscriptions_400">
    <part name="GET_GetEventSubscriptions_400" xmlns:q187="http://laegler.com/openbanking/soap/model" element="q187:GET_GetEventSubscriptions_400" />
  </message>
  <message name="GET_GetEventSubscriptions_401">
    <part name="GET_GetEventSubscriptions_401" xmlns:q188="http://laegler.com/openbanking/soap/model" element="q188:GET_GetEventSubscriptions_401" />
  </message>
  <message name="GET_GetEventSubscriptions_403">
    <part name="GET_GetEventSubscriptions_403" xmlns:q189="http://laegler.com/openbanking/soap/model" element="q189:GET_GetEventSubscriptions_403" />
  </message>
  <message name="GET_GetEventSubscriptions_404">
    <part name="GET_GetEventSubscriptions_404" xmlns:q190="http://laegler.com/openbanking/soap/model" element="q190:GET_GetEventSubscriptions_404" />
  </message>
  <message name="GET_GetEventSubscriptions_405">
    <part name="GET_GetEventSubscriptions_405" xmlns:q191="http://laegler.com/openbanking/soap/model" element="q191:GET_GetEventSubscriptions_405" />
  </message>
  <message name="GET_GetEventSubscriptions_406">
    <part name="GET_GetEventSubscriptions_406" xmlns:q192="http://laegler.com/openbanking/soap/model" element="q192:GET_GetEventSubscriptions_406" />
  </message>
  <message name="GET_GetEventSubscriptions_429">
    <part name="GET_GetEventSubscriptions_429" xmlns:q193="http://laegler.com/openbanking/soap/model" element="q193:GET_GetEventSubscriptions_429" />
  </message>
  <message name="GET_GetEventSubscriptions_500">
    <part name="GET_GetEventSubscriptions_500" xmlns:q194="http://laegler.com/openbanking/soap/model" element="q194:GET_GetEventSubscriptions_500" />
  </message>
  <message name="POST_CreateEventSubscriptions_InputMessage">
    <part name="POST_CreateEventSubscriptions_InputMessage" xmlns:q195="http://laegler.com/openbanking/soap/model" element="q195:POST_CreateEventSubscriptions_InputMessage" />
  </message>
  <message name="POST_CreateEventSubscriptions_OutputMessage">
    <part name="POST_CreateEventSubscriptions_OutputMessage" xmlns:q196="http://laegler.com/openbanking/soap/model" element="q196:POST_CreateEventSubscriptions_OutputMessage" />
  </message>
  <message name="POST_CreateEventSubscriptions_400">
    <part name="POST_CreateEventSubscriptions_400" xmlns:q197="http://laegler.com/openbanking/soap/model" element="q197:POST_CreateEventSubscriptions_400" />
  </message>
  <message name="POST_CreateEventSubscriptions_401">
    <part name="POST_CreateEventSubscriptions_401" xmlns:q198="http://laegler.com/openbanking/soap/model" element="q198:POST_CreateEventSubscriptions_401" />
  </message>
  <message name="POST_CreateEventSubscriptions_403">
    <part name="POST_CreateEventSubscriptions_403" xmlns:q199="http://laegler.com/openbanking/soap/model" element="q199:POST_CreateEventSubscriptions_403" />
  </message>
  <message name="POST_CreateEventSubscriptions_404">
    <part name="POST_CreateEventSubscriptions_404" xmlns:q200="http://laegler.com/openbanking/soap/model" element="q200:POST_CreateEventSubscriptions_404" />
  </message>
  <message name="POST_CreateEventSubscriptions_405">
    <part name="POST_CreateEventSubscriptions_405" xmlns:q201="http://laegler.com/openbanking/soap/model" element="q201:POST_CreateEventSubscriptions_405" />
  </message>
  <message name="POST_CreateEventSubscriptions_406">
    <part name="POST_CreateEventSubscriptions_406" xmlns:q202="http://laegler.com/openbanking/soap/model" element="q202:POST_CreateEventSubscriptions_406" />
  </message>
  <message name="POST_CreateEventSubscriptions_429">
    <part name="POST_CreateEventSubscriptions_429" xmlns:q203="http://laegler.com/openbanking/soap/model" element="q203:POST_CreateEventSubscriptions_429" />
  </message>
  <message name="POST_CreateEventSubscriptions_500">
    <part name="POST_CreateEventSubscriptions_500" xmlns:q204="http://laegler.com/openbanking/soap/model" element="q204:POST_CreateEventSubscriptions_500" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage" xmlns:q205="http://laegler.com/openbanking/soap/model" element="q205:DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage" xmlns:q206="http://laegler.com/openbanking/soap/model" element="q206:DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_400">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_400" xmlns:q207="http://laegler.com/openbanking/soap/model" element="q207:DELETE_DeleteEventSubscriptionsEventSubscriptionId_400" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_401">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_401" xmlns:q208="http://laegler.com/openbanking/soap/model" element="q208:DELETE_DeleteEventSubscriptionsEventSubscriptionId_401" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_403">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_403" xmlns:q209="http://laegler.com/openbanking/soap/model" element="q209:DELETE_DeleteEventSubscriptionsEventSubscriptionId_403" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_404">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_404" xmlns:q210="http://laegler.com/openbanking/soap/model" element="q210:DELETE_DeleteEventSubscriptionsEventSubscriptionId_404" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_405">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_405" xmlns:q211="http://laegler.com/openbanking/soap/model" element="q211:DELETE_DeleteEventSubscriptionsEventSubscriptionId_405" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_406">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_406" xmlns:q212="http://laegler.com/openbanking/soap/model" element="q212:DELETE_DeleteEventSubscriptionsEventSubscriptionId_406" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_429">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_429" xmlns:q213="http://laegler.com/openbanking/soap/model" element="q213:DELETE_DeleteEventSubscriptionsEventSubscriptionId_429" />
  </message>
  <message name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_500">
    <part name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_500" xmlns:q214="http://laegler.com/openbanking/soap/model" element="q214:DELETE_DeleteEventSubscriptionsEventSubscriptionId_500" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage" xmlns:q215="http://laegler.com/openbanking/soap/model" element="q215:PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage" xmlns:q216="http://laegler.com/openbanking/soap/model" element="q216:PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_400">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_400" xmlns:q217="http://laegler.com/openbanking/soap/model" element="q217:PUT_ChangeEventSubscriptionsEventSubscriptionId_400" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_401">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_401" xmlns:q218="http://laegler.com/openbanking/soap/model" element="q218:PUT_ChangeEventSubscriptionsEventSubscriptionId_401" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_403">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_403" xmlns:q219="http://laegler.com/openbanking/soap/model" element="q219:PUT_ChangeEventSubscriptionsEventSubscriptionId_403" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_404">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_404" xmlns:q220="http://laegler.com/openbanking/soap/model" element="q220:PUT_ChangeEventSubscriptionsEventSubscriptionId_404" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_405">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_405" xmlns:q221="http://laegler.com/openbanking/soap/model" element="q221:PUT_ChangeEventSubscriptionsEventSubscriptionId_405" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_406">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_406" xmlns:q222="http://laegler.com/openbanking/soap/model" element="q222:PUT_ChangeEventSubscriptionsEventSubscriptionId_406" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_429">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_429" xmlns:q223="http://laegler.com/openbanking/soap/model" element="q223:PUT_ChangeEventSubscriptionsEventSubscriptionId_429" />
  </message>
  <message name="PUT_ChangeEventSubscriptionsEventSubscriptionId_500">
    <part name="PUT_ChangeEventSubscriptionsEventSubscriptionId_500" xmlns:q224="http://laegler.com/openbanking/soap/model" element="q224:PUT_ChangeEventSubscriptionsEventSubscriptionId_500" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_InputMessage">
    <part name="POST_CreateDomesticPaymentConsents_InputMessage" xmlns:q225="http://laegler.com/openbanking/soap/model" element="q225:POST_CreateDomesticPaymentConsents_InputMessage" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_OutputMessage">
    <part name="POST_CreateDomesticPaymentConsents_OutputMessage" xmlns:q226="http://laegler.com/openbanking/soap/model" element="q226:POST_CreateDomesticPaymentConsents_OutputMessage" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_400">
    <part name="POST_CreateDomesticPaymentConsents_400" xmlns:q227="http://laegler.com/openbanking/soap/model" element="q227:POST_CreateDomesticPaymentConsents_400" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_401">
    <part name="POST_CreateDomesticPaymentConsents_401" xmlns:q228="http://laegler.com/openbanking/soap/model" element="q228:POST_CreateDomesticPaymentConsents_401" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_403">
    <part name="POST_CreateDomesticPaymentConsents_403" xmlns:q229="http://laegler.com/openbanking/soap/model" element="q229:POST_CreateDomesticPaymentConsents_403" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_404">
    <part name="POST_CreateDomesticPaymentConsents_404" xmlns:q230="http://laegler.com/openbanking/soap/model" element="q230:POST_CreateDomesticPaymentConsents_404" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_405">
    <part name="POST_CreateDomesticPaymentConsents_405" xmlns:q231="http://laegler.com/openbanking/soap/model" element="q231:POST_CreateDomesticPaymentConsents_405" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_406">
    <part name="POST_CreateDomesticPaymentConsents_406" xmlns:q232="http://laegler.com/openbanking/soap/model" element="q232:POST_CreateDomesticPaymentConsents_406" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_429">
    <part name="POST_CreateDomesticPaymentConsents_429" xmlns:q233="http://laegler.com/openbanking/soap/model" element="q233:POST_CreateDomesticPaymentConsents_429" />
  </message>
  <message name="POST_CreateDomesticPaymentConsents_500">
    <part name="POST_CreateDomesticPaymentConsents_500" xmlns:q234="http://laegler.com/openbanking/soap/model" element="q234:POST_CreateDomesticPaymentConsents_500" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_InputMessage">
    <part name="GET_GetDomesticPaymentConsentsConsentId_InputMessage" xmlns:q235="http://laegler.com/openbanking/soap/model" element="q235:GET_GetDomesticPaymentConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_OutputMessage">
    <part name="GET_GetDomesticPaymentConsentsConsentId_OutputMessage" xmlns:q236="http://laegler.com/openbanking/soap/model" element="q236:GET_GetDomesticPaymentConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_400">
    <part name="GET_GetDomesticPaymentConsentsConsentId_400" xmlns:q237="http://laegler.com/openbanking/soap/model" element="q237:GET_GetDomesticPaymentConsentsConsentId_400" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_401">
    <part name="GET_GetDomesticPaymentConsentsConsentId_401" xmlns:q238="http://laegler.com/openbanking/soap/model" element="q238:GET_GetDomesticPaymentConsentsConsentId_401" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_403">
    <part name="GET_GetDomesticPaymentConsentsConsentId_403" xmlns:q239="http://laegler.com/openbanking/soap/model" element="q239:GET_GetDomesticPaymentConsentsConsentId_403" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_404">
    <part name="GET_GetDomesticPaymentConsentsConsentId_404" xmlns:q240="http://laegler.com/openbanking/soap/model" element="q240:GET_GetDomesticPaymentConsentsConsentId_404" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_405">
    <part name="GET_GetDomesticPaymentConsentsConsentId_405" xmlns:q241="http://laegler.com/openbanking/soap/model" element="q241:GET_GetDomesticPaymentConsentsConsentId_405" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_406">
    <part name="GET_GetDomesticPaymentConsentsConsentId_406" xmlns:q242="http://laegler.com/openbanking/soap/model" element="q242:GET_GetDomesticPaymentConsentsConsentId_406" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_429">
    <part name="GET_GetDomesticPaymentConsentsConsentId_429" xmlns:q243="http://laegler.com/openbanking/soap/model" element="q243:GET_GetDomesticPaymentConsentsConsentId_429" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentId_500">
    <part name="GET_GetDomesticPaymentConsentsConsentId_500" xmlns:q244="http://laegler.com/openbanking/soap/model" element="q244:GET_GetDomesticPaymentConsentsConsentId_500" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage" xmlns:q245="http://laegler.com/openbanking/soap/model" element="q245:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage" xmlns:q246="http://laegler.com/openbanking/soap/model" element="q246:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400" xmlns:q247="http://laegler.com/openbanking/soap/model" element="q247:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401" xmlns:q248="http://laegler.com/openbanking/soap/model" element="q248:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403" xmlns:q249="http://laegler.com/openbanking/soap/model" element="q249:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404" xmlns:q250="http://laegler.com/openbanking/soap/model" element="q250:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405" xmlns:q251="http://laegler.com/openbanking/soap/model" element="q251:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406" xmlns:q252="http://laegler.com/openbanking/soap/model" element="q252:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429" xmlns:q253="http://laegler.com/openbanking/soap/model" element="q253:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429" />
  </message>
  <message name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500">
    <part name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500" xmlns:q254="http://laegler.com/openbanking/soap/model" element="q254:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500" />
  </message>
  <message name="POST_CreateDomesticPayments_InputMessage">
    <part name="POST_CreateDomesticPayments_InputMessage" xmlns:q255="http://laegler.com/openbanking/soap/model" element="q255:POST_CreateDomesticPayments_InputMessage" />
  </message>
  <message name="POST_CreateDomesticPayments_OutputMessage">
    <part name="POST_CreateDomesticPayments_OutputMessage" xmlns:q256="http://laegler.com/openbanking/soap/model" element="q256:POST_CreateDomesticPayments_OutputMessage" />
  </message>
  <message name="POST_CreateDomesticPayments_400">
    <part name="POST_CreateDomesticPayments_400" xmlns:q257="http://laegler.com/openbanking/soap/model" element="q257:POST_CreateDomesticPayments_400" />
  </message>
  <message name="POST_CreateDomesticPayments_401">
    <part name="POST_CreateDomesticPayments_401" xmlns:q258="http://laegler.com/openbanking/soap/model" element="q258:POST_CreateDomesticPayments_401" />
  </message>
  <message name="POST_CreateDomesticPayments_403">
    <part name="POST_CreateDomesticPayments_403" xmlns:q259="http://laegler.com/openbanking/soap/model" element="q259:POST_CreateDomesticPayments_403" />
  </message>
  <message name="POST_CreateDomesticPayments_404">
    <part name="POST_CreateDomesticPayments_404" xmlns:q260="http://laegler.com/openbanking/soap/model" element="q260:POST_CreateDomesticPayments_404" />
  </message>
  <message name="POST_CreateDomesticPayments_405">
    <part name="POST_CreateDomesticPayments_405" xmlns:q261="http://laegler.com/openbanking/soap/model" element="q261:POST_CreateDomesticPayments_405" />
  </message>
  <message name="POST_CreateDomesticPayments_406">
    <part name="POST_CreateDomesticPayments_406" xmlns:q262="http://laegler.com/openbanking/soap/model" element="q262:POST_CreateDomesticPayments_406" />
  </message>
  <message name="POST_CreateDomesticPayments_429">
    <part name="POST_CreateDomesticPayments_429" xmlns:q263="http://laegler.com/openbanking/soap/model" element="q263:POST_CreateDomesticPayments_429" />
  </message>
  <message name="POST_CreateDomesticPayments_500">
    <part name="POST_CreateDomesticPayments_500" xmlns:q264="http://laegler.com/openbanking/soap/model" element="q264:POST_CreateDomesticPayments_500" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_InputMessage">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_InputMessage" xmlns:q265="http://laegler.com/openbanking/soap/model" element="q265:GET_GetDomesticPaymentsDomesticPaymentId_InputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage" xmlns:q266="http://laegler.com/openbanking/soap/model" element="q266:GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_400">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_400" xmlns:q267="http://laegler.com/openbanking/soap/model" element="q267:GET_GetDomesticPaymentsDomesticPaymentId_400" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_401">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_401" xmlns:q268="http://laegler.com/openbanking/soap/model" element="q268:GET_GetDomesticPaymentsDomesticPaymentId_401" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_403">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_403" xmlns:q269="http://laegler.com/openbanking/soap/model" element="q269:GET_GetDomesticPaymentsDomesticPaymentId_403" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_404">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_404" xmlns:q270="http://laegler.com/openbanking/soap/model" element="q270:GET_GetDomesticPaymentsDomesticPaymentId_404" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_405">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_405" xmlns:q271="http://laegler.com/openbanking/soap/model" element="q271:GET_GetDomesticPaymentsDomesticPaymentId_405" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_406">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_406" xmlns:q272="http://laegler.com/openbanking/soap/model" element="q272:GET_GetDomesticPaymentsDomesticPaymentId_406" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_429">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_429" xmlns:q273="http://laegler.com/openbanking/soap/model" element="q273:GET_GetDomesticPaymentsDomesticPaymentId_429" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentId_500">
    <part name="GET_GetDomesticPaymentsDomesticPaymentId_500" xmlns:q274="http://laegler.com/openbanking/soap/model" element="q274:GET_GetDomesticPaymentsDomesticPaymentId_500" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_InputMessage">
    <part name="POST_CreateDomesticScheduledPaymentConsents_InputMessage" xmlns:q275="http://laegler.com/openbanking/soap/model" element="q275:POST_CreateDomesticScheduledPaymentConsents_InputMessage" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_OutputMessage">
    <part name="POST_CreateDomesticScheduledPaymentConsents_OutputMessage" xmlns:q276="http://laegler.com/openbanking/soap/model" element="q276:POST_CreateDomesticScheduledPaymentConsents_OutputMessage" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_400">
    <part name="POST_CreateDomesticScheduledPaymentConsents_400" xmlns:q277="http://laegler.com/openbanking/soap/model" element="q277:POST_CreateDomesticScheduledPaymentConsents_400" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_401">
    <part name="POST_CreateDomesticScheduledPaymentConsents_401" xmlns:q278="http://laegler.com/openbanking/soap/model" element="q278:POST_CreateDomesticScheduledPaymentConsents_401" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_403">
    <part name="POST_CreateDomesticScheduledPaymentConsents_403" xmlns:q279="http://laegler.com/openbanking/soap/model" element="q279:POST_CreateDomesticScheduledPaymentConsents_403" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_404">
    <part name="POST_CreateDomesticScheduledPaymentConsents_404" xmlns:q280="http://laegler.com/openbanking/soap/model" element="q280:POST_CreateDomesticScheduledPaymentConsents_404" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_405">
    <part name="POST_CreateDomesticScheduledPaymentConsents_405" xmlns:q281="http://laegler.com/openbanking/soap/model" element="q281:POST_CreateDomesticScheduledPaymentConsents_405" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_406">
    <part name="POST_CreateDomesticScheduledPaymentConsents_406" xmlns:q282="http://laegler.com/openbanking/soap/model" element="q282:POST_CreateDomesticScheduledPaymentConsents_406" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_429">
    <part name="POST_CreateDomesticScheduledPaymentConsents_429" xmlns:q283="http://laegler.com/openbanking/soap/model" element="q283:POST_CreateDomesticScheduledPaymentConsents_429" />
  </message>
  <message name="POST_CreateDomesticScheduledPaymentConsents_500">
    <part name="POST_CreateDomesticScheduledPaymentConsents_500" xmlns:q284="http://laegler.com/openbanking/soap/model" element="q284:POST_CreateDomesticScheduledPaymentConsents_500" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage" xmlns:q285="http://laegler.com/openbanking/soap/model" element="q285:GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage" xmlns:q286="http://laegler.com/openbanking/soap/model" element="q286:GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_400">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_400" xmlns:q287="http://laegler.com/openbanking/soap/model" element="q287:GET_GetDomesticScheduledPaymentConsentsConsentId_400" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_401">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_401" xmlns:q288="http://laegler.com/openbanking/soap/model" element="q288:GET_GetDomesticScheduledPaymentConsentsConsentId_401" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_403">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_403" xmlns:q289="http://laegler.com/openbanking/soap/model" element="q289:GET_GetDomesticScheduledPaymentConsentsConsentId_403" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_404">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_404" xmlns:q290="http://laegler.com/openbanking/soap/model" element="q290:GET_GetDomesticScheduledPaymentConsentsConsentId_404" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_405">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_405" xmlns:q291="http://laegler.com/openbanking/soap/model" element="q291:GET_GetDomesticScheduledPaymentConsentsConsentId_405" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_406">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_406" xmlns:q292="http://laegler.com/openbanking/soap/model" element="q292:GET_GetDomesticScheduledPaymentConsentsConsentId_406" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_429">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_429" xmlns:q293="http://laegler.com/openbanking/soap/model" element="q293:GET_GetDomesticScheduledPaymentConsentsConsentId_429" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentConsentsConsentId_500">
    <part name="GET_GetDomesticScheduledPaymentConsentsConsentId_500" xmlns:q294="http://laegler.com/openbanking/soap/model" element="q294:GET_GetDomesticScheduledPaymentConsentsConsentId_500" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_InputMessage">
    <part name="POST_CreateDomesticScheduledPayments_InputMessage" xmlns:q295="http://laegler.com/openbanking/soap/model" element="q295:POST_CreateDomesticScheduledPayments_InputMessage" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_OutputMessage">
    <part name="POST_CreateDomesticScheduledPayments_OutputMessage" xmlns:q296="http://laegler.com/openbanking/soap/model" element="q296:POST_CreateDomesticScheduledPayments_OutputMessage" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_400">
    <part name="POST_CreateDomesticScheduledPayments_400" xmlns:q297="http://laegler.com/openbanking/soap/model" element="q297:POST_CreateDomesticScheduledPayments_400" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_401">
    <part name="POST_CreateDomesticScheduledPayments_401" xmlns:q298="http://laegler.com/openbanking/soap/model" element="q298:POST_CreateDomesticScheduledPayments_401" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_403">
    <part name="POST_CreateDomesticScheduledPayments_403" xmlns:q299="http://laegler.com/openbanking/soap/model" element="q299:POST_CreateDomesticScheduledPayments_403" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_404">
    <part name="POST_CreateDomesticScheduledPayments_404" xmlns:q300="http://laegler.com/openbanking/soap/model" element="q300:POST_CreateDomesticScheduledPayments_404" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_405">
    <part name="POST_CreateDomesticScheduledPayments_405" xmlns:q301="http://laegler.com/openbanking/soap/model" element="q301:POST_CreateDomesticScheduledPayments_405" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_406">
    <part name="POST_CreateDomesticScheduledPayments_406" xmlns:q302="http://laegler.com/openbanking/soap/model" element="q302:POST_CreateDomesticScheduledPayments_406" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_429">
    <part name="POST_CreateDomesticScheduledPayments_429" xmlns:q303="http://laegler.com/openbanking/soap/model" element="q303:POST_CreateDomesticScheduledPayments_429" />
  </message>
  <message name="POST_CreateDomesticScheduledPayments_500">
    <part name="POST_CreateDomesticScheduledPayments_500" xmlns:q304="http://laegler.com/openbanking/soap/model" element="q304:POST_CreateDomesticScheduledPayments_500" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage" xmlns:q305="http://laegler.com/openbanking/soap/model" element="q305:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage" xmlns:q306="http://laegler.com/openbanking/soap/model" element="q306:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400" xmlns:q307="http://laegler.com/openbanking/soap/model" element="q307:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401" xmlns:q308="http://laegler.com/openbanking/soap/model" element="q308:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403" xmlns:q309="http://laegler.com/openbanking/soap/model" element="q309:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404" xmlns:q310="http://laegler.com/openbanking/soap/model" element="q310:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405" xmlns:q311="http://laegler.com/openbanking/soap/model" element="q311:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406" xmlns:q312="http://laegler.com/openbanking/soap/model" element="q312:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429" xmlns:q313="http://laegler.com/openbanking/soap/model" element="q313:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500" xmlns:q314="http://laegler.com/openbanking/soap/model" element="q314:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500" />
  </message>
  <message name="POST_CreateFilePaymentConsents_InputMessage">
    <part name="POST_CreateFilePaymentConsents_InputMessage" xmlns:q315="http://laegler.com/openbanking/soap/model" element="q315:POST_CreateFilePaymentConsents_InputMessage" />
  </message>
  <message name="POST_CreateFilePaymentConsents_OutputMessage">
    <part name="POST_CreateFilePaymentConsents_OutputMessage" xmlns:q316="http://laegler.com/openbanking/soap/model" element="q316:POST_CreateFilePaymentConsents_OutputMessage" />
  </message>
  <message name="POST_CreateFilePaymentConsents_400">
    <part name="POST_CreateFilePaymentConsents_400" xmlns:q317="http://laegler.com/openbanking/soap/model" element="q317:POST_CreateFilePaymentConsents_400" />
  </message>
  <message name="POST_CreateFilePaymentConsents_401">
    <part name="POST_CreateFilePaymentConsents_401" xmlns:q318="http://laegler.com/openbanking/soap/model" element="q318:POST_CreateFilePaymentConsents_401" />
  </message>
  <message name="POST_CreateFilePaymentConsents_403">
    <part name="POST_CreateFilePaymentConsents_403" xmlns:q319="http://laegler.com/openbanking/soap/model" element="q319:POST_CreateFilePaymentConsents_403" />
  </message>
  <message name="POST_CreateFilePaymentConsents_404">
    <part name="POST_CreateFilePaymentConsents_404" xmlns:q320="http://laegler.com/openbanking/soap/model" element="q320:POST_CreateFilePaymentConsents_404" />
  </message>
  <message name="POST_CreateFilePaymentConsents_405">
    <part name="POST_CreateFilePaymentConsents_405" xmlns:q321="http://laegler.com/openbanking/soap/model" element="q321:POST_CreateFilePaymentConsents_405" />
  </message>
  <message name="POST_CreateFilePaymentConsents_406">
    <part name="POST_CreateFilePaymentConsents_406" xmlns:q322="http://laegler.com/openbanking/soap/model" element="q322:POST_CreateFilePaymentConsents_406" />
  </message>
  <message name="POST_CreateFilePaymentConsents_429">
    <part name="POST_CreateFilePaymentConsents_429" xmlns:q323="http://laegler.com/openbanking/soap/model" element="q323:POST_CreateFilePaymentConsents_429" />
  </message>
  <message name="POST_CreateFilePaymentConsents_500">
    <part name="POST_CreateFilePaymentConsents_500" xmlns:q324="http://laegler.com/openbanking/soap/model" element="q324:POST_CreateFilePaymentConsents_500" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_InputMessage">
    <part name="GET_GetFilePaymentConsentsConsentId_InputMessage" xmlns:q325="http://laegler.com/openbanking/soap/model" element="q325:GET_GetFilePaymentConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_OutputMessage">
    <part name="GET_GetFilePaymentConsentsConsentId_OutputMessage" xmlns:q326="http://laegler.com/openbanking/soap/model" element="q326:GET_GetFilePaymentConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_400">
    <part name="GET_GetFilePaymentConsentsConsentId_400" xmlns:q327="http://laegler.com/openbanking/soap/model" element="q327:GET_GetFilePaymentConsentsConsentId_400" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_401">
    <part name="GET_GetFilePaymentConsentsConsentId_401" xmlns:q328="http://laegler.com/openbanking/soap/model" element="q328:GET_GetFilePaymentConsentsConsentId_401" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_403">
    <part name="GET_GetFilePaymentConsentsConsentId_403" xmlns:q329="http://laegler.com/openbanking/soap/model" element="q329:GET_GetFilePaymentConsentsConsentId_403" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_404">
    <part name="GET_GetFilePaymentConsentsConsentId_404" xmlns:q330="http://laegler.com/openbanking/soap/model" element="q330:GET_GetFilePaymentConsentsConsentId_404" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_405">
    <part name="GET_GetFilePaymentConsentsConsentId_405" xmlns:q331="http://laegler.com/openbanking/soap/model" element="q331:GET_GetFilePaymentConsentsConsentId_405" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_406">
    <part name="GET_GetFilePaymentConsentsConsentId_406" xmlns:q332="http://laegler.com/openbanking/soap/model" element="q332:GET_GetFilePaymentConsentsConsentId_406" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_429">
    <part name="GET_GetFilePaymentConsentsConsentId_429" xmlns:q333="http://laegler.com/openbanking/soap/model" element="q333:GET_GetFilePaymentConsentsConsentId_429" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentId_500">
    <part name="GET_GetFilePaymentConsentsConsentId_500" xmlns:q334="http://laegler.com/openbanking/soap/model" element="q334:GET_GetFilePaymentConsentsConsentId_500" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_InputMessage">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_InputMessage" xmlns:q335="http://laegler.com/openbanking/soap/model" element="q335:GET_GetFilePaymentConsentsConsentIdFile_InputMessage" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_OutputMessage">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_OutputMessage" xmlns:q336="http://laegler.com/openbanking/soap/model" element="q336:GET_GetFilePaymentConsentsConsentIdFile_OutputMessage" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_400">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_400" xmlns:q337="http://laegler.com/openbanking/soap/model" element="q337:GET_GetFilePaymentConsentsConsentIdFile_400" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_401">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_401" xmlns:q338="http://laegler.com/openbanking/soap/model" element="q338:GET_GetFilePaymentConsentsConsentIdFile_401" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_403">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_403" xmlns:q339="http://laegler.com/openbanking/soap/model" element="q339:GET_GetFilePaymentConsentsConsentIdFile_403" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_404">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_404" xmlns:q340="http://laegler.com/openbanking/soap/model" element="q340:GET_GetFilePaymentConsentsConsentIdFile_404" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_405">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_405" xmlns:q341="http://laegler.com/openbanking/soap/model" element="q341:GET_GetFilePaymentConsentsConsentIdFile_405" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_406">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_406" xmlns:q342="http://laegler.com/openbanking/soap/model" element="q342:GET_GetFilePaymentConsentsConsentIdFile_406" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_429">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_429" xmlns:q343="http://laegler.com/openbanking/soap/model" element="q343:GET_GetFilePaymentConsentsConsentIdFile_429" />
  </message>
  <message name="GET_GetFilePaymentConsentsConsentIdFile_500">
    <part name="GET_GetFilePaymentConsentsConsentIdFile_500" xmlns:q344="http://laegler.com/openbanking/soap/model" element="q344:GET_GetFilePaymentConsentsConsentIdFile_500" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_InputMessage">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_InputMessage" xmlns:q345="http://laegler.com/openbanking/soap/model" element="q345:POST_CreateFilePaymentConsentsConsentIdFile_InputMessage" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage" xmlns:q346="http://laegler.com/openbanking/soap/model" element="q346:POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_400">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_400" xmlns:q347="http://laegler.com/openbanking/soap/model" element="q347:POST_CreateFilePaymentConsentsConsentIdFile_400" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_401">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_401" xmlns:q348="http://laegler.com/openbanking/soap/model" element="q348:POST_CreateFilePaymentConsentsConsentIdFile_401" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_403">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_403" xmlns:q349="http://laegler.com/openbanking/soap/model" element="q349:POST_CreateFilePaymentConsentsConsentIdFile_403" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_404">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_404" xmlns:q350="http://laegler.com/openbanking/soap/model" element="q350:POST_CreateFilePaymentConsentsConsentIdFile_404" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_405">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_405" xmlns:q351="http://laegler.com/openbanking/soap/model" element="q351:POST_CreateFilePaymentConsentsConsentIdFile_405" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_406">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_406" xmlns:q352="http://laegler.com/openbanking/soap/model" element="q352:POST_CreateFilePaymentConsentsConsentIdFile_406" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_429">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_429" xmlns:q353="http://laegler.com/openbanking/soap/model" element="q353:POST_CreateFilePaymentConsentsConsentIdFile_429" />
  </message>
  <message name="POST_CreateFilePaymentConsentsConsentIdFile_500">
    <part name="POST_CreateFilePaymentConsentsConsentIdFile_500" xmlns:q354="http://laegler.com/openbanking/soap/model" element="q354:POST_CreateFilePaymentConsentsConsentIdFile_500" />
  </message>
  <message name="POST_CreateFilePayments_InputMessage">
    <part name="POST_CreateFilePayments_InputMessage" xmlns:q355="http://laegler.com/openbanking/soap/model" element="q355:POST_CreateFilePayments_InputMessage" />
  </message>
  <message name="POST_CreateFilePayments_OutputMessage">
    <part name="POST_CreateFilePayments_OutputMessage" xmlns:q356="http://laegler.com/openbanking/soap/model" element="q356:POST_CreateFilePayments_OutputMessage" />
  </message>
  <message name="POST_CreateFilePayments_400">
    <part name="POST_CreateFilePayments_400" xmlns:q357="http://laegler.com/openbanking/soap/model" element="q357:POST_CreateFilePayments_400" />
  </message>
  <message name="POST_CreateFilePayments_401">
    <part name="POST_CreateFilePayments_401" xmlns:q358="http://laegler.com/openbanking/soap/model" element="q358:POST_CreateFilePayments_401" />
  </message>
  <message name="POST_CreateFilePayments_403">
    <part name="POST_CreateFilePayments_403" xmlns:q359="http://laegler.com/openbanking/soap/model" element="q359:POST_CreateFilePayments_403" />
  </message>
  <message name="POST_CreateFilePayments_404">
    <part name="POST_CreateFilePayments_404" xmlns:q360="http://laegler.com/openbanking/soap/model" element="q360:POST_CreateFilePayments_404" />
  </message>
  <message name="POST_CreateFilePayments_405">
    <part name="POST_CreateFilePayments_405" xmlns:q361="http://laegler.com/openbanking/soap/model" element="q361:POST_CreateFilePayments_405" />
  </message>
  <message name="POST_CreateFilePayments_406">
    <part name="POST_CreateFilePayments_406" xmlns:q362="http://laegler.com/openbanking/soap/model" element="q362:POST_CreateFilePayments_406" />
  </message>
  <message name="POST_CreateFilePayments_429">
    <part name="POST_CreateFilePayments_429" xmlns:q363="http://laegler.com/openbanking/soap/model" element="q363:POST_CreateFilePayments_429" />
  </message>
  <message name="POST_CreateFilePayments_500">
    <part name="POST_CreateFilePayments_500" xmlns:q364="http://laegler.com/openbanking/soap/model" element="q364:POST_CreateFilePayments_500" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_InputMessage">
    <part name="GET_GetFilePaymentsFilePaymentId_InputMessage" xmlns:q365="http://laegler.com/openbanking/soap/model" element="q365:GET_GetFilePaymentsFilePaymentId_InputMessage" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_OutputMessage">
    <part name="GET_GetFilePaymentsFilePaymentId_OutputMessage" xmlns:q366="http://laegler.com/openbanking/soap/model" element="q366:GET_GetFilePaymentsFilePaymentId_OutputMessage" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_400">
    <part name="GET_GetFilePaymentsFilePaymentId_400" xmlns:q367="http://laegler.com/openbanking/soap/model" element="q367:GET_GetFilePaymentsFilePaymentId_400" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_401">
    <part name="GET_GetFilePaymentsFilePaymentId_401" xmlns:q368="http://laegler.com/openbanking/soap/model" element="q368:GET_GetFilePaymentsFilePaymentId_401" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_403">
    <part name="GET_GetFilePaymentsFilePaymentId_403" xmlns:q369="http://laegler.com/openbanking/soap/model" element="q369:GET_GetFilePaymentsFilePaymentId_403" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_404">
    <part name="GET_GetFilePaymentsFilePaymentId_404" xmlns:q370="http://laegler.com/openbanking/soap/model" element="q370:GET_GetFilePaymentsFilePaymentId_404" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_405">
    <part name="GET_GetFilePaymentsFilePaymentId_405" xmlns:q371="http://laegler.com/openbanking/soap/model" element="q371:GET_GetFilePaymentsFilePaymentId_405" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_406">
    <part name="GET_GetFilePaymentsFilePaymentId_406" xmlns:q372="http://laegler.com/openbanking/soap/model" element="q372:GET_GetFilePaymentsFilePaymentId_406" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_429">
    <part name="GET_GetFilePaymentsFilePaymentId_429" xmlns:q373="http://laegler.com/openbanking/soap/model" element="q373:GET_GetFilePaymentsFilePaymentId_429" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentId_500">
    <part name="GET_GetFilePaymentsFilePaymentId_500" xmlns:q374="http://laegler.com/openbanking/soap/model" element="q374:GET_GetFilePaymentsFilePaymentId_500" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage" xmlns:q375="http://laegler.com/openbanking/soap/model" element="q375:GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage" xmlns:q376="http://laegler.com/openbanking/soap/model" element="q376:GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_400">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_400" xmlns:q377="http://laegler.com/openbanking/soap/model" element="q377:GET_GetFilePaymentsFilePaymentIdReportFile_400" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_401">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_401" xmlns:q378="http://laegler.com/openbanking/soap/model" element="q378:GET_GetFilePaymentsFilePaymentIdReportFile_401" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_403">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_403" xmlns:q379="http://laegler.com/openbanking/soap/model" element="q379:GET_GetFilePaymentsFilePaymentIdReportFile_403" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_404">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_404" xmlns:q380="http://laegler.com/openbanking/soap/model" element="q380:GET_GetFilePaymentsFilePaymentIdReportFile_404" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_405">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_405" xmlns:q381="http://laegler.com/openbanking/soap/model" element="q381:GET_GetFilePaymentsFilePaymentIdReportFile_405" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_406">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_406" xmlns:q382="http://laegler.com/openbanking/soap/model" element="q382:GET_GetFilePaymentsFilePaymentIdReportFile_406" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_429">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_429" xmlns:q383="http://laegler.com/openbanking/soap/model" element="q383:GET_GetFilePaymentsFilePaymentIdReportFile_429" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdReportFile_500">
    <part name="GET_GetFilePaymentsFilePaymentIdReportFile_500" xmlns:q384="http://laegler.com/openbanking/soap/model" element="q384:GET_GetFilePaymentsFilePaymentIdReportFile_500" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_InputMessage">
    <part name="POST_CreateInternationalPaymentConsents_InputMessage" xmlns:q385="http://laegler.com/openbanking/soap/model" element="q385:POST_CreateInternationalPaymentConsents_InputMessage" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_OutputMessage">
    <part name="POST_CreateInternationalPaymentConsents_OutputMessage" xmlns:q386="http://laegler.com/openbanking/soap/model" element="q386:POST_CreateInternationalPaymentConsents_OutputMessage" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_400">
    <part name="POST_CreateInternationalPaymentConsents_400" xmlns:q387="http://laegler.com/openbanking/soap/model" element="q387:POST_CreateInternationalPaymentConsents_400" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_401">
    <part name="POST_CreateInternationalPaymentConsents_401" xmlns:q388="http://laegler.com/openbanking/soap/model" element="q388:POST_CreateInternationalPaymentConsents_401" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_403">
    <part name="POST_CreateInternationalPaymentConsents_403" xmlns:q389="http://laegler.com/openbanking/soap/model" element="q389:POST_CreateInternationalPaymentConsents_403" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_404">
    <part name="POST_CreateInternationalPaymentConsents_404" xmlns:q390="http://laegler.com/openbanking/soap/model" element="q390:POST_CreateInternationalPaymentConsents_404" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_405">
    <part name="POST_CreateInternationalPaymentConsents_405" xmlns:q391="http://laegler.com/openbanking/soap/model" element="q391:POST_CreateInternationalPaymentConsents_405" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_406">
    <part name="POST_CreateInternationalPaymentConsents_406" xmlns:q392="http://laegler.com/openbanking/soap/model" element="q392:POST_CreateInternationalPaymentConsents_406" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_429">
    <part name="POST_CreateInternationalPaymentConsents_429" xmlns:q393="http://laegler.com/openbanking/soap/model" element="q393:POST_CreateInternationalPaymentConsents_429" />
  </message>
  <message name="POST_CreateInternationalPaymentConsents_500">
    <part name="POST_CreateInternationalPaymentConsents_500" xmlns:q394="http://laegler.com/openbanking/soap/model" element="q394:POST_CreateInternationalPaymentConsents_500" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_InputMessage">
    <part name="GET_GetInternationalPaymentConsentsConsentId_InputMessage" xmlns:q395="http://laegler.com/openbanking/soap/model" element="q395:GET_GetInternationalPaymentConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_OutputMessage">
    <part name="GET_GetInternationalPaymentConsentsConsentId_OutputMessage" xmlns:q396="http://laegler.com/openbanking/soap/model" element="q396:GET_GetInternationalPaymentConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_400">
    <part name="GET_GetInternationalPaymentConsentsConsentId_400" xmlns:q397="http://laegler.com/openbanking/soap/model" element="q397:GET_GetInternationalPaymentConsentsConsentId_400" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_401">
    <part name="GET_GetInternationalPaymentConsentsConsentId_401" xmlns:q398="http://laegler.com/openbanking/soap/model" element="q398:GET_GetInternationalPaymentConsentsConsentId_401" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_403">
    <part name="GET_GetInternationalPaymentConsentsConsentId_403" xmlns:q399="http://laegler.com/openbanking/soap/model" element="q399:GET_GetInternationalPaymentConsentsConsentId_403" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_404">
    <part name="GET_GetInternationalPaymentConsentsConsentId_404" xmlns:q400="http://laegler.com/openbanking/soap/model" element="q400:GET_GetInternationalPaymentConsentsConsentId_404" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_405">
    <part name="GET_GetInternationalPaymentConsentsConsentId_405" xmlns:q401="http://laegler.com/openbanking/soap/model" element="q401:GET_GetInternationalPaymentConsentsConsentId_405" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_406">
    <part name="GET_GetInternationalPaymentConsentsConsentId_406" xmlns:q402="http://laegler.com/openbanking/soap/model" element="q402:GET_GetInternationalPaymentConsentsConsentId_406" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_429">
    <part name="GET_GetInternationalPaymentConsentsConsentId_429" xmlns:q403="http://laegler.com/openbanking/soap/model" element="q403:GET_GetInternationalPaymentConsentsConsentId_429" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentId_500">
    <part name="GET_GetInternationalPaymentConsentsConsentId_500" xmlns:q404="http://laegler.com/openbanking/soap/model" element="q404:GET_GetInternationalPaymentConsentsConsentId_500" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage" xmlns:q405="http://laegler.com/openbanking/soap/model" element="q405:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage" xmlns:q406="http://laegler.com/openbanking/soap/model" element="q406:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400" xmlns:q407="http://laegler.com/openbanking/soap/model" element="q407:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401" xmlns:q408="http://laegler.com/openbanking/soap/model" element="q408:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403" xmlns:q409="http://laegler.com/openbanking/soap/model" element="q409:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404" xmlns:q410="http://laegler.com/openbanking/soap/model" element="q410:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405" xmlns:q411="http://laegler.com/openbanking/soap/model" element="q411:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406" xmlns:q412="http://laegler.com/openbanking/soap/model" element="q412:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429" xmlns:q413="http://laegler.com/openbanking/soap/model" element="q413:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429" />
  </message>
  <message name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500">
    <part name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500" xmlns:q414="http://laegler.com/openbanking/soap/model" element="q414:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500" />
  </message>
  <message name="POST_CreateInternationalPayments_InputMessage">
    <part name="POST_CreateInternationalPayments_InputMessage" xmlns:q415="http://laegler.com/openbanking/soap/model" element="q415:POST_CreateInternationalPayments_InputMessage" />
  </message>
  <message name="POST_CreateInternationalPayments_OutputMessage">
    <part name="POST_CreateInternationalPayments_OutputMessage" xmlns:q416="http://laegler.com/openbanking/soap/model" element="q416:POST_CreateInternationalPayments_OutputMessage" />
  </message>
  <message name="POST_CreateInternationalPayments_400">
    <part name="POST_CreateInternationalPayments_400" xmlns:q417="http://laegler.com/openbanking/soap/model" element="q417:POST_CreateInternationalPayments_400" />
  </message>
  <message name="POST_CreateInternationalPayments_401">
    <part name="POST_CreateInternationalPayments_401" xmlns:q418="http://laegler.com/openbanking/soap/model" element="q418:POST_CreateInternationalPayments_401" />
  </message>
  <message name="POST_CreateInternationalPayments_403">
    <part name="POST_CreateInternationalPayments_403" xmlns:q419="http://laegler.com/openbanking/soap/model" element="q419:POST_CreateInternationalPayments_403" />
  </message>
  <message name="POST_CreateInternationalPayments_404">
    <part name="POST_CreateInternationalPayments_404" xmlns:q420="http://laegler.com/openbanking/soap/model" element="q420:POST_CreateInternationalPayments_404" />
  </message>
  <message name="POST_CreateInternationalPayments_405">
    <part name="POST_CreateInternationalPayments_405" xmlns:q421="http://laegler.com/openbanking/soap/model" element="q421:POST_CreateInternationalPayments_405" />
  </message>
  <message name="POST_CreateInternationalPayments_406">
    <part name="POST_CreateInternationalPayments_406" xmlns:q422="http://laegler.com/openbanking/soap/model" element="q422:POST_CreateInternationalPayments_406" />
  </message>
  <message name="POST_CreateInternationalPayments_429">
    <part name="POST_CreateInternationalPayments_429" xmlns:q423="http://laegler.com/openbanking/soap/model" element="q423:POST_CreateInternationalPayments_429" />
  </message>
  <message name="POST_CreateInternationalPayments_500">
    <part name="POST_CreateInternationalPayments_500" xmlns:q424="http://laegler.com/openbanking/soap/model" element="q424:POST_CreateInternationalPayments_500" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_InputMessage">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_InputMessage" xmlns:q425="http://laegler.com/openbanking/soap/model" element="q425:GET_GetInternationalPaymentsInternationalPaymentId_InputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage" xmlns:q426="http://laegler.com/openbanking/soap/model" element="q426:GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_400">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_400" xmlns:q427="http://laegler.com/openbanking/soap/model" element="q427:GET_GetInternationalPaymentsInternationalPaymentId_400" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_401">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_401" xmlns:q428="http://laegler.com/openbanking/soap/model" element="q428:GET_GetInternationalPaymentsInternationalPaymentId_401" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_403">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_403" xmlns:q429="http://laegler.com/openbanking/soap/model" element="q429:GET_GetInternationalPaymentsInternationalPaymentId_403" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_404">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_404" xmlns:q430="http://laegler.com/openbanking/soap/model" element="q430:GET_GetInternationalPaymentsInternationalPaymentId_404" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_405">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_405" xmlns:q431="http://laegler.com/openbanking/soap/model" element="q431:GET_GetInternationalPaymentsInternationalPaymentId_405" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_406">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_406" xmlns:q432="http://laegler.com/openbanking/soap/model" element="q432:GET_GetInternationalPaymentsInternationalPaymentId_406" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_429">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_429" xmlns:q433="http://laegler.com/openbanking/soap/model" element="q433:GET_GetInternationalPaymentsInternationalPaymentId_429" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentId_500">
    <part name="GET_GetInternationalPaymentsInternationalPaymentId_500" xmlns:q434="http://laegler.com/openbanking/soap/model" element="q434:GET_GetInternationalPaymentsInternationalPaymentId_500" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_InputMessage">
    <part name="POST_CreateInternationalScheduledPaymentConsents_InputMessage" xmlns:q435="http://laegler.com/openbanking/soap/model" element="q435:POST_CreateInternationalScheduledPaymentConsents_InputMessage" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_OutputMessage">
    <part name="POST_CreateInternationalScheduledPaymentConsents_OutputMessage" xmlns:q436="http://laegler.com/openbanking/soap/model" element="q436:POST_CreateInternationalScheduledPaymentConsents_OutputMessage" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_400">
    <part name="POST_CreateInternationalScheduledPaymentConsents_400" xmlns:q437="http://laegler.com/openbanking/soap/model" element="q437:POST_CreateInternationalScheduledPaymentConsents_400" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_401">
    <part name="POST_CreateInternationalScheduledPaymentConsents_401" xmlns:q438="http://laegler.com/openbanking/soap/model" element="q438:POST_CreateInternationalScheduledPaymentConsents_401" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_403">
    <part name="POST_CreateInternationalScheduledPaymentConsents_403" xmlns:q439="http://laegler.com/openbanking/soap/model" element="q439:POST_CreateInternationalScheduledPaymentConsents_403" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_404">
    <part name="POST_CreateInternationalScheduledPaymentConsents_404" xmlns:q440="http://laegler.com/openbanking/soap/model" element="q440:POST_CreateInternationalScheduledPaymentConsents_404" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_405">
    <part name="POST_CreateInternationalScheduledPaymentConsents_405" xmlns:q441="http://laegler.com/openbanking/soap/model" element="q441:POST_CreateInternationalScheduledPaymentConsents_405" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_406">
    <part name="POST_CreateInternationalScheduledPaymentConsents_406" xmlns:q442="http://laegler.com/openbanking/soap/model" element="q442:POST_CreateInternationalScheduledPaymentConsents_406" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_429">
    <part name="POST_CreateInternationalScheduledPaymentConsents_429" xmlns:q443="http://laegler.com/openbanking/soap/model" element="q443:POST_CreateInternationalScheduledPaymentConsents_429" />
  </message>
  <message name="POST_CreateInternationalScheduledPaymentConsents_500">
    <part name="POST_CreateInternationalScheduledPaymentConsents_500" xmlns:q444="http://laegler.com/openbanking/soap/model" element="q444:POST_CreateInternationalScheduledPaymentConsents_500" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage" xmlns:q445="http://laegler.com/openbanking/soap/model" element="q445:GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage" xmlns:q446="http://laegler.com/openbanking/soap/model" element="q446:GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_400">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_400" xmlns:q447="http://laegler.com/openbanking/soap/model" element="q447:GET_GetInternationalScheduledPaymentConsentsConsentId_400" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_401">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_401" xmlns:q448="http://laegler.com/openbanking/soap/model" element="q448:GET_GetInternationalScheduledPaymentConsentsConsentId_401" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_403">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_403" xmlns:q449="http://laegler.com/openbanking/soap/model" element="q449:GET_GetInternationalScheduledPaymentConsentsConsentId_403" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_404">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_404" xmlns:q450="http://laegler.com/openbanking/soap/model" element="q450:GET_GetInternationalScheduledPaymentConsentsConsentId_404" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_405">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_405" xmlns:q451="http://laegler.com/openbanking/soap/model" element="q451:GET_GetInternationalScheduledPaymentConsentsConsentId_405" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_406">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_406" xmlns:q452="http://laegler.com/openbanking/soap/model" element="q452:GET_GetInternationalScheduledPaymentConsentsConsentId_406" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_429">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_429" xmlns:q453="http://laegler.com/openbanking/soap/model" element="q453:GET_GetInternationalScheduledPaymentConsentsConsentId_429" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentId_500">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentId_500" xmlns:q454="http://laegler.com/openbanking/soap/model" element="q454:GET_GetInternationalScheduledPaymentConsentsConsentId_500" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage" xmlns:q455="http://laegler.com/openbanking/soap/model" element="q455:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage" xmlns:q456="http://laegler.com/openbanking/soap/model" element="q456:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400" xmlns:q457="http://laegler.com/openbanking/soap/model" element="q457:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401" xmlns:q458="http://laegler.com/openbanking/soap/model" element="q458:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403" xmlns:q459="http://laegler.com/openbanking/soap/model" element="q459:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404" xmlns:q460="http://laegler.com/openbanking/soap/model" element="q460:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405" xmlns:q461="http://laegler.com/openbanking/soap/model" element="q461:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406" xmlns:q462="http://laegler.com/openbanking/soap/model" element="q462:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429" xmlns:q463="http://laegler.com/openbanking/soap/model" element="q463:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500">
    <part name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500" xmlns:q464="http://laegler.com/openbanking/soap/model" element="q464:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_InputMessage">
    <part name="POST_CreateInternationalScheduledPayments_InputMessage" xmlns:q465="http://laegler.com/openbanking/soap/model" element="q465:POST_CreateInternationalScheduledPayments_InputMessage" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_OutputMessage">
    <part name="POST_CreateInternationalScheduledPayments_OutputMessage" xmlns:q466="http://laegler.com/openbanking/soap/model" element="q466:POST_CreateInternationalScheduledPayments_OutputMessage" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_400">
    <part name="POST_CreateInternationalScheduledPayments_400" xmlns:q467="http://laegler.com/openbanking/soap/model" element="q467:POST_CreateInternationalScheduledPayments_400" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_401">
    <part name="POST_CreateInternationalScheduledPayments_401" xmlns:q468="http://laegler.com/openbanking/soap/model" element="q468:POST_CreateInternationalScheduledPayments_401" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_403">
    <part name="POST_CreateInternationalScheduledPayments_403" xmlns:q469="http://laegler.com/openbanking/soap/model" element="q469:POST_CreateInternationalScheduledPayments_403" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_404">
    <part name="POST_CreateInternationalScheduledPayments_404" xmlns:q470="http://laegler.com/openbanking/soap/model" element="q470:POST_CreateInternationalScheduledPayments_404" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_405">
    <part name="POST_CreateInternationalScheduledPayments_405" xmlns:q471="http://laegler.com/openbanking/soap/model" element="q471:POST_CreateInternationalScheduledPayments_405" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_406">
    <part name="POST_CreateInternationalScheduledPayments_406" xmlns:q472="http://laegler.com/openbanking/soap/model" element="q472:POST_CreateInternationalScheduledPayments_406" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_429">
    <part name="POST_CreateInternationalScheduledPayments_429" xmlns:q473="http://laegler.com/openbanking/soap/model" element="q473:POST_CreateInternationalScheduledPayments_429" />
  </message>
  <message name="POST_CreateInternationalScheduledPayments_500">
    <part name="POST_CreateInternationalScheduledPayments_500" xmlns:q474="http://laegler.com/openbanking/soap/model" element="q474:POST_CreateInternationalScheduledPayments_500" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage" xmlns:q475="http://laegler.com/openbanking/soap/model" element="q475:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage" xmlns:q476="http://laegler.com/openbanking/soap/model" element="q476:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400" xmlns:q477="http://laegler.com/openbanking/soap/model" element="q477:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401" xmlns:q478="http://laegler.com/openbanking/soap/model" element="q478:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403" xmlns:q479="http://laegler.com/openbanking/soap/model" element="q479:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404" xmlns:q480="http://laegler.com/openbanking/soap/model" element="q480:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405" xmlns:q481="http://laegler.com/openbanking/soap/model" element="q481:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406" xmlns:q482="http://laegler.com/openbanking/soap/model" element="q482:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429" xmlns:q483="http://laegler.com/openbanking/soap/model" element="q483:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500" xmlns:q484="http://laegler.com/openbanking/soap/model" element="q484:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage" xmlns:q485="http://laegler.com/openbanking/soap/model" element="q485:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage" xmlns:q486="http://laegler.com/openbanking/soap/model" element="q486:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400" xmlns:q487="http://laegler.com/openbanking/soap/model" element="q487:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401" xmlns:q488="http://laegler.com/openbanking/soap/model" element="q488:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403" xmlns:q489="http://laegler.com/openbanking/soap/model" element="q489:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404" xmlns:q490="http://laegler.com/openbanking/soap/model" element="q490:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405" xmlns:q491="http://laegler.com/openbanking/soap/model" element="q491:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406" xmlns:q492="http://laegler.com/openbanking/soap/model" element="q492:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429" xmlns:q493="http://laegler.com/openbanking/soap/model" element="q493:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429" />
  </message>
  <message name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500">
    <part name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500" xmlns:q494="http://laegler.com/openbanking/soap/model" element="q494:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage" xmlns:q495="http://laegler.com/openbanking/soap/model" element="q495:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage" xmlns:q496="http://laegler.com/openbanking/soap/model" element="q496:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400" xmlns:q497="http://laegler.com/openbanking/soap/model" element="q497:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401" xmlns:q498="http://laegler.com/openbanking/soap/model" element="q498:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403" xmlns:q499="http://laegler.com/openbanking/soap/model" element="q499:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404" xmlns:q500="http://laegler.com/openbanking/soap/model" element="q500:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405" xmlns:q501="http://laegler.com/openbanking/soap/model" element="q501:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406" xmlns:q502="http://laegler.com/openbanking/soap/model" element="q502:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429" xmlns:q503="http://laegler.com/openbanking/soap/model" element="q503:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429" />
  </message>
  <message name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500">
    <part name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500" xmlns:q504="http://laegler.com/openbanking/soap/model" element="q504:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage" xmlns:q505="http://laegler.com/openbanking/soap/model" element="q505:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage" xmlns:q506="http://laegler.com/openbanking/soap/model" element="q506:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400" xmlns:q507="http://laegler.com/openbanking/soap/model" element="q507:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401" xmlns:q508="http://laegler.com/openbanking/soap/model" element="q508:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403" xmlns:q509="http://laegler.com/openbanking/soap/model" element="q509:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404" xmlns:q510="http://laegler.com/openbanking/soap/model" element="q510:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405" xmlns:q511="http://laegler.com/openbanking/soap/model" element="q511:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406" xmlns:q512="http://laegler.com/openbanking/soap/model" element="q512:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429" xmlns:q513="http://laegler.com/openbanking/soap/model" element="q513:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500" xmlns:q514="http://laegler.com/openbanking/soap/model" element="q514:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage" xmlns:q515="http://laegler.com/openbanking/soap/model" element="q515:GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage" xmlns:q516="http://laegler.com/openbanking/soap/model" element="q516:GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_400">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_400" xmlns:q517="http://laegler.com/openbanking/soap/model" element="q517:GET_GetFilePaymentsFilePaymentIdPaymentDetails_400" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_401">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_401" xmlns:q518="http://laegler.com/openbanking/soap/model" element="q518:GET_GetFilePaymentsFilePaymentIdPaymentDetails_401" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_403">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_403" xmlns:q519="http://laegler.com/openbanking/soap/model" element="q519:GET_GetFilePaymentsFilePaymentIdPaymentDetails_403" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_404">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_404" xmlns:q520="http://laegler.com/openbanking/soap/model" element="q520:GET_GetFilePaymentsFilePaymentIdPaymentDetails_404" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_405">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_405" xmlns:q521="http://laegler.com/openbanking/soap/model" element="q521:GET_GetFilePaymentsFilePaymentIdPaymentDetails_405" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_406">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_406" xmlns:q522="http://laegler.com/openbanking/soap/model" element="q522:GET_GetFilePaymentsFilePaymentIdPaymentDetails_406" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_429">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_429" xmlns:q523="http://laegler.com/openbanking/soap/model" element="q523:GET_GetFilePaymentsFilePaymentIdPaymentDetails_429" />
  </message>
  <message name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_500">
    <part name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_500" xmlns:q524="http://laegler.com/openbanking/soap/model" element="q524:GET_GetFilePaymentsFilePaymentIdPaymentDetails_500" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage" xmlns:q525="http://laegler.com/openbanking/soap/model" element="q525:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage" xmlns:q526="http://laegler.com/openbanking/soap/model" element="q526:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400" xmlns:q527="http://laegler.com/openbanking/soap/model" element="q527:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401" xmlns:q528="http://laegler.com/openbanking/soap/model" element="q528:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403" xmlns:q529="http://laegler.com/openbanking/soap/model" element="q529:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404" xmlns:q530="http://laegler.com/openbanking/soap/model" element="q530:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405" xmlns:q531="http://laegler.com/openbanking/soap/model" element="q531:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406" xmlns:q532="http://laegler.com/openbanking/soap/model" element="q532:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429" xmlns:q533="http://laegler.com/openbanking/soap/model" element="q533:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429" />
  </message>
  <message name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500">
    <part name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500" xmlns:q534="http://laegler.com/openbanking/soap/model" element="q534:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage" xmlns:q535="http://laegler.com/openbanking/soap/model" element="q535:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage" xmlns:q536="http://laegler.com/openbanking/soap/model" element="q536:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400" xmlns:q537="http://laegler.com/openbanking/soap/model" element="q537:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401" xmlns:q538="http://laegler.com/openbanking/soap/model" element="q538:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403" xmlns:q539="http://laegler.com/openbanking/soap/model" element="q539:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404" xmlns:q540="http://laegler.com/openbanking/soap/model" element="q540:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405" xmlns:q541="http://laegler.com/openbanking/soap/model" element="q541:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406" xmlns:q542="http://laegler.com/openbanking/soap/model" element="q542:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429" xmlns:q543="http://laegler.com/openbanking/soap/model" element="q543:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429" />
  </message>
  <message name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500">
    <part name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500" xmlns:q544="http://laegler.com/openbanking/soap/model" element="q544:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage" xmlns:q545="http://laegler.com/openbanking/soap/model" element="q545:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage" xmlns:q546="http://laegler.com/openbanking/soap/model" element="q546:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400" xmlns:q547="http://laegler.com/openbanking/soap/model" element="q547:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401" xmlns:q548="http://laegler.com/openbanking/soap/model" element="q548:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403" xmlns:q549="http://laegler.com/openbanking/soap/model" element="q549:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404" xmlns:q550="http://laegler.com/openbanking/soap/model" element="q550:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405" xmlns:q551="http://laegler.com/openbanking/soap/model" element="q551:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406" xmlns:q552="http://laegler.com/openbanking/soap/model" element="q552:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429" xmlns:q553="http://laegler.com/openbanking/soap/model" element="q553:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500" xmlns:q554="http://laegler.com/openbanking/soap/model" element="q554:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500" />
  </message>
  <message name="POST_CreateEvents_InputMessage">
    <part name="POST_CreateEvents_InputMessage" xmlns:q555="http://laegler.com/openbanking/soap/model" element="q555:POST_CreateEvents_InputMessage" />
  </message>
  <message name="POST_CreateEvents_OutputMessage">
    <part name="POST_CreateEvents_OutputMessage" xmlns:q556="http://laegler.com/openbanking/soap/model" element="q556:POST_CreateEvents_OutputMessage" />
  </message>
  <message name="POST_CreateEvents_400">
    <part name="POST_CreateEvents_400" xmlns:q557="http://laegler.com/openbanking/soap/model" element="q557:POST_CreateEvents_400" />
  </message>
  <message name="POST_CreateEvents_401">
    <part name="POST_CreateEvents_401" xmlns:q558="http://laegler.com/openbanking/soap/model" element="q558:POST_CreateEvents_401" />
  </message>
  <message name="POST_CreateEvents_403">
    <part name="POST_CreateEvents_403" xmlns:q559="http://laegler.com/openbanking/soap/model" element="q559:POST_CreateEvents_403" />
  </message>
  <message name="POST_CreateEvents_404">
    <part name="POST_CreateEvents_404" xmlns:q560="http://laegler.com/openbanking/soap/model" element="q560:POST_CreateEvents_404" />
  </message>
  <message name="POST_CreateEvents_405">
    <part name="POST_CreateEvents_405" xmlns:q561="http://laegler.com/openbanking/soap/model" element="q561:POST_CreateEvents_405" />
  </message>
  <message name="POST_CreateEvents_406">
    <part name="POST_CreateEvents_406" xmlns:q562="http://laegler.com/openbanking/soap/model" element="q562:POST_CreateEvents_406" />
  </message>
  <message name="POST_CreateEvents_429">
    <part name="POST_CreateEvents_429" xmlns:q563="http://laegler.com/openbanking/soap/model" element="q563:POST_CreateEvents_429" />
  </message>
  <message name="POST_CreateEvents_500">
    <part name="POST_CreateEvents_500" xmlns:q564="http://laegler.com/openbanking/soap/model" element="q564:POST_CreateEvents_500" />
  </message>
  <message name="POST_CreateAccountAccessConsents_InputMessage">
    <part name="POST_CreateAccountAccessConsents_InputMessage" xmlns:q565="http://laegler.com/openbanking/soap/model" element="q565:POST_CreateAccountAccessConsents_InputMessage" />
  </message>
  <message name="POST_CreateAccountAccessConsents_OutputMessage">
    <part name="POST_CreateAccountAccessConsents_OutputMessage" xmlns:q566="http://laegler.com/openbanking/soap/model" element="q566:POST_CreateAccountAccessConsents_OutputMessage" />
  </message>
  <message name="POST_CreateAccountAccessConsents_400">
    <part name="POST_CreateAccountAccessConsents_400" xmlns:q567="http://laegler.com/openbanking/soap/model" element="q567:POST_CreateAccountAccessConsents_400" />
  </message>
  <message name="POST_CreateAccountAccessConsents_401">
    <part name="POST_CreateAccountAccessConsents_401" xmlns:q568="http://laegler.com/openbanking/soap/model" element="q568:POST_CreateAccountAccessConsents_401" />
  </message>
  <message name="POST_CreateAccountAccessConsents_403">
    <part name="POST_CreateAccountAccessConsents_403" xmlns:q569="http://laegler.com/openbanking/soap/model" element="q569:POST_CreateAccountAccessConsents_403" />
  </message>
  <message name="POST_CreateAccountAccessConsents_404">
    <part name="POST_CreateAccountAccessConsents_404" xmlns:q570="http://laegler.com/openbanking/soap/model" element="q570:POST_CreateAccountAccessConsents_404" />
  </message>
  <message name="POST_CreateAccountAccessConsents_405">
    <part name="POST_CreateAccountAccessConsents_405" xmlns:q571="http://laegler.com/openbanking/soap/model" element="q571:POST_CreateAccountAccessConsents_405" />
  </message>
  <message name="POST_CreateAccountAccessConsents_406">
    <part name="POST_CreateAccountAccessConsents_406" xmlns:q572="http://laegler.com/openbanking/soap/model" element="q572:POST_CreateAccountAccessConsents_406" />
  </message>
  <message name="POST_CreateAccountAccessConsents_429">
    <part name="POST_CreateAccountAccessConsents_429" xmlns:q573="http://laegler.com/openbanking/soap/model" element="q573:POST_CreateAccountAccessConsents_429" />
  </message>
  <message name="POST_CreateAccountAccessConsents_500">
    <part name="POST_CreateAccountAccessConsents_500" xmlns:q574="http://laegler.com/openbanking/soap/model" element="q574:POST_CreateAccountAccessConsents_500" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_InputMessage">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_InputMessage" xmlns:q575="http://laegler.com/openbanking/soap/model" element="q575:DELETE_DeleteAccountAccessConsentsConsentId_InputMessage" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage" xmlns:q576="http://laegler.com/openbanking/soap/model" element="q576:DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_400">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_400" xmlns:q577="http://laegler.com/openbanking/soap/model" element="q577:DELETE_DeleteAccountAccessConsentsConsentId_400" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_401">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_401" xmlns:q578="http://laegler.com/openbanking/soap/model" element="q578:DELETE_DeleteAccountAccessConsentsConsentId_401" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_403">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_403" xmlns:q579="http://laegler.com/openbanking/soap/model" element="q579:DELETE_DeleteAccountAccessConsentsConsentId_403" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_404">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_404" xmlns:q580="http://laegler.com/openbanking/soap/model" element="q580:DELETE_DeleteAccountAccessConsentsConsentId_404" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_405">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_405" xmlns:q581="http://laegler.com/openbanking/soap/model" element="q581:DELETE_DeleteAccountAccessConsentsConsentId_405" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_406">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_406" xmlns:q582="http://laegler.com/openbanking/soap/model" element="q582:DELETE_DeleteAccountAccessConsentsConsentId_406" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_429">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_429" xmlns:q583="http://laegler.com/openbanking/soap/model" element="q583:DELETE_DeleteAccountAccessConsentsConsentId_429" />
  </message>
  <message name="DELETE_DeleteAccountAccessConsentsConsentId_500">
    <part name="DELETE_DeleteAccountAccessConsentsConsentId_500" xmlns:q584="http://laegler.com/openbanking/soap/model" element="q584:DELETE_DeleteAccountAccessConsentsConsentId_500" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_InputMessage">
    <part name="GET_GetAccountAccessConsentsConsentId_InputMessage" xmlns:q585="http://laegler.com/openbanking/soap/model" element="q585:GET_GetAccountAccessConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_OutputMessage">
    <part name="GET_GetAccountAccessConsentsConsentId_OutputMessage" xmlns:q586="http://laegler.com/openbanking/soap/model" element="q586:GET_GetAccountAccessConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_400">
    <part name="GET_GetAccountAccessConsentsConsentId_400" xmlns:q587="http://laegler.com/openbanking/soap/model" element="q587:GET_GetAccountAccessConsentsConsentId_400" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_401">
    <part name="GET_GetAccountAccessConsentsConsentId_401" xmlns:q588="http://laegler.com/openbanking/soap/model" element="q588:GET_GetAccountAccessConsentsConsentId_401" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_403">
    <part name="GET_GetAccountAccessConsentsConsentId_403" xmlns:q589="http://laegler.com/openbanking/soap/model" element="q589:GET_GetAccountAccessConsentsConsentId_403" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_404">
    <part name="GET_GetAccountAccessConsentsConsentId_404" xmlns:q590="http://laegler.com/openbanking/soap/model" element="q590:GET_GetAccountAccessConsentsConsentId_404" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_405">
    <part name="GET_GetAccountAccessConsentsConsentId_405" xmlns:q591="http://laegler.com/openbanking/soap/model" element="q591:GET_GetAccountAccessConsentsConsentId_405" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_406">
    <part name="GET_GetAccountAccessConsentsConsentId_406" xmlns:q592="http://laegler.com/openbanking/soap/model" element="q592:GET_GetAccountAccessConsentsConsentId_406" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_429">
    <part name="GET_GetAccountAccessConsentsConsentId_429" xmlns:q593="http://laegler.com/openbanking/soap/model" element="q593:GET_GetAccountAccessConsentsConsentId_429" />
  </message>
  <message name="GET_GetAccountAccessConsentsConsentId_500">
    <part name="GET_GetAccountAccessConsentsConsentId_500" xmlns:q594="http://laegler.com/openbanking/soap/model" element="q594:GET_GetAccountAccessConsentsConsentId_500" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_InputMessage">
    <part name="GET_GetAccountsAccountIdParties_InputMessage" xmlns:q595="http://laegler.com/openbanking/soap/model" element="q595:GET_GetAccountsAccountIdParties_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_OutputMessage">
    <part name="GET_GetAccountsAccountIdParties_OutputMessage" xmlns:q596="http://laegler.com/openbanking/soap/model" element="q596:GET_GetAccountsAccountIdParties_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_400">
    <part name="GET_GetAccountsAccountIdParties_400" xmlns:q597="http://laegler.com/openbanking/soap/model" element="q597:GET_GetAccountsAccountIdParties_400" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_401">
    <part name="GET_GetAccountsAccountIdParties_401" xmlns:q598="http://laegler.com/openbanking/soap/model" element="q598:GET_GetAccountsAccountIdParties_401" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_403">
    <part name="GET_GetAccountsAccountIdParties_403" xmlns:q599="http://laegler.com/openbanking/soap/model" element="q599:GET_GetAccountsAccountIdParties_403" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_404">
    <part name="GET_GetAccountsAccountIdParties_404" xmlns:q600="http://laegler.com/openbanking/soap/model" element="q600:GET_GetAccountsAccountIdParties_404" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_405">
    <part name="GET_GetAccountsAccountIdParties_405" xmlns:q601="http://laegler.com/openbanking/soap/model" element="q601:GET_GetAccountsAccountIdParties_405" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_406">
    <part name="GET_GetAccountsAccountIdParties_406" xmlns:q602="http://laegler.com/openbanking/soap/model" element="q602:GET_GetAccountsAccountIdParties_406" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_429">
    <part name="GET_GetAccountsAccountIdParties_429" xmlns:q603="http://laegler.com/openbanking/soap/model" element="q603:GET_GetAccountsAccountIdParties_429" />
  </message>
  <message name="GET_GetAccountsAccountIdParties_500">
    <part name="GET_GetAccountsAccountIdParties_500" xmlns:q604="http://laegler.com/openbanking/soap/model" element="q604:GET_GetAccountsAccountIdParties_500" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_InputMessage">
    <part name="GET_GetAccountsAccountIdParty_InputMessage" xmlns:q605="http://laegler.com/openbanking/soap/model" element="q605:GET_GetAccountsAccountIdParty_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_OutputMessage">
    <part name="GET_GetAccountsAccountIdParty_OutputMessage" xmlns:q606="http://laegler.com/openbanking/soap/model" element="q606:GET_GetAccountsAccountIdParty_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_400">
    <part name="GET_GetAccountsAccountIdParty_400" xmlns:q607="http://laegler.com/openbanking/soap/model" element="q607:GET_GetAccountsAccountIdParty_400" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_401">
    <part name="GET_GetAccountsAccountIdParty_401" xmlns:q608="http://laegler.com/openbanking/soap/model" element="q608:GET_GetAccountsAccountIdParty_401" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_403">
    <part name="GET_GetAccountsAccountIdParty_403" xmlns:q609="http://laegler.com/openbanking/soap/model" element="q609:GET_GetAccountsAccountIdParty_403" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_404">
    <part name="GET_GetAccountsAccountIdParty_404" xmlns:q610="http://laegler.com/openbanking/soap/model" element="q610:GET_GetAccountsAccountIdParty_404" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_405">
    <part name="GET_GetAccountsAccountIdParty_405" xmlns:q611="http://laegler.com/openbanking/soap/model" element="q611:GET_GetAccountsAccountIdParty_405" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_406">
    <part name="GET_GetAccountsAccountIdParty_406" xmlns:q612="http://laegler.com/openbanking/soap/model" element="q612:GET_GetAccountsAccountIdParty_406" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_429">
    <part name="GET_GetAccountsAccountIdParty_429" xmlns:q613="http://laegler.com/openbanking/soap/model" element="q613:GET_GetAccountsAccountIdParty_429" />
  </message>
  <message name="GET_GetAccountsAccountIdParty_500">
    <part name="GET_GetAccountsAccountIdParty_500" xmlns:q614="http://laegler.com/openbanking/soap/model" element="q614:GET_GetAccountsAccountIdParty_500" />
  </message>
  <message name="GET_GetParty_InputMessage">
    <part name="GET_GetParty_InputMessage" xmlns:q615="http://laegler.com/openbanking/soap/model" element="q615:GET_GetParty_InputMessage" />
  </message>
  <message name="GET_GetParty_OutputMessage">
    <part name="GET_GetParty_OutputMessage" xmlns:q616="http://laegler.com/openbanking/soap/model" element="q616:GET_GetParty_OutputMessage" />
  </message>
  <message name="GET_GetParty_400">
    <part name="GET_GetParty_400" xmlns:q617="http://laegler.com/openbanking/soap/model" element="q617:GET_GetParty_400" />
  </message>
  <message name="GET_GetParty_401">
    <part name="GET_GetParty_401" xmlns:q618="http://laegler.com/openbanking/soap/model" element="q618:GET_GetParty_401" />
  </message>
  <message name="GET_GetParty_403">
    <part name="GET_GetParty_403" xmlns:q619="http://laegler.com/openbanking/soap/model" element="q619:GET_GetParty_403" />
  </message>
  <message name="GET_GetParty_404">
    <part name="GET_GetParty_404" xmlns:q620="http://laegler.com/openbanking/soap/model" element="q620:GET_GetParty_404" />
  </message>
  <message name="GET_GetParty_405">
    <part name="GET_GetParty_405" xmlns:q621="http://laegler.com/openbanking/soap/model" element="q621:GET_GetParty_405" />
  </message>
  <message name="GET_GetParty_406">
    <part name="GET_GetParty_406" xmlns:q622="http://laegler.com/openbanking/soap/model" element="q622:GET_GetParty_406" />
  </message>
  <message name="GET_GetParty_429">
    <part name="GET_GetParty_429" xmlns:q623="http://laegler.com/openbanking/soap/model" element="q623:GET_GetParty_429" />
  </message>
  <message name="GET_GetParty_500">
    <part name="GET_GetParty_500" xmlns:q624="http://laegler.com/openbanking/soap/model" element="q624:GET_GetParty_500" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_InputMessage">
    <part name="GET_GetAccountsAccountIdScheduledPayments_InputMessage" xmlns:q625="http://laegler.com/openbanking/soap/model" element="q625:GET_GetAccountsAccountIdScheduledPayments_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_OutputMessage">
    <part name="GET_GetAccountsAccountIdScheduledPayments_OutputMessage" xmlns:q626="http://laegler.com/openbanking/soap/model" element="q626:GET_GetAccountsAccountIdScheduledPayments_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_400">
    <part name="GET_GetAccountsAccountIdScheduledPayments_400" xmlns:q627="http://laegler.com/openbanking/soap/model" element="q627:GET_GetAccountsAccountIdScheduledPayments_400" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_401">
    <part name="GET_GetAccountsAccountIdScheduledPayments_401" xmlns:q628="http://laegler.com/openbanking/soap/model" element="q628:GET_GetAccountsAccountIdScheduledPayments_401" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_403">
    <part name="GET_GetAccountsAccountIdScheduledPayments_403" xmlns:q629="http://laegler.com/openbanking/soap/model" element="q629:GET_GetAccountsAccountIdScheduledPayments_403" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_404">
    <part name="GET_GetAccountsAccountIdScheduledPayments_404" xmlns:q630="http://laegler.com/openbanking/soap/model" element="q630:GET_GetAccountsAccountIdScheduledPayments_404" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_405">
    <part name="GET_GetAccountsAccountIdScheduledPayments_405" xmlns:q631="http://laegler.com/openbanking/soap/model" element="q631:GET_GetAccountsAccountIdScheduledPayments_405" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_406">
    <part name="GET_GetAccountsAccountIdScheduledPayments_406" xmlns:q632="http://laegler.com/openbanking/soap/model" element="q632:GET_GetAccountsAccountIdScheduledPayments_406" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_429">
    <part name="GET_GetAccountsAccountIdScheduledPayments_429" xmlns:q633="http://laegler.com/openbanking/soap/model" element="q633:GET_GetAccountsAccountIdScheduledPayments_429" />
  </message>
  <message name="GET_GetAccountsAccountIdScheduledPayments_500">
    <part name="GET_GetAccountsAccountIdScheduledPayments_500" xmlns:q634="http://laegler.com/openbanking/soap/model" element="q634:GET_GetAccountsAccountIdScheduledPayments_500" />
  </message>
  <message name="GET_GetScheduledPayments_InputMessage">
    <part name="GET_GetScheduledPayments_InputMessage" xmlns:q635="http://laegler.com/openbanking/soap/model" element="q635:GET_GetScheduledPayments_InputMessage" />
  </message>
  <message name="GET_GetScheduledPayments_OutputMessage">
    <part name="GET_GetScheduledPayments_OutputMessage" xmlns:q636="http://laegler.com/openbanking/soap/model" element="q636:GET_GetScheduledPayments_OutputMessage" />
  </message>
  <message name="GET_GetScheduledPayments_400">
    <part name="GET_GetScheduledPayments_400" xmlns:q637="http://laegler.com/openbanking/soap/model" element="q637:GET_GetScheduledPayments_400" />
  </message>
  <message name="GET_GetScheduledPayments_401">
    <part name="GET_GetScheduledPayments_401" xmlns:q638="http://laegler.com/openbanking/soap/model" element="q638:GET_GetScheduledPayments_401" />
  </message>
  <message name="GET_GetScheduledPayments_403">
    <part name="GET_GetScheduledPayments_403" xmlns:q639="http://laegler.com/openbanking/soap/model" element="q639:GET_GetScheduledPayments_403" />
  </message>
  <message name="GET_GetScheduledPayments_404">
    <part name="GET_GetScheduledPayments_404" xmlns:q640="http://laegler.com/openbanking/soap/model" element="q640:GET_GetScheduledPayments_404" />
  </message>
  <message name="GET_GetScheduledPayments_405">
    <part name="GET_GetScheduledPayments_405" xmlns:q641="http://laegler.com/openbanking/soap/model" element="q641:GET_GetScheduledPayments_405" />
  </message>
  <message name="GET_GetScheduledPayments_406">
    <part name="GET_GetScheduledPayments_406" xmlns:q642="http://laegler.com/openbanking/soap/model" element="q642:GET_GetScheduledPayments_406" />
  </message>
  <message name="GET_GetScheduledPayments_429">
    <part name="GET_GetScheduledPayments_429" xmlns:q643="http://laegler.com/openbanking/soap/model" element="q643:GET_GetScheduledPayments_429" />
  </message>
  <message name="GET_GetScheduledPayments_500">
    <part name="GET_GetScheduledPayments_500" xmlns:q644="http://laegler.com/openbanking/soap/model" element="q644:GET_GetScheduledPayments_500" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_InputMessage">
    <part name="GET_GetAccountsAccountIdProduct_InputMessage" xmlns:q645="http://laegler.com/openbanking/soap/model" element="q645:GET_GetAccountsAccountIdProduct_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_OutputMessage">
    <part name="GET_GetAccountsAccountIdProduct_OutputMessage" xmlns:q646="http://laegler.com/openbanking/soap/model" element="q646:GET_GetAccountsAccountIdProduct_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_400">
    <part name="GET_GetAccountsAccountIdProduct_400" xmlns:q647="http://laegler.com/openbanking/soap/model" element="q647:GET_GetAccountsAccountIdProduct_400" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_401">
    <part name="GET_GetAccountsAccountIdProduct_401" xmlns:q648="http://laegler.com/openbanking/soap/model" element="q648:GET_GetAccountsAccountIdProduct_401" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_403">
    <part name="GET_GetAccountsAccountIdProduct_403" xmlns:q649="http://laegler.com/openbanking/soap/model" element="q649:GET_GetAccountsAccountIdProduct_403" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_404">
    <part name="GET_GetAccountsAccountIdProduct_404" xmlns:q650="http://laegler.com/openbanking/soap/model" element="q650:GET_GetAccountsAccountIdProduct_404" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_405">
    <part name="GET_GetAccountsAccountIdProduct_405" xmlns:q651="http://laegler.com/openbanking/soap/model" element="q651:GET_GetAccountsAccountIdProduct_405" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_406">
    <part name="GET_GetAccountsAccountIdProduct_406" xmlns:q652="http://laegler.com/openbanking/soap/model" element="q652:GET_GetAccountsAccountIdProduct_406" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_429">
    <part name="GET_GetAccountsAccountIdProduct_429" xmlns:q653="http://laegler.com/openbanking/soap/model" element="q653:GET_GetAccountsAccountIdProduct_429" />
  </message>
  <message name="GET_GetAccountsAccountIdProduct_500">
    <part name="GET_GetAccountsAccountIdProduct_500" xmlns:q654="http://laegler.com/openbanking/soap/model" element="q654:GET_GetAccountsAccountIdProduct_500" />
  </message>
  <message name="GET_GetProducts_InputMessage">
    <part name="GET_GetProducts_InputMessage" xmlns:q655="http://laegler.com/openbanking/soap/model" element="q655:GET_GetProducts_InputMessage" />
  </message>
  <message name="GET_GetProducts_OutputMessage">
    <part name="GET_GetProducts_OutputMessage" xmlns:q656="http://laegler.com/openbanking/soap/model" element="q656:GET_GetProducts_OutputMessage" />
  </message>
  <message name="GET_GetProducts_400">
    <part name="GET_GetProducts_400" xmlns:q657="http://laegler.com/openbanking/soap/model" element="q657:GET_GetProducts_400" />
  </message>
  <message name="GET_GetProducts_401">
    <part name="GET_GetProducts_401" xmlns:q658="http://laegler.com/openbanking/soap/model" element="q658:GET_GetProducts_401" />
  </message>
  <message name="GET_GetProducts_403">
    <part name="GET_GetProducts_403" xmlns:q659="http://laegler.com/openbanking/soap/model" element="q659:GET_GetProducts_403" />
  </message>
  <message name="GET_GetProducts_404">
    <part name="GET_GetProducts_404" xmlns:q660="http://laegler.com/openbanking/soap/model" element="q660:GET_GetProducts_404" />
  </message>
  <message name="GET_GetProducts_405">
    <part name="GET_GetProducts_405" xmlns:q661="http://laegler.com/openbanking/soap/model" element="q661:GET_GetProducts_405" />
  </message>
  <message name="GET_GetProducts_406">
    <part name="GET_GetProducts_406" xmlns:q662="http://laegler.com/openbanking/soap/model" element="q662:GET_GetProducts_406" />
  </message>
  <message name="GET_GetProducts_429">
    <part name="GET_GetProducts_429" xmlns:q663="http://laegler.com/openbanking/soap/model" element="q663:GET_GetProducts_429" />
  </message>
  <message name="GET_GetProducts_500">
    <part name="GET_GetProducts_500" xmlns:q664="http://laegler.com/openbanking/soap/model" element="q664:GET_GetProducts_500" />
  </message>
  <message name="GET_GetAccounts_InputMessage">
    <part name="GET_GetAccounts_InputMessage" xmlns:q665="http://laegler.com/openbanking/soap/model" element="q665:GET_GetAccounts_InputMessage" />
  </message>
  <message name="GET_GetAccounts_OutputMessage">
    <part name="GET_GetAccounts_OutputMessage" xmlns:q666="http://laegler.com/openbanking/soap/model" element="q666:GET_GetAccounts_OutputMessage" />
  </message>
  <message name="GET_GetAccounts_400">
    <part name="GET_GetAccounts_400" xmlns:q667="http://laegler.com/openbanking/soap/model" element="q667:GET_GetAccounts_400" />
  </message>
  <message name="GET_GetAccounts_401">
    <part name="GET_GetAccounts_401" xmlns:q668="http://laegler.com/openbanking/soap/model" element="q668:GET_GetAccounts_401" />
  </message>
  <message name="GET_GetAccounts_403">
    <part name="GET_GetAccounts_403" xmlns:q669="http://laegler.com/openbanking/soap/model" element="q669:GET_GetAccounts_403" />
  </message>
  <message name="GET_GetAccounts_404">
    <part name="GET_GetAccounts_404" xmlns:q670="http://laegler.com/openbanking/soap/model" element="q670:GET_GetAccounts_404" />
  </message>
  <message name="GET_GetAccounts_405">
    <part name="GET_GetAccounts_405" xmlns:q671="http://laegler.com/openbanking/soap/model" element="q671:GET_GetAccounts_405" />
  </message>
  <message name="GET_GetAccounts_406">
    <part name="GET_GetAccounts_406" xmlns:q672="http://laegler.com/openbanking/soap/model" element="q672:GET_GetAccounts_406" />
  </message>
  <message name="GET_GetAccounts_429">
    <part name="GET_GetAccounts_429" xmlns:q673="http://laegler.com/openbanking/soap/model" element="q673:GET_GetAccounts_429" />
  </message>
  <message name="GET_GetAccounts_500">
    <part name="GET_GetAccounts_500" xmlns:q674="http://laegler.com/openbanking/soap/model" element="q674:GET_GetAccounts_500" />
  </message>
  <message name="GET_GetAccountsAccountId_InputMessage">
    <part name="GET_GetAccountsAccountId_InputMessage" xmlns:q675="http://laegler.com/openbanking/soap/model" element="q675:GET_GetAccountsAccountId_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountId_OutputMessage">
    <part name="GET_GetAccountsAccountId_OutputMessage" xmlns:q676="http://laegler.com/openbanking/soap/model" element="q676:GET_GetAccountsAccountId_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountId_400">
    <part name="GET_GetAccountsAccountId_400" xmlns:q677="http://laegler.com/openbanking/soap/model" element="q677:GET_GetAccountsAccountId_400" />
  </message>
  <message name="GET_GetAccountsAccountId_401">
    <part name="GET_GetAccountsAccountId_401" xmlns:q678="http://laegler.com/openbanking/soap/model" element="q678:GET_GetAccountsAccountId_401" />
  </message>
  <message name="GET_GetAccountsAccountId_403">
    <part name="GET_GetAccountsAccountId_403" xmlns:q679="http://laegler.com/openbanking/soap/model" element="q679:GET_GetAccountsAccountId_403" />
  </message>
  <message name="GET_GetAccountsAccountId_404">
    <part name="GET_GetAccountsAccountId_404" xmlns:q680="http://laegler.com/openbanking/soap/model" element="q680:GET_GetAccountsAccountId_404" />
  </message>
  <message name="GET_GetAccountsAccountId_405">
    <part name="GET_GetAccountsAccountId_405" xmlns:q681="http://laegler.com/openbanking/soap/model" element="q681:GET_GetAccountsAccountId_405" />
  </message>
  <message name="GET_GetAccountsAccountId_406">
    <part name="GET_GetAccountsAccountId_406" xmlns:q682="http://laegler.com/openbanking/soap/model" element="q682:GET_GetAccountsAccountId_406" />
  </message>
  <message name="GET_GetAccountsAccountId_429">
    <part name="GET_GetAccountsAccountId_429" xmlns:q683="http://laegler.com/openbanking/soap/model" element="q683:GET_GetAccountsAccountId_429" />
  </message>
  <message name="GET_GetAccountsAccountId_500">
    <part name="GET_GetAccountsAccountId_500" xmlns:q684="http://laegler.com/openbanking/soap/model" element="q684:GET_GetAccountsAccountId_500" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_InputMessage">
    <part name="GET_GetAccountsAccountIdBalances_InputMessage" xmlns:q685="http://laegler.com/openbanking/soap/model" element="q685:GET_GetAccountsAccountIdBalances_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_OutputMessage">
    <part name="GET_GetAccountsAccountIdBalances_OutputMessage" xmlns:q686="http://laegler.com/openbanking/soap/model" element="q686:GET_GetAccountsAccountIdBalances_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_400">
    <part name="GET_GetAccountsAccountIdBalances_400" xmlns:q687="http://laegler.com/openbanking/soap/model" element="q687:GET_GetAccountsAccountIdBalances_400" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_401">
    <part name="GET_GetAccountsAccountIdBalances_401" xmlns:q688="http://laegler.com/openbanking/soap/model" element="q688:GET_GetAccountsAccountIdBalances_401" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_403">
    <part name="GET_GetAccountsAccountIdBalances_403" xmlns:q689="http://laegler.com/openbanking/soap/model" element="q689:GET_GetAccountsAccountIdBalances_403" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_404">
    <part name="GET_GetAccountsAccountIdBalances_404" xmlns:q690="http://laegler.com/openbanking/soap/model" element="q690:GET_GetAccountsAccountIdBalances_404" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_405">
    <part name="GET_GetAccountsAccountIdBalances_405" xmlns:q691="http://laegler.com/openbanking/soap/model" element="q691:GET_GetAccountsAccountIdBalances_405" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_406">
    <part name="GET_GetAccountsAccountIdBalances_406" xmlns:q692="http://laegler.com/openbanking/soap/model" element="q692:GET_GetAccountsAccountIdBalances_406" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_429">
    <part name="GET_GetAccountsAccountIdBalances_429" xmlns:q693="http://laegler.com/openbanking/soap/model" element="q693:GET_GetAccountsAccountIdBalances_429" />
  </message>
  <message name="GET_GetAccountsAccountIdBalances_500">
    <part name="GET_GetAccountsAccountIdBalances_500" xmlns:q694="http://laegler.com/openbanking/soap/model" element="q694:GET_GetAccountsAccountIdBalances_500" />
  </message>
  <message name="GET_GetBalances_InputMessage">
    <part name="GET_GetBalances_InputMessage" xmlns:q695="http://laegler.com/openbanking/soap/model" element="q695:GET_GetBalances_InputMessage" />
  </message>
  <message name="GET_GetBalances_OutputMessage">
    <part name="GET_GetBalances_OutputMessage" xmlns:q696="http://laegler.com/openbanking/soap/model" element="q696:GET_GetBalances_OutputMessage" />
  </message>
  <message name="GET_GetBalances_400">
    <part name="GET_GetBalances_400" xmlns:q697="http://laegler.com/openbanking/soap/model" element="q697:GET_GetBalances_400" />
  </message>
  <message name="GET_GetBalances_401">
    <part name="GET_GetBalances_401" xmlns:q698="http://laegler.com/openbanking/soap/model" element="q698:GET_GetBalances_401" />
  </message>
  <message name="GET_GetBalances_403">
    <part name="GET_GetBalances_403" xmlns:q699="http://laegler.com/openbanking/soap/model" element="q699:GET_GetBalances_403" />
  </message>
  <message name="GET_GetBalances_404">
    <part name="GET_GetBalances_404" xmlns:q700="http://laegler.com/openbanking/soap/model" element="q700:GET_GetBalances_404" />
  </message>
  <message name="GET_GetBalances_405">
    <part name="GET_GetBalances_405" xmlns:q701="http://laegler.com/openbanking/soap/model" element="q701:GET_GetBalances_405" />
  </message>
  <message name="GET_GetBalances_406">
    <part name="GET_GetBalances_406" xmlns:q702="http://laegler.com/openbanking/soap/model" element="q702:GET_GetBalances_406" />
  </message>
  <message name="GET_GetBalances_429">
    <part name="GET_GetBalances_429" xmlns:q703="http://laegler.com/openbanking/soap/model" element="q703:GET_GetBalances_429" />
  </message>
  <message name="GET_GetBalances_500">
    <part name="GET_GetBalances_500" xmlns:q704="http://laegler.com/openbanking/soap/model" element="q704:GET_GetBalances_500" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_InputMessage">
    <part name="GET_GetAccountsAccountIdBeneficiaries_InputMessage" xmlns:q705="http://laegler.com/openbanking/soap/model" element="q705:GET_GetAccountsAccountIdBeneficiaries_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_OutputMessage">
    <part name="GET_GetAccountsAccountIdBeneficiaries_OutputMessage" xmlns:q706="http://laegler.com/openbanking/soap/model" element="q706:GET_GetAccountsAccountIdBeneficiaries_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_400">
    <part name="GET_GetAccountsAccountIdBeneficiaries_400" xmlns:q707="http://laegler.com/openbanking/soap/model" element="q707:GET_GetAccountsAccountIdBeneficiaries_400" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_401">
    <part name="GET_GetAccountsAccountIdBeneficiaries_401" xmlns:q708="http://laegler.com/openbanking/soap/model" element="q708:GET_GetAccountsAccountIdBeneficiaries_401" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_403">
    <part name="GET_GetAccountsAccountIdBeneficiaries_403" xmlns:q709="http://laegler.com/openbanking/soap/model" element="q709:GET_GetAccountsAccountIdBeneficiaries_403" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_404">
    <part name="GET_GetAccountsAccountIdBeneficiaries_404" xmlns:q710="http://laegler.com/openbanking/soap/model" element="q710:GET_GetAccountsAccountIdBeneficiaries_404" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_405">
    <part name="GET_GetAccountsAccountIdBeneficiaries_405" xmlns:q711="http://laegler.com/openbanking/soap/model" element="q711:GET_GetAccountsAccountIdBeneficiaries_405" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_406">
    <part name="GET_GetAccountsAccountIdBeneficiaries_406" xmlns:q712="http://laegler.com/openbanking/soap/model" element="q712:GET_GetAccountsAccountIdBeneficiaries_406" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_429">
    <part name="GET_GetAccountsAccountIdBeneficiaries_429" xmlns:q713="http://laegler.com/openbanking/soap/model" element="q713:GET_GetAccountsAccountIdBeneficiaries_429" />
  </message>
  <message name="GET_GetAccountsAccountIdBeneficiaries_500">
    <part name="GET_GetAccountsAccountIdBeneficiaries_500" xmlns:q714="http://laegler.com/openbanking/soap/model" element="q714:GET_GetAccountsAccountIdBeneficiaries_500" />
  </message>
  <message name="GET_GetBeneficiaries_InputMessage">
    <part name="GET_GetBeneficiaries_InputMessage" xmlns:q715="http://laegler.com/openbanking/soap/model" element="q715:GET_GetBeneficiaries_InputMessage" />
  </message>
  <message name="GET_GetBeneficiaries_OutputMessage">
    <part name="GET_GetBeneficiaries_OutputMessage" xmlns:q716="http://laegler.com/openbanking/soap/model" element="q716:GET_GetBeneficiaries_OutputMessage" />
  </message>
  <message name="GET_GetBeneficiaries_400">
    <part name="GET_GetBeneficiaries_400" xmlns:q717="http://laegler.com/openbanking/soap/model" element="q717:GET_GetBeneficiaries_400" />
  </message>
  <message name="GET_GetBeneficiaries_401">
    <part name="GET_GetBeneficiaries_401" xmlns:q718="http://laegler.com/openbanking/soap/model" element="q718:GET_GetBeneficiaries_401" />
  </message>
  <message name="GET_GetBeneficiaries_403">
    <part name="GET_GetBeneficiaries_403" xmlns:q719="http://laegler.com/openbanking/soap/model" element="q719:GET_GetBeneficiaries_403" />
  </message>
  <message name="GET_GetBeneficiaries_404">
    <part name="GET_GetBeneficiaries_404" xmlns:q720="http://laegler.com/openbanking/soap/model" element="q720:GET_GetBeneficiaries_404" />
  </message>
  <message name="GET_GetBeneficiaries_405">
    <part name="GET_GetBeneficiaries_405" xmlns:q721="http://laegler.com/openbanking/soap/model" element="q721:GET_GetBeneficiaries_405" />
  </message>
  <message name="GET_GetBeneficiaries_406">
    <part name="GET_GetBeneficiaries_406" xmlns:q722="http://laegler.com/openbanking/soap/model" element="q722:GET_GetBeneficiaries_406" />
  </message>
  <message name="GET_GetBeneficiaries_429">
    <part name="GET_GetBeneficiaries_429" xmlns:q723="http://laegler.com/openbanking/soap/model" element="q723:GET_GetBeneficiaries_429" />
  </message>
  <message name="GET_GetBeneficiaries_500">
    <part name="GET_GetBeneficiaries_500" xmlns:q724="http://laegler.com/openbanking/soap/model" element="q724:GET_GetBeneficiaries_500" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_InputMessage">
    <part name="GET_GetAccountsAccountIdStatements_InputMessage" xmlns:q725="http://laegler.com/openbanking/soap/model" element="q725:GET_GetAccountsAccountIdStatements_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_OutputMessage">
    <part name="GET_GetAccountsAccountIdStatements_OutputMessage" xmlns:q726="http://laegler.com/openbanking/soap/model" element="q726:GET_GetAccountsAccountIdStatements_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_400">
    <part name="GET_GetAccountsAccountIdStatements_400" xmlns:q727="http://laegler.com/openbanking/soap/model" element="q727:GET_GetAccountsAccountIdStatements_400" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_401">
    <part name="GET_GetAccountsAccountIdStatements_401" xmlns:q728="http://laegler.com/openbanking/soap/model" element="q728:GET_GetAccountsAccountIdStatements_401" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_403">
    <part name="GET_GetAccountsAccountIdStatements_403" xmlns:q729="http://laegler.com/openbanking/soap/model" element="q729:GET_GetAccountsAccountIdStatements_403" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_404">
    <part name="GET_GetAccountsAccountIdStatements_404" xmlns:q730="http://laegler.com/openbanking/soap/model" element="q730:GET_GetAccountsAccountIdStatements_404" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_405">
    <part name="GET_GetAccountsAccountIdStatements_405" xmlns:q731="http://laegler.com/openbanking/soap/model" element="q731:GET_GetAccountsAccountIdStatements_405" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_406">
    <part name="GET_GetAccountsAccountIdStatements_406" xmlns:q732="http://laegler.com/openbanking/soap/model" element="q732:GET_GetAccountsAccountIdStatements_406" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_429">
    <part name="GET_GetAccountsAccountIdStatements_429" xmlns:q733="http://laegler.com/openbanking/soap/model" element="q733:GET_GetAccountsAccountIdStatements_429" />
  </message>
  <message name="GET_GetAccountsAccountIdStatements_500">
    <part name="GET_GetAccountsAccountIdStatements_500" xmlns:q734="http://laegler.com/openbanking/soap/model" element="q734:GET_GetAccountsAccountIdStatements_500" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_InputMessage">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_InputMessage" xmlns:q735="http://laegler.com/openbanking/soap/model" element="q735:GET_GetAccountsAccountIdStatementsStatementId_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_OutputMessage">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_OutputMessage" xmlns:q736="http://laegler.com/openbanking/soap/model" element="q736:GET_GetAccountsAccountIdStatementsStatementId_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_400">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_400" xmlns:q737="http://laegler.com/openbanking/soap/model" element="q737:GET_GetAccountsAccountIdStatementsStatementId_400" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_401">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_401" xmlns:q738="http://laegler.com/openbanking/soap/model" element="q738:GET_GetAccountsAccountIdStatementsStatementId_401" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_403">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_403" xmlns:q739="http://laegler.com/openbanking/soap/model" element="q739:GET_GetAccountsAccountIdStatementsStatementId_403" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_404">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_404" xmlns:q740="http://laegler.com/openbanking/soap/model" element="q740:GET_GetAccountsAccountIdStatementsStatementId_404" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_405">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_405" xmlns:q741="http://laegler.com/openbanking/soap/model" element="q741:GET_GetAccountsAccountIdStatementsStatementId_405" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_406">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_406" xmlns:q742="http://laegler.com/openbanking/soap/model" element="q742:GET_GetAccountsAccountIdStatementsStatementId_406" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_429">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_429" xmlns:q743="http://laegler.com/openbanking/soap/model" element="q743:GET_GetAccountsAccountIdStatementsStatementId_429" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementId_500">
    <part name="GET_GetAccountsAccountIdStatementsStatementId_500" xmlns:q744="http://laegler.com/openbanking/soap/model" element="q744:GET_GetAccountsAccountIdStatementsStatementId_500" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage" xmlns:q745="http://laegler.com/openbanking/soap/model" element="q745:GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage" xmlns:q746="http://laegler.com/openbanking/soap/model" element="q746:GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_400">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_400" xmlns:q747="http://laegler.com/openbanking/soap/model" element="q747:GET_GetAccountsAccountIdStatementsStatementIdFile_400" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_401">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_401" xmlns:q748="http://laegler.com/openbanking/soap/model" element="q748:GET_GetAccountsAccountIdStatementsStatementIdFile_401" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_403">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_403" xmlns:q749="http://laegler.com/openbanking/soap/model" element="q749:GET_GetAccountsAccountIdStatementsStatementIdFile_403" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_404">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_404" xmlns:q750="http://laegler.com/openbanking/soap/model" element="q750:GET_GetAccountsAccountIdStatementsStatementIdFile_404" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_405">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_405" xmlns:q751="http://laegler.com/openbanking/soap/model" element="q751:GET_GetAccountsAccountIdStatementsStatementIdFile_405" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_406">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_406" xmlns:q752="http://laegler.com/openbanking/soap/model" element="q752:GET_GetAccountsAccountIdStatementsStatementIdFile_406" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_429">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_429" xmlns:q753="http://laegler.com/openbanking/soap/model" element="q753:GET_GetAccountsAccountIdStatementsStatementIdFile_429" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdFile_500">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdFile_500" xmlns:q754="http://laegler.com/openbanking/soap/model" element="q754:GET_GetAccountsAccountIdStatementsStatementIdFile_500" />
  </message>
  <message name="GET_GetStatements_InputMessage">
    <part name="GET_GetStatements_InputMessage" xmlns:q755="http://laegler.com/openbanking/soap/model" element="q755:GET_GetStatements_InputMessage" />
  </message>
  <message name="GET_GetStatements_OutputMessage">
    <part name="GET_GetStatements_OutputMessage" xmlns:q756="http://laegler.com/openbanking/soap/model" element="q756:GET_GetStatements_OutputMessage" />
  </message>
  <message name="GET_GetStatements_400">
    <part name="GET_GetStatements_400" xmlns:q757="http://laegler.com/openbanking/soap/model" element="q757:GET_GetStatements_400" />
  </message>
  <message name="GET_GetStatements_401">
    <part name="GET_GetStatements_401" xmlns:q758="http://laegler.com/openbanking/soap/model" element="q758:GET_GetStatements_401" />
  </message>
  <message name="GET_GetStatements_403">
    <part name="GET_GetStatements_403" xmlns:q759="http://laegler.com/openbanking/soap/model" element="q759:GET_GetStatements_403" />
  </message>
  <message name="GET_GetStatements_404">
    <part name="GET_GetStatements_404" xmlns:q760="http://laegler.com/openbanking/soap/model" element="q760:GET_GetStatements_404" />
  </message>
  <message name="GET_GetStatements_405">
    <part name="GET_GetStatements_405" xmlns:q761="http://laegler.com/openbanking/soap/model" element="q761:GET_GetStatements_405" />
  </message>
  <message name="GET_GetStatements_406">
    <part name="GET_GetStatements_406" xmlns:q762="http://laegler.com/openbanking/soap/model" element="q762:GET_GetStatements_406" />
  </message>
  <message name="GET_GetStatements_429">
    <part name="GET_GetStatements_429" xmlns:q763="http://laegler.com/openbanking/soap/model" element="q763:GET_GetStatements_429" />
  </message>
  <message name="GET_GetStatements_500">
    <part name="GET_GetStatements_500" xmlns:q764="http://laegler.com/openbanking/soap/model" element="q764:GET_GetStatements_500" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_InputMessage">
    <part name="GET_GetAccountsAccountIdStandingOrders_InputMessage" xmlns:q765="http://laegler.com/openbanking/soap/model" element="q765:GET_GetAccountsAccountIdStandingOrders_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_OutputMessage">
    <part name="GET_GetAccountsAccountIdStandingOrders_OutputMessage" xmlns:q766="http://laegler.com/openbanking/soap/model" element="q766:GET_GetAccountsAccountIdStandingOrders_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_400">
    <part name="GET_GetAccountsAccountIdStandingOrders_400" xmlns:q767="http://laegler.com/openbanking/soap/model" element="q767:GET_GetAccountsAccountIdStandingOrders_400" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_401">
    <part name="GET_GetAccountsAccountIdStandingOrders_401" xmlns:q768="http://laegler.com/openbanking/soap/model" element="q768:GET_GetAccountsAccountIdStandingOrders_401" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_403">
    <part name="GET_GetAccountsAccountIdStandingOrders_403" xmlns:q769="http://laegler.com/openbanking/soap/model" element="q769:GET_GetAccountsAccountIdStandingOrders_403" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_404">
    <part name="GET_GetAccountsAccountIdStandingOrders_404" xmlns:q770="http://laegler.com/openbanking/soap/model" element="q770:GET_GetAccountsAccountIdStandingOrders_404" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_405">
    <part name="GET_GetAccountsAccountIdStandingOrders_405" xmlns:q771="http://laegler.com/openbanking/soap/model" element="q771:GET_GetAccountsAccountIdStandingOrders_405" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_406">
    <part name="GET_GetAccountsAccountIdStandingOrders_406" xmlns:q772="http://laegler.com/openbanking/soap/model" element="q772:GET_GetAccountsAccountIdStandingOrders_406" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_429">
    <part name="GET_GetAccountsAccountIdStandingOrders_429" xmlns:q773="http://laegler.com/openbanking/soap/model" element="q773:GET_GetAccountsAccountIdStandingOrders_429" />
  </message>
  <message name="GET_GetAccountsAccountIdStandingOrders_500">
    <part name="GET_GetAccountsAccountIdStandingOrders_500" xmlns:q774="http://laegler.com/openbanking/soap/model" element="q774:GET_GetAccountsAccountIdStandingOrders_500" />
  </message>
  <message name="GET_GetStandingOrders_InputMessage">
    <part name="GET_GetStandingOrders_InputMessage" xmlns:q775="http://laegler.com/openbanking/soap/model" element="q775:GET_GetStandingOrders_InputMessage" />
  </message>
  <message name="GET_GetStandingOrders_OutputMessage">
    <part name="GET_GetStandingOrders_OutputMessage" xmlns:q776="http://laegler.com/openbanking/soap/model" element="q776:GET_GetStandingOrders_OutputMessage" />
  </message>
  <message name="GET_GetStandingOrders_400">
    <part name="GET_GetStandingOrders_400" xmlns:q777="http://laegler.com/openbanking/soap/model" element="q777:GET_GetStandingOrders_400" />
  </message>
  <message name="GET_GetStandingOrders_401">
    <part name="GET_GetStandingOrders_401" xmlns:q778="http://laegler.com/openbanking/soap/model" element="q778:GET_GetStandingOrders_401" />
  </message>
  <message name="GET_GetStandingOrders_403">
    <part name="GET_GetStandingOrders_403" xmlns:q779="http://laegler.com/openbanking/soap/model" element="q779:GET_GetStandingOrders_403" />
  </message>
  <message name="GET_GetStandingOrders_404">
    <part name="GET_GetStandingOrders_404" xmlns:q780="http://laegler.com/openbanking/soap/model" element="q780:GET_GetStandingOrders_404" />
  </message>
  <message name="GET_GetStandingOrders_405">
    <part name="GET_GetStandingOrders_405" xmlns:q781="http://laegler.com/openbanking/soap/model" element="q781:GET_GetStandingOrders_405" />
  </message>
  <message name="GET_GetStandingOrders_406">
    <part name="GET_GetStandingOrders_406" xmlns:q782="http://laegler.com/openbanking/soap/model" element="q782:GET_GetStandingOrders_406" />
  </message>
  <message name="GET_GetStandingOrders_429">
    <part name="GET_GetStandingOrders_429" xmlns:q783="http://laegler.com/openbanking/soap/model" element="q783:GET_GetStandingOrders_429" />
  </message>
  <message name="GET_GetStandingOrders_500">
    <part name="GET_GetStandingOrders_500" xmlns:q784="http://laegler.com/openbanking/soap/model" element="q784:GET_GetStandingOrders_500" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage" xmlns:q785="http://laegler.com/openbanking/soap/model" element="q785:GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage" xmlns:q786="http://laegler.com/openbanking/soap/model" element="q786:GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_400">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_400" xmlns:q787="http://laegler.com/openbanking/soap/model" element="q787:GET_GetAccountsAccountIdStatementsStatementIdTransactions_400" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_401">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_401" xmlns:q788="http://laegler.com/openbanking/soap/model" element="q788:GET_GetAccountsAccountIdStatementsStatementIdTransactions_401" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_403">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_403" xmlns:q789="http://laegler.com/openbanking/soap/model" element="q789:GET_GetAccountsAccountIdStatementsStatementIdTransactions_403" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_404">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_404" xmlns:q790="http://laegler.com/openbanking/soap/model" element="q790:GET_GetAccountsAccountIdStatementsStatementIdTransactions_404" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_405">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_405" xmlns:q791="http://laegler.com/openbanking/soap/model" element="q791:GET_GetAccountsAccountIdStatementsStatementIdTransactions_405" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_406">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_406" xmlns:q792="http://laegler.com/openbanking/soap/model" element="q792:GET_GetAccountsAccountIdStatementsStatementIdTransactions_406" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_429">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_429" xmlns:q793="http://laegler.com/openbanking/soap/model" element="q793:GET_GetAccountsAccountIdStatementsStatementIdTransactions_429" />
  </message>
  <message name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_500">
    <part name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_500" xmlns:q794="http://laegler.com/openbanking/soap/model" element="q794:GET_GetAccountsAccountIdStatementsStatementIdTransactions_500" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_InputMessage">
    <part name="GET_GetAccountsAccountIdTransactions_InputMessage" xmlns:q795="http://laegler.com/openbanking/soap/model" element="q795:GET_GetAccountsAccountIdTransactions_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_OutputMessage">
    <part name="GET_GetAccountsAccountIdTransactions_OutputMessage" xmlns:q796="http://laegler.com/openbanking/soap/model" element="q796:GET_GetAccountsAccountIdTransactions_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_400">
    <part name="GET_GetAccountsAccountIdTransactions_400" xmlns:q797="http://laegler.com/openbanking/soap/model" element="q797:GET_GetAccountsAccountIdTransactions_400" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_401">
    <part name="GET_GetAccountsAccountIdTransactions_401" xmlns:q798="http://laegler.com/openbanking/soap/model" element="q798:GET_GetAccountsAccountIdTransactions_401" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_403">
    <part name="GET_GetAccountsAccountIdTransactions_403" xmlns:q799="http://laegler.com/openbanking/soap/model" element="q799:GET_GetAccountsAccountIdTransactions_403" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_404">
    <part name="GET_GetAccountsAccountIdTransactions_404" xmlns:q800="http://laegler.com/openbanking/soap/model" element="q800:GET_GetAccountsAccountIdTransactions_404" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_405">
    <part name="GET_GetAccountsAccountIdTransactions_405" xmlns:q801="http://laegler.com/openbanking/soap/model" element="q801:GET_GetAccountsAccountIdTransactions_405" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_406">
    <part name="GET_GetAccountsAccountIdTransactions_406" xmlns:q802="http://laegler.com/openbanking/soap/model" element="q802:GET_GetAccountsAccountIdTransactions_406" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_429">
    <part name="GET_GetAccountsAccountIdTransactions_429" xmlns:q803="http://laegler.com/openbanking/soap/model" element="q803:GET_GetAccountsAccountIdTransactions_429" />
  </message>
  <message name="GET_GetAccountsAccountIdTransactions_500">
    <part name="GET_GetAccountsAccountIdTransactions_500" xmlns:q804="http://laegler.com/openbanking/soap/model" element="q804:GET_GetAccountsAccountIdTransactions_500" />
  </message>
  <message name="GET_GetTransactions_InputMessage">
    <part name="GET_GetTransactions_InputMessage" xmlns:q805="http://laegler.com/openbanking/soap/model" element="q805:GET_GetTransactions_InputMessage" />
  </message>
  <message name="GET_GetTransactions_OutputMessage">
    <part name="GET_GetTransactions_OutputMessage" xmlns:q806="http://laegler.com/openbanking/soap/model" element="q806:GET_GetTransactions_OutputMessage" />
  </message>
  <message name="GET_GetTransactions_400">
    <part name="GET_GetTransactions_400" xmlns:q807="http://laegler.com/openbanking/soap/model" element="q807:GET_GetTransactions_400" />
  </message>
  <message name="GET_GetTransactions_401">
    <part name="GET_GetTransactions_401" xmlns:q808="http://laegler.com/openbanking/soap/model" element="q808:GET_GetTransactions_401" />
  </message>
  <message name="GET_GetTransactions_403">
    <part name="GET_GetTransactions_403" xmlns:q809="http://laegler.com/openbanking/soap/model" element="q809:GET_GetTransactions_403" />
  </message>
  <message name="GET_GetTransactions_404">
    <part name="GET_GetTransactions_404" xmlns:q810="http://laegler.com/openbanking/soap/model" element="q810:GET_GetTransactions_404" />
  </message>
  <message name="GET_GetTransactions_405">
    <part name="GET_GetTransactions_405" xmlns:q811="http://laegler.com/openbanking/soap/model" element="q811:GET_GetTransactions_405" />
  </message>
  <message name="GET_GetTransactions_406">
    <part name="GET_GetTransactions_406" xmlns:q812="http://laegler.com/openbanking/soap/model" element="q812:GET_GetTransactions_406" />
  </message>
  <message name="GET_GetTransactions_429">
    <part name="GET_GetTransactions_429" xmlns:q813="http://laegler.com/openbanking/soap/model" element="q813:GET_GetTransactions_429" />
  </message>
  <message name="GET_GetTransactions_500">
    <part name="GET_GetTransactions_500" xmlns:q814="http://laegler.com/openbanking/soap/model" element="q814:GET_GetTransactions_500" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_InputMessage">
    <part name="GET_GetAccountsAccountIdOffers_InputMessage" xmlns:q815="http://laegler.com/openbanking/soap/model" element="q815:GET_GetAccountsAccountIdOffers_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_OutputMessage">
    <part name="GET_GetAccountsAccountIdOffers_OutputMessage" xmlns:q816="http://laegler.com/openbanking/soap/model" element="q816:GET_GetAccountsAccountIdOffers_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_400">
    <part name="GET_GetAccountsAccountIdOffers_400" xmlns:q817="http://laegler.com/openbanking/soap/model" element="q817:GET_GetAccountsAccountIdOffers_400" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_401">
    <part name="GET_GetAccountsAccountIdOffers_401" xmlns:q818="http://laegler.com/openbanking/soap/model" element="q818:GET_GetAccountsAccountIdOffers_401" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_403">
    <part name="GET_GetAccountsAccountIdOffers_403" xmlns:q819="http://laegler.com/openbanking/soap/model" element="q819:GET_GetAccountsAccountIdOffers_403" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_404">
    <part name="GET_GetAccountsAccountIdOffers_404" xmlns:q820="http://laegler.com/openbanking/soap/model" element="q820:GET_GetAccountsAccountIdOffers_404" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_405">
    <part name="GET_GetAccountsAccountIdOffers_405" xmlns:q821="http://laegler.com/openbanking/soap/model" element="q821:GET_GetAccountsAccountIdOffers_405" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_406">
    <part name="GET_GetAccountsAccountIdOffers_406" xmlns:q822="http://laegler.com/openbanking/soap/model" element="q822:GET_GetAccountsAccountIdOffers_406" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_429">
    <part name="GET_GetAccountsAccountIdOffers_429" xmlns:q823="http://laegler.com/openbanking/soap/model" element="q823:GET_GetAccountsAccountIdOffers_429" />
  </message>
  <message name="GET_GetAccountsAccountIdOffers_500">
    <part name="GET_GetAccountsAccountIdOffers_500" xmlns:q824="http://laegler.com/openbanking/soap/model" element="q824:GET_GetAccountsAccountIdOffers_500" />
  </message>
  <message name="GET_GetOffers_InputMessage">
    <part name="GET_GetOffers_InputMessage" xmlns:q825="http://laegler.com/openbanking/soap/model" element="q825:GET_GetOffers_InputMessage" />
  </message>
  <message name="GET_GetOffers_OutputMessage">
    <part name="GET_GetOffers_OutputMessage" xmlns:q826="http://laegler.com/openbanking/soap/model" element="q826:GET_GetOffers_OutputMessage" />
  </message>
  <message name="GET_GetOffers_400">
    <part name="GET_GetOffers_400" xmlns:q827="http://laegler.com/openbanking/soap/model" element="q827:GET_GetOffers_400" />
  </message>
  <message name="GET_GetOffers_401">
    <part name="GET_GetOffers_401" xmlns:q828="http://laegler.com/openbanking/soap/model" element="q828:GET_GetOffers_401" />
  </message>
  <message name="GET_GetOffers_403">
    <part name="GET_GetOffers_403" xmlns:q829="http://laegler.com/openbanking/soap/model" element="q829:GET_GetOffers_403" />
  </message>
  <message name="GET_GetOffers_404">
    <part name="GET_GetOffers_404" xmlns:q830="http://laegler.com/openbanking/soap/model" element="q830:GET_GetOffers_404" />
  </message>
  <message name="GET_GetOffers_405">
    <part name="GET_GetOffers_405" xmlns:q831="http://laegler.com/openbanking/soap/model" element="q831:GET_GetOffers_405" />
  </message>
  <message name="GET_GetOffers_406">
    <part name="GET_GetOffers_406" xmlns:q832="http://laegler.com/openbanking/soap/model" element="q832:GET_GetOffers_406" />
  </message>
  <message name="GET_GetOffers_429">
    <part name="GET_GetOffers_429" xmlns:q833="http://laegler.com/openbanking/soap/model" element="q833:GET_GetOffers_429" />
  </message>
  <message name="GET_GetOffers_500">
    <part name="GET_GetOffers_500" xmlns:q834="http://laegler.com/openbanking/soap/model" element="q834:GET_GetOffers_500" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_InputMessage">
    <part name="GET_GetAccountsAccountIdDirectDebits_InputMessage" xmlns:q835="http://laegler.com/openbanking/soap/model" element="q835:GET_GetAccountsAccountIdDirectDebits_InputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_OutputMessage">
    <part name="GET_GetAccountsAccountIdDirectDebits_OutputMessage" xmlns:q836="http://laegler.com/openbanking/soap/model" element="q836:GET_GetAccountsAccountIdDirectDebits_OutputMessage" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_400">
    <part name="GET_GetAccountsAccountIdDirectDebits_400" xmlns:q837="http://laegler.com/openbanking/soap/model" element="q837:GET_GetAccountsAccountIdDirectDebits_400" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_401">
    <part name="GET_GetAccountsAccountIdDirectDebits_401" xmlns:q838="http://laegler.com/openbanking/soap/model" element="q838:GET_GetAccountsAccountIdDirectDebits_401" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_403">
    <part name="GET_GetAccountsAccountIdDirectDebits_403" xmlns:q839="http://laegler.com/openbanking/soap/model" element="q839:GET_GetAccountsAccountIdDirectDebits_403" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_404">
    <part name="GET_GetAccountsAccountIdDirectDebits_404" xmlns:q840="http://laegler.com/openbanking/soap/model" element="q840:GET_GetAccountsAccountIdDirectDebits_404" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_405">
    <part name="GET_GetAccountsAccountIdDirectDebits_405" xmlns:q841="http://laegler.com/openbanking/soap/model" element="q841:GET_GetAccountsAccountIdDirectDebits_405" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_406">
    <part name="GET_GetAccountsAccountIdDirectDebits_406" xmlns:q842="http://laegler.com/openbanking/soap/model" element="q842:GET_GetAccountsAccountIdDirectDebits_406" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_429">
    <part name="GET_GetAccountsAccountIdDirectDebits_429" xmlns:q843="http://laegler.com/openbanking/soap/model" element="q843:GET_GetAccountsAccountIdDirectDebits_429" />
  </message>
  <message name="GET_GetAccountsAccountIdDirectDebits_500">
    <part name="GET_GetAccountsAccountIdDirectDebits_500" xmlns:q844="http://laegler.com/openbanking/soap/model" element="q844:GET_GetAccountsAccountIdDirectDebits_500" />
  </message>
  <message name="GET_GetDirectDebits_InputMessage">
    <part name="GET_GetDirectDebits_InputMessage" xmlns:q845="http://laegler.com/openbanking/soap/model" element="q845:GET_GetDirectDebits_InputMessage" />
  </message>
  <message name="GET_GetDirectDebits_OutputMessage">
    <part name="GET_GetDirectDebits_OutputMessage" xmlns:q846="http://laegler.com/openbanking/soap/model" element="q846:GET_GetDirectDebits_OutputMessage" />
  </message>
  <message name="GET_GetDirectDebits_400">
    <part name="GET_GetDirectDebits_400" xmlns:q847="http://laegler.com/openbanking/soap/model" element="q847:GET_GetDirectDebits_400" />
  </message>
  <message name="GET_GetDirectDebits_401">
    <part name="GET_GetDirectDebits_401" xmlns:q848="http://laegler.com/openbanking/soap/model" element="q848:GET_GetDirectDebits_401" />
  </message>
  <message name="GET_GetDirectDebits_403">
    <part name="GET_GetDirectDebits_403" xmlns:q849="http://laegler.com/openbanking/soap/model" element="q849:GET_GetDirectDebits_403" />
  </message>
  <message name="GET_GetDirectDebits_404">
    <part name="GET_GetDirectDebits_404" xmlns:q850="http://laegler.com/openbanking/soap/model" element="q850:GET_GetDirectDebits_404" />
  </message>
  <message name="GET_GetDirectDebits_405">
    <part name="GET_GetDirectDebits_405" xmlns:q851="http://laegler.com/openbanking/soap/model" element="q851:GET_GetDirectDebits_405" />
  </message>
  <message name="GET_GetDirectDebits_406">
    <part name="GET_GetDirectDebits_406" xmlns:q852="http://laegler.com/openbanking/soap/model" element="q852:GET_GetDirectDebits_406" />
  </message>
  <message name="GET_GetDirectDebits_429">
    <part name="GET_GetDirectDebits_429" xmlns:q853="http://laegler.com/openbanking/soap/model" element="q853:GET_GetDirectDebits_429" />
  </message>
  <message name="GET_GetDirectDebits_500">
    <part name="GET_GetDirectDebits_500" xmlns:q854="http://laegler.com/openbanking/soap/model" element="q854:GET_GetDirectDebits_500" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_InputMessage">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_InputMessage" xmlns:q855="http://laegler.com/openbanking/soap/model" element="q855:GET_Getcertificatesforthegivensoftwarestatement_InputMessage" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_OutputMessage">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_OutputMessage" xmlns:q856="http://laegler.com/openbanking/soap/model" element="q856:GET_Getcertificatesforthegivensoftwarestatement_OutputMessage" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_400">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_400" xmlns:q857="http://laegler.com/openbanking/soap/model" element="q857:GET_Getcertificatesforthegivensoftwarestatement_400" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_401">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_401" xmlns:q858="http://laegler.com/openbanking/soap/model" element="q858:GET_Getcertificatesforthegivensoftwarestatement_401" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_404">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_404" xmlns:q859="http://laegler.com/openbanking/soap/model" element="q859:GET_Getcertificatesforthegivensoftwarestatement_404" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_406">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_406" xmlns:q860="http://laegler.com/openbanking/soap/model" element="q860:GET_Getcertificatesforthegivensoftwarestatement_406" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_500">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_500" xmlns:q861="http://laegler.com/openbanking/soap/model" element="q861:GET_Getcertificatesforthegivensoftwarestatement_500" />
  </message>
  <message name="GET_Getcertificatesforthegivensoftwarestatement_502">
    <part name="GET_Getcertificatesforthegivensoftwarestatement_502" xmlns:q862="http://laegler.com/openbanking/soap/model" element="q862:GET_Getcertificatesforthegivensoftwarestatement_502" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage" xmlns:q863="http://laegler.com/openbanking/soap/model" element="q863:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage" xmlns:q864="http://laegler.com/openbanking/soap/model" element="q864:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400" xmlns:q865="http://laegler.com/openbanking/soap/model" element="q865:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401" xmlns:q866="http://laegler.com/openbanking/soap/model" element="q866:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404" xmlns:q867="http://laegler.com/openbanking/soap/model" element="q867:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406" xmlns:q868="http://laegler.com/openbanking/soap/model" element="q868:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500" xmlns:q869="http://laegler.com/openbanking/soap/model" element="q869:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500" />
  </message>
  <message name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502">
    <part name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502" xmlns:q870="http://laegler.com/openbanking/soap/model" element="q870:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage" xmlns:q871="http://laegler.com/openbanking/soap/model" element="q871:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage" xmlns:q872="http://laegler.com/openbanking/soap/model" element="q872:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400" xmlns:q873="http://laegler.com/openbanking/soap/model" element="q873:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401" xmlns:q874="http://laegler.com/openbanking/soap/model" element="q874:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404" xmlns:q875="http://laegler.com/openbanking/soap/model" element="q875:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406" xmlns:q876="http://laegler.com/openbanking/soap/model" element="q876:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500" xmlns:q877="http://laegler.com/openbanking/soap/model" element="q877:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500" />
  </message>
  <message name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502">
    <part name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502" xmlns:q878="http://laegler.com/openbanking/soap/model" element="q878:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage" xmlns:q879="http://laegler.com/openbanking/soap/model" element="q879:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage" xmlns:q880="http://laegler.com/openbanking/soap/model" element="q880:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400" xmlns:q881="http://laegler.com/openbanking/soap/model" element="q881:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401" xmlns:q882="http://laegler.com/openbanking/soap/model" element="q882:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404" xmlns:q883="http://laegler.com/openbanking/soap/model" element="q883:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406" xmlns:q884="http://laegler.com/openbanking/soap/model" element="q884:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500" xmlns:q885="http://laegler.com/openbanking/soap/model" element="q885:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500" />
  </message>
  <message name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502">
    <part name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502" xmlns:q886="http://laegler.com/openbanking/soap/model" element="q886:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502" />
  </message>
  <message name="POST_Validatecertificate_InputMessage">
    <part name="POST_Validatecertificate_InputMessage" xmlns:q887="http://laegler.com/openbanking/soap/model" element="q887:POST_Validatecertificate_InputMessage" />
  </message>
  <message name="POST_Validatecertificate_OutputMessage">
    <part name="POST_Validatecertificate_OutputMessage" xmlns:q888="http://laegler.com/openbanking/soap/model" element="q888:POST_Validatecertificate_OutputMessage" />
  </message>
  <message name="POST_Validatecertificate_400">
    <part name="POST_Validatecertificate_400" xmlns:q889="http://laegler.com/openbanking/soap/model" element="q889:POST_Validatecertificate_400" />
  </message>
  <message name="POST_Validatecertificate_401">
    <part name="POST_Validatecertificate_401" xmlns:q890="http://laegler.com/openbanking/soap/model" element="q890:POST_Validatecertificate_401" />
  </message>
  <message name="POST_Validatecertificate_404">
    <part name="POST_Validatecertificate_404" xmlns:q891="http://laegler.com/openbanking/soap/model" element="q891:POST_Validatecertificate_404" />
  </message>
  <message name="POST_Validatecertificate_406">
    <part name="POST_Validatecertificate_406" xmlns:q892="http://laegler.com/openbanking/soap/model" element="q892:POST_Validatecertificate_406" />
  </message>
  <message name="POST_Validatecertificate_500">
    <part name="POST_Validatecertificate_500" xmlns:q893="http://laegler.com/openbanking/soap/model" element="q893:POST_Validatecertificate_500" />
  </message>
  <message name="POST_Validatecertificate_502">
    <part name="POST_Validatecertificate_502" xmlns:q894="http://laegler.com/openbanking/soap/model" element="q894:POST_Validatecertificate_502" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_InputMessage">
    <part name="POST_CreateDomesticStandingOrderConsents_InputMessage" xmlns:q895="http://laegler.com/openbanking/soap/model" element="q895:POST_CreateDomesticStandingOrderConsents_InputMessage" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_OutputMessage">
    <part name="POST_CreateDomesticStandingOrderConsents_OutputMessage" xmlns:q896="http://laegler.com/openbanking/soap/model" element="q896:POST_CreateDomesticStandingOrderConsents_OutputMessage" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_400">
    <part name="POST_CreateDomesticStandingOrderConsents_400" xmlns:q897="http://laegler.com/openbanking/soap/model" element="q897:POST_CreateDomesticStandingOrderConsents_400" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_401">
    <part name="POST_CreateDomesticStandingOrderConsents_401" xmlns:q898="http://laegler.com/openbanking/soap/model" element="q898:POST_CreateDomesticStandingOrderConsents_401" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_403">
    <part name="POST_CreateDomesticStandingOrderConsents_403" xmlns:q899="http://laegler.com/openbanking/soap/model" element="q899:POST_CreateDomesticStandingOrderConsents_403" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_404">
    <part name="POST_CreateDomesticStandingOrderConsents_404" xmlns:q900="http://laegler.com/openbanking/soap/model" element="q900:POST_CreateDomesticStandingOrderConsents_404" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_405">
    <part name="POST_CreateDomesticStandingOrderConsents_405" xmlns:q901="http://laegler.com/openbanking/soap/model" element="q901:POST_CreateDomesticStandingOrderConsents_405" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_406">
    <part name="POST_CreateDomesticStandingOrderConsents_406" xmlns:q902="http://laegler.com/openbanking/soap/model" element="q902:POST_CreateDomesticStandingOrderConsents_406" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_429">
    <part name="POST_CreateDomesticStandingOrderConsents_429" xmlns:q903="http://laegler.com/openbanking/soap/model" element="q903:POST_CreateDomesticStandingOrderConsents_429" />
  </message>
  <message name="POST_CreateDomesticStandingOrderConsents_500">
    <part name="POST_CreateDomesticStandingOrderConsents_500" xmlns:q904="http://laegler.com/openbanking/soap/model" element="q904:POST_CreateDomesticStandingOrderConsents_500" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_InputMessage">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_InputMessage" xmlns:q905="http://laegler.com/openbanking/soap/model" element="q905:GET_GetDomesticStandingOrderConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage" xmlns:q906="http://laegler.com/openbanking/soap/model" element="q906:GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_400">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_400" xmlns:q907="http://laegler.com/openbanking/soap/model" element="q907:GET_GetDomesticStandingOrderConsentsConsentId_400" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_401">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_401" xmlns:q908="http://laegler.com/openbanking/soap/model" element="q908:GET_GetDomesticStandingOrderConsentsConsentId_401" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_403">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_403" xmlns:q909="http://laegler.com/openbanking/soap/model" element="q909:GET_GetDomesticStandingOrderConsentsConsentId_403" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_404">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_404" xmlns:q910="http://laegler.com/openbanking/soap/model" element="q910:GET_GetDomesticStandingOrderConsentsConsentId_404" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_405">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_405" xmlns:q911="http://laegler.com/openbanking/soap/model" element="q911:GET_GetDomesticStandingOrderConsentsConsentId_405" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_406">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_406" xmlns:q912="http://laegler.com/openbanking/soap/model" element="q912:GET_GetDomesticStandingOrderConsentsConsentId_406" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_429">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_429" xmlns:q913="http://laegler.com/openbanking/soap/model" element="q913:GET_GetDomesticStandingOrderConsentsConsentId_429" />
  </message>
  <message name="GET_GetDomesticStandingOrderConsentsConsentId_500">
    <part name="GET_GetDomesticStandingOrderConsentsConsentId_500" xmlns:q914="http://laegler.com/openbanking/soap/model" element="q914:GET_GetDomesticStandingOrderConsentsConsentId_500" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_InputMessage">
    <part name="POST_CreateDomesticStandingOrders_InputMessage" xmlns:q915="http://laegler.com/openbanking/soap/model" element="q915:POST_CreateDomesticStandingOrders_InputMessage" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_OutputMessage">
    <part name="POST_CreateDomesticStandingOrders_OutputMessage" xmlns:q916="http://laegler.com/openbanking/soap/model" element="q916:POST_CreateDomesticStandingOrders_OutputMessage" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_400">
    <part name="POST_CreateDomesticStandingOrders_400" xmlns:q917="http://laegler.com/openbanking/soap/model" element="q917:POST_CreateDomesticStandingOrders_400" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_401">
    <part name="POST_CreateDomesticStandingOrders_401" xmlns:q918="http://laegler.com/openbanking/soap/model" element="q918:POST_CreateDomesticStandingOrders_401" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_403">
    <part name="POST_CreateDomesticStandingOrders_403" xmlns:q919="http://laegler.com/openbanking/soap/model" element="q919:POST_CreateDomesticStandingOrders_403" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_404">
    <part name="POST_CreateDomesticStandingOrders_404" xmlns:q920="http://laegler.com/openbanking/soap/model" element="q920:POST_CreateDomesticStandingOrders_404" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_405">
    <part name="POST_CreateDomesticStandingOrders_405" xmlns:q921="http://laegler.com/openbanking/soap/model" element="q921:POST_CreateDomesticStandingOrders_405" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_406">
    <part name="POST_CreateDomesticStandingOrders_406" xmlns:q922="http://laegler.com/openbanking/soap/model" element="q922:POST_CreateDomesticStandingOrders_406" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_429">
    <part name="POST_CreateDomesticStandingOrders_429" xmlns:q923="http://laegler.com/openbanking/soap/model" element="q923:POST_CreateDomesticStandingOrders_429" />
  </message>
  <message name="POST_CreateDomesticStandingOrders_500">
    <part name="POST_CreateDomesticStandingOrders_500" xmlns:q924="http://laegler.com/openbanking/soap/model" element="q924:POST_CreateDomesticStandingOrders_500" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage" xmlns:q925="http://laegler.com/openbanking/soap/model" element="q925:GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage" xmlns:q926="http://laegler.com/openbanking/soap/model" element="q926:GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_400">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_400" xmlns:q927="http://laegler.com/openbanking/soap/model" element="q927:GET_GetDomesticStandingOrdersDomesticStandingOrderId_400" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_401">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_401" xmlns:q928="http://laegler.com/openbanking/soap/model" element="q928:GET_GetDomesticStandingOrdersDomesticStandingOrderId_401" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_403">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_403" xmlns:q929="http://laegler.com/openbanking/soap/model" element="q929:GET_GetDomesticStandingOrdersDomesticStandingOrderId_403" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_404">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_404" xmlns:q930="http://laegler.com/openbanking/soap/model" element="q930:GET_GetDomesticStandingOrdersDomesticStandingOrderId_404" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_405">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_405" xmlns:q931="http://laegler.com/openbanking/soap/model" element="q931:GET_GetDomesticStandingOrdersDomesticStandingOrderId_405" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_406">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_406" xmlns:q932="http://laegler.com/openbanking/soap/model" element="q932:GET_GetDomesticStandingOrdersDomesticStandingOrderId_406" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_429">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_429" xmlns:q933="http://laegler.com/openbanking/soap/model" element="q933:GET_GetDomesticStandingOrdersDomesticStandingOrderId_429" />
  </message>
  <message name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_500">
    <part name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_500" xmlns:q934="http://laegler.com/openbanking/soap/model" element="q934:GET_GetDomesticStandingOrdersDomesticStandingOrderId_500" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_InputMessage">
    <part name="POST_CreateInternationalStandingOrderConsents_InputMessage" xmlns:q935="http://laegler.com/openbanking/soap/model" element="q935:POST_CreateInternationalStandingOrderConsents_InputMessage" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_OutputMessage">
    <part name="POST_CreateInternationalStandingOrderConsents_OutputMessage" xmlns:q936="http://laegler.com/openbanking/soap/model" element="q936:POST_CreateInternationalStandingOrderConsents_OutputMessage" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_400">
    <part name="POST_CreateInternationalStandingOrderConsents_400" xmlns:q937="http://laegler.com/openbanking/soap/model" element="q937:POST_CreateInternationalStandingOrderConsents_400" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_401">
    <part name="POST_CreateInternationalStandingOrderConsents_401" xmlns:q938="http://laegler.com/openbanking/soap/model" element="q938:POST_CreateInternationalStandingOrderConsents_401" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_403">
    <part name="POST_CreateInternationalStandingOrderConsents_403" xmlns:q939="http://laegler.com/openbanking/soap/model" element="q939:POST_CreateInternationalStandingOrderConsents_403" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_404">
    <part name="POST_CreateInternationalStandingOrderConsents_404" xmlns:q940="http://laegler.com/openbanking/soap/model" element="q940:POST_CreateInternationalStandingOrderConsents_404" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_405">
    <part name="POST_CreateInternationalStandingOrderConsents_405" xmlns:q941="http://laegler.com/openbanking/soap/model" element="q941:POST_CreateInternationalStandingOrderConsents_405" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_406">
    <part name="POST_CreateInternationalStandingOrderConsents_406" xmlns:q942="http://laegler.com/openbanking/soap/model" element="q942:POST_CreateInternationalStandingOrderConsents_406" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_429">
    <part name="POST_CreateInternationalStandingOrderConsents_429" xmlns:q943="http://laegler.com/openbanking/soap/model" element="q943:POST_CreateInternationalStandingOrderConsents_429" />
  </message>
  <message name="POST_CreateInternationalStandingOrderConsents_500">
    <part name="POST_CreateInternationalStandingOrderConsents_500" xmlns:q944="http://laegler.com/openbanking/soap/model" element="q944:POST_CreateInternationalStandingOrderConsents_500" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_InputMessage">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_InputMessage" xmlns:q945="http://laegler.com/openbanking/soap/model" element="q945:GET_GetInternationalStandingOrderConsentsConsentId_InputMessage" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage" xmlns:q946="http://laegler.com/openbanking/soap/model" element="q946:GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_400">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_400" xmlns:q947="http://laegler.com/openbanking/soap/model" element="q947:GET_GetInternationalStandingOrderConsentsConsentId_400" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_401">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_401" xmlns:q948="http://laegler.com/openbanking/soap/model" element="q948:GET_GetInternationalStandingOrderConsentsConsentId_401" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_403">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_403" xmlns:q949="http://laegler.com/openbanking/soap/model" element="q949:GET_GetInternationalStandingOrderConsentsConsentId_403" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_404">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_404" xmlns:q950="http://laegler.com/openbanking/soap/model" element="q950:GET_GetInternationalStandingOrderConsentsConsentId_404" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_405">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_405" xmlns:q951="http://laegler.com/openbanking/soap/model" element="q951:GET_GetInternationalStandingOrderConsentsConsentId_405" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_406">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_406" xmlns:q952="http://laegler.com/openbanking/soap/model" element="q952:GET_GetInternationalStandingOrderConsentsConsentId_406" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_429">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_429" xmlns:q953="http://laegler.com/openbanking/soap/model" element="q953:GET_GetInternationalStandingOrderConsentsConsentId_429" />
  </message>
  <message name="GET_GetInternationalStandingOrderConsentsConsentId_500">
    <part name="GET_GetInternationalStandingOrderConsentsConsentId_500" xmlns:q954="http://laegler.com/openbanking/soap/model" element="q954:GET_GetInternationalStandingOrderConsentsConsentId_500" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_InputMessage">
    <part name="POST_CreateInternationalStandingOrders_InputMessage" xmlns:q955="http://laegler.com/openbanking/soap/model" element="q955:POST_CreateInternationalStandingOrders_InputMessage" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_OutputMessage">
    <part name="POST_CreateInternationalStandingOrders_OutputMessage" xmlns:q956="http://laegler.com/openbanking/soap/model" element="q956:POST_CreateInternationalStandingOrders_OutputMessage" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_400">
    <part name="POST_CreateInternationalStandingOrders_400" xmlns:q957="http://laegler.com/openbanking/soap/model" element="q957:POST_CreateInternationalStandingOrders_400" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_401">
    <part name="POST_CreateInternationalStandingOrders_401" xmlns:q958="http://laegler.com/openbanking/soap/model" element="q958:POST_CreateInternationalStandingOrders_401" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_403">
    <part name="POST_CreateInternationalStandingOrders_403" xmlns:q959="http://laegler.com/openbanking/soap/model" element="q959:POST_CreateInternationalStandingOrders_403" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_404">
    <part name="POST_CreateInternationalStandingOrders_404" xmlns:q960="http://laegler.com/openbanking/soap/model" element="q960:POST_CreateInternationalStandingOrders_404" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_405">
    <part name="POST_CreateInternationalStandingOrders_405" xmlns:q961="http://laegler.com/openbanking/soap/model" element="q961:POST_CreateInternationalStandingOrders_405" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_406">
    <part name="POST_CreateInternationalStandingOrders_406" xmlns:q962="http://laegler.com/openbanking/soap/model" element="q962:POST_CreateInternationalStandingOrders_406" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_429">
    <part name="POST_CreateInternationalStandingOrders_429" xmlns:q963="http://laegler.com/openbanking/soap/model" element="q963:POST_CreateInternationalStandingOrders_429" />
  </message>
  <message name="POST_CreateInternationalStandingOrders_500">
    <part name="POST_CreateInternationalStandingOrders_500" xmlns:q964="http://laegler.com/openbanking/soap/model" element="q964:POST_CreateInternationalStandingOrders_500" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage" xmlns:q965="http://laegler.com/openbanking/soap/model" element="q965:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage" xmlns:q966="http://laegler.com/openbanking/soap/model" element="q966:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400" xmlns:q967="http://laegler.com/openbanking/soap/model" element="q967:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401" xmlns:q968="http://laegler.com/openbanking/soap/model" element="q968:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403" xmlns:q969="http://laegler.com/openbanking/soap/model" element="q969:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404" xmlns:q970="http://laegler.com/openbanking/soap/model" element="q970:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405" xmlns:q971="http://laegler.com/openbanking/soap/model" element="q971:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406" xmlns:q972="http://laegler.com/openbanking/soap/model" element="q972:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429" xmlns:q973="http://laegler.com/openbanking/soap/model" element="q973:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429" />
  </message>
  <message name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500">
    <part name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500" xmlns:q974="http://laegler.com/openbanking/soap/model" element="q974:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500" />
  </message>
  <message name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage">
    <part name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage" xmlns:q975="http://laegler.com/openbanking/soap/model" element="q975:GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage" />
  </message>
  <message name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage">
    <part name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage" xmlns:q976="http://laegler.com/openbanking/soap/model" element="q976:GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage" />
  </message>
  <message name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406">
    <part name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406" xmlns:q977="http://laegler.com/openbanking/soap/model" element="q977:GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage" xmlns:q978="http://laegler.com/openbanking/soap/model" element="q978:POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage" xmlns:q979="http://laegler.com/openbanking/soap/model" element="q979:POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_400">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_400" xmlns:q980="http://laegler.com/openbanking/soap/model" element="q980:POST_EnrolaeIDASQWACQSealC-bearingparticipant_400" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_401">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_401" xmlns:q981="http://laegler.com/openbanking/soap/model" element="q981:POST_EnrolaeIDASQWACQSealC-bearingparticipant_401" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_406">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_406" xmlns:q982="http://laegler.com/openbanking/soap/model" element="q982:POST_EnrolaeIDASQWACQSealC-bearingparticipant_406" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_500">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_500" xmlns:q983="http://laegler.com/openbanking/soap/model" element="q983:POST_EnrolaeIDASQWACQSealC-bearingparticipant_500" />
  </message>
  <message name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_502">
    <part name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_502" xmlns:q984="http://laegler.com/openbanking/soap/model" element="q984:POST_EnrolaeIDASQWACQSealC-bearingparticipant_502" />
  </message>
  <message name="GET_Getthegivenorganisationsdetails_InputMessage">
    <part name="GET_Getthegivenorganisationsdetails_InputMessage" xmlns:q985="http://laegler.com/openbanking/soap/model" element="q985:GET_Getthegivenorganisationsdetails_InputMessage" />
  </message>
  <message name="GET_Getthegivenorganisationsdetails_OutputMessage">
    <part name="GET_Getthegivenorganisationsdetails_OutputMessage" xmlns:q986="http://laegler.com/openbanking/soap/model" element="q986:GET_Getthegivenorganisationsdetails_OutputMessage" />
  </message>
  <message name="GET_Getthegivenorganisationsdetails_404">
    <part name="GET_Getthegivenorganisationsdetails_404" xmlns:q987="http://laegler.com/openbanking/soap/model" element="q987:GET_Getthegivenorganisationsdetails_404" />
  </message>
  <message name="GET_Getthegivenorganisationsdetails_406">
    <part name="GET_Getthegivenorganisationsdetails_406" xmlns:q988="http://laegler.com/openbanking/soap/model" element="q988:GET_Getthegivenorganisationsdetails_406" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_InputMessage">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_InputMessage" xmlns:q989="http://laegler.com/openbanking/soap/model" element="q989:GET_GetallAuthorisationServersforthegivenorganisation_InputMessage" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage" xmlns:q990="http://laegler.com/openbanking/soap/model" element="q990:GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_400">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_400" xmlns:q991="http://laegler.com/openbanking/soap/model" element="q991:GET_GetallAuthorisationServersforthegivenorganisation_400" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_401">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_401" xmlns:q992="http://laegler.com/openbanking/soap/model" element="q992:GET_GetallAuthorisationServersforthegivenorganisation_401" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_404">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_404" xmlns:q993="http://laegler.com/openbanking/soap/model" element="q993:GET_GetallAuthorisationServersforthegivenorganisation_404" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_406">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_406" xmlns:q994="http://laegler.com/openbanking/soap/model" element="q994:GET_GetallAuthorisationServersforthegivenorganisation_406" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_500">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_500" xmlns:q995="http://laegler.com/openbanking/soap/model" element="q995:GET_GetallAuthorisationServersforthegivenorganisation_500" />
  </message>
  <message name="GET_GetallAuthorisationServersforthegivenorganisation_502">
    <part name="GET_GetallAuthorisationServersforthegivenorganisation_502" xmlns:q996="http://laegler.com/openbanking/soap/model" element="q996:GET_GetallAuthorisationServersforthegivenorganisation_502" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage" xmlns:q997="http://laegler.com/openbanking/soap/model" element="q997:POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage" xmlns:q998="http://laegler.com/openbanking/soap/model" element="q998:POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_400">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_400" xmlns:q999="http://laegler.com/openbanking/soap/model" element="q999:POST_CreateanAuthorisationServerforthegivenorganisation_400" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_401">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_401" xmlns:q1000="http://laegler.com/openbanking/soap/model" element="q1000:POST_CreateanAuthorisationServerforthegivenorganisation_401" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_404">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_404" xmlns:q1001="http://laegler.com/openbanking/soap/model" element="q1001:POST_CreateanAuthorisationServerforthegivenorganisation_404" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_406">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_406" xmlns:q1002="http://laegler.com/openbanking/soap/model" element="q1002:POST_CreateanAuthorisationServerforthegivenorganisation_406" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_500">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_500" xmlns:q1003="http://laegler.com/openbanking/soap/model" element="q1003:POST_CreateanAuthorisationServerforthegivenorganisation_500" />
  </message>
  <message name="POST_CreateanAuthorisationServerforthegivenorganisation_502">
    <part name="POST_CreateanAuthorisationServerforthegivenorganisation_502" xmlns:q1004="http://laegler.com/openbanking/soap/model" element="q1004:POST_CreateanAuthorisationServerforthegivenorganisation_502" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_InputMessage">
    <part name="DELETE_DeleteanAuthorisationServer_InputMessage" xmlns:q1005="http://laegler.com/openbanking/soap/model" element="q1005:DELETE_DeleteanAuthorisationServer_InputMessage" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_OutputMessage">
    <part name="DELETE_DeleteanAuthorisationServer_OutputMessage" xmlns:q1006="http://laegler.com/openbanking/soap/model" element="q1006:DELETE_DeleteanAuthorisationServer_OutputMessage" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_400">
    <part name="DELETE_DeleteanAuthorisationServer_400" xmlns:q1007="http://laegler.com/openbanking/soap/model" element="q1007:DELETE_DeleteanAuthorisationServer_400" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_401">
    <part name="DELETE_DeleteanAuthorisationServer_401" xmlns:q1008="http://laegler.com/openbanking/soap/model" element="q1008:DELETE_DeleteanAuthorisationServer_401" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_404">
    <part name="DELETE_DeleteanAuthorisationServer_404" xmlns:q1009="http://laegler.com/openbanking/soap/model" element="q1009:DELETE_DeleteanAuthorisationServer_404" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_406">
    <part name="DELETE_DeleteanAuthorisationServer_406" xmlns:q1010="http://laegler.com/openbanking/soap/model" element="q1010:DELETE_DeleteanAuthorisationServer_406" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_500">
    <part name="DELETE_DeleteanAuthorisationServer_500" xmlns:q1011="http://laegler.com/openbanking/soap/model" element="q1011:DELETE_DeleteanAuthorisationServer_500" />
  </message>
  <message name="DELETE_DeleteanAuthorisationServer_502">
    <part name="DELETE_DeleteanAuthorisationServer_502" xmlns:q1012="http://laegler.com/openbanking/soap/model" element="q1012:DELETE_DeleteanAuthorisationServer_502" />
  </message>
  <message name="GET_Get.well-knownentity_InputMessage">
    <part name="GET_Get.well-knownentity_InputMessage" xmlns:q1013="http://laegler.com/openbanking/soap/model" element="q1013:GET_Get.well-knownentity_InputMessage" />
  </message>
  <message name="GET_Get.well-knownentity_OutputMessage">
    <part name="GET_Get.well-knownentity_OutputMessage" xmlns:q1014="http://laegler.com/openbanking/soap/model" element="q1014:GET_Get.well-knownentity_OutputMessage" />
  </message>
  <message name="GET_Get.well-knownentity_400">
    <part name="GET_Get.well-knownentity_400" xmlns:q1015="http://laegler.com/openbanking/soap/model" element="q1015:GET_Get.well-knownentity_400" />
  </message>
  <message name="GET_Get.well-knownentity_401">
    <part name="GET_Get.well-knownentity_401" xmlns:q1016="http://laegler.com/openbanking/soap/model" element="q1016:GET_Get.well-knownentity_401" />
  </message>
  <message name="GET_Get.well-knownentity_404">
    <part name="GET_Get.well-knownentity_404" xmlns:q1017="http://laegler.com/openbanking/soap/model" element="q1017:GET_Get.well-knownentity_404" />
  </message>
  <message name="GET_Get.well-knownentity_406">
    <part name="GET_Get.well-knownentity_406" xmlns:q1018="http://laegler.com/openbanking/soap/model" element="q1018:GET_Get.well-knownentity_406" />
  </message>
  <message name="GET_Get.well-knownentity_500">
    <part name="GET_Get.well-knownentity_500" xmlns:q1019="http://laegler.com/openbanking/soap/model" element="q1019:GET_Get.well-knownentity_500" />
  </message>
  <message name="GET_Get.well-knownentity_502">
    <part name="GET_Get.well-knownentity_502" xmlns:q1020="http://laegler.com/openbanking/soap/model" element="q1020:GET_Get.well-knownentity_502" />
  </message>
  <message name="PUT_Update.well-knownentity_InputMessage">
    <part name="PUT_Update.well-knownentity_InputMessage" xmlns:q1021="http://laegler.com/openbanking/soap/model" element="q1021:PUT_Update.well-knownentity_InputMessage" />
  </message>
  <message name="PUT_Update.well-knownentity_OutputMessage">
    <part name="PUT_Update.well-knownentity_OutputMessage" xmlns:q1022="http://laegler.com/openbanking/soap/model" element="q1022:PUT_Update.well-knownentity_OutputMessage" />
  </message>
  <message name="PUT_Update.well-knownentity_400">
    <part name="PUT_Update.well-knownentity_400" xmlns:q1023="http://laegler.com/openbanking/soap/model" element="q1023:PUT_Update.well-knownentity_400" />
  </message>
  <message name="PUT_Update.well-knownentity_401">
    <part name="PUT_Update.well-knownentity_401" xmlns:q1024="http://laegler.com/openbanking/soap/model" element="q1024:PUT_Update.well-knownentity_401" />
  </message>
  <message name="PUT_Update.well-knownentity_404">
    <part name="PUT_Update.well-knownentity_404" xmlns:q1025="http://laegler.com/openbanking/soap/model" element="q1025:PUT_Update.well-knownentity_404" />
  </message>
  <message name="PUT_Update.well-knownentity_406">
    <part name="PUT_Update.well-knownentity_406" xmlns:q1026="http://laegler.com/openbanking/soap/model" element="q1026:PUT_Update.well-knownentity_406" />
  </message>
  <message name="PUT_Update.well-knownentity_500">
    <part name="PUT_Update.well-knownentity_500" xmlns:q1027="http://laegler.com/openbanking/soap/model" element="q1027:PUT_Update.well-knownentity_500" />
  </message>
  <message name="PUT_Update.well-knownentity_502">
    <part name="PUT_Update.well-knownentity_502" xmlns:q1028="http://laegler.com/openbanking/soap/model" element="q1028:PUT_Update.well-knownentity_502" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_InputMessage">
    <part name="GET_Getthecertificatesforthegivenorganisation_InputMessage" xmlns:q1029="http://laegler.com/openbanking/soap/model" element="q1029:GET_Getthecertificatesforthegivenorganisation_InputMessage" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_OutputMessage">
    <part name="GET_Getthecertificatesforthegivenorganisation_OutputMessage" xmlns:q1030="http://laegler.com/openbanking/soap/model" element="q1030:GET_Getthecertificatesforthegivenorganisation_OutputMessage" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_400">
    <part name="GET_Getthecertificatesforthegivenorganisation_400" xmlns:q1031="http://laegler.com/openbanking/soap/model" element="q1031:GET_Getthecertificatesforthegivenorganisation_400" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_401">
    <part name="GET_Getthecertificatesforthegivenorganisation_401" xmlns:q1032="http://laegler.com/openbanking/soap/model" element="q1032:GET_Getthecertificatesforthegivenorganisation_401" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_404">
    <part name="GET_Getthecertificatesforthegivenorganisation_404" xmlns:q1033="http://laegler.com/openbanking/soap/model" element="q1033:GET_Getthecertificatesforthegivenorganisation_404" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_406">
    <part name="GET_Getthecertificatesforthegivenorganisation_406" xmlns:q1034="http://laegler.com/openbanking/soap/model" element="q1034:GET_Getthecertificatesforthegivenorganisation_406" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_500">
    <part name="GET_Getthecertificatesforthegivenorganisation_500" xmlns:q1035="http://laegler.com/openbanking/soap/model" element="q1035:GET_Getthecertificatesforthegivenorganisation_500" />
  </message>
  <message name="GET_Getthecertificatesforthegivenorganisation_502">
    <part name="GET_Getthecertificatesforthegivenorganisation_502" xmlns:q1036="http://laegler.com/openbanking/soap/model" element="q1036:GET_Getthecertificatesforthegivenorganisation_502" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage" xmlns:q1037="http://laegler.com/openbanking/soap/model" element="q1037:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage" xmlns:q1038="http://laegler.com/openbanking/soap/model" element="q1038:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400" xmlns:q1039="http://laegler.com/openbanking/soap/model" element="q1039:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401" xmlns:q1040="http://laegler.com/openbanking/soap/model" element="q1040:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404" xmlns:q1041="http://laegler.com/openbanking/soap/model" element="q1041:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406" xmlns:q1042="http://laegler.com/openbanking/soap/model" element="q1042:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500" xmlns:q1043="http://laegler.com/openbanking/soap/model" element="q1043:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500" />
  </message>
  <message name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502">
    <part name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502" xmlns:q1044="http://laegler.com/openbanking/soap/model" element="q1044:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage" xmlns:q1045="http://laegler.com/openbanking/soap/model" element="q1045:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage" xmlns:q1046="http://laegler.com/openbanking/soap/model" element="q1046:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400" xmlns:q1047="http://laegler.com/openbanking/soap/model" element="q1047:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401" xmlns:q1048="http://laegler.com/openbanking/soap/model" element="q1048:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404" xmlns:q1049="http://laegler.com/openbanking/soap/model" element="q1049:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406" xmlns:q1050="http://laegler.com/openbanking/soap/model" element="q1050:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500" xmlns:q1051="http://laegler.com/openbanking/soap/model" element="q1051:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500" />
  </message>
  <message name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502">
    <part name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502" xmlns:q1052="http://laegler.com/openbanking/soap/model" element="q1052:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage" xmlns:q1053="http://laegler.com/openbanking/soap/model" element="q1053:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage" xmlns:q1054="http://laegler.com/openbanking/soap/model" element="q1054:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400" xmlns:q1055="http://laegler.com/openbanking/soap/model" element="q1055:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401" xmlns:q1056="http://laegler.com/openbanking/soap/model" element="q1056:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404" xmlns:q1057="http://laegler.com/openbanking/soap/model" element="q1057:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406" xmlns:q1058="http://laegler.com/openbanking/soap/model" element="q1058:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500" xmlns:q1059="http://laegler.com/openbanking/soap/model" element="q1059:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500" />
  </message>
  <message name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502">
    <part name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502" xmlns:q1060="http://laegler.com/openbanking/soap/model" element="q1060:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage" xmlns:q1061="http://laegler.com/openbanking/soap/model" element="q1061:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage" xmlns:q1062="http://laegler.com/openbanking/soap/model" element="q1062:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400" xmlns:q1063="http://laegler.com/openbanking/soap/model" element="q1063:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401" xmlns:q1064="http://laegler.com/openbanking/soap/model" element="q1064:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404" xmlns:q1065="http://laegler.com/openbanking/soap/model" element="q1065:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406" xmlns:q1066="http://laegler.com/openbanking/soap/model" element="q1066:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500" xmlns:q1067="http://laegler.com/openbanking/soap/model" element="q1067:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500" />
  </message>
  <message name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502">
    <part name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502" xmlns:q1068="http://laegler.com/openbanking/soap/model" element="q1068:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage" xmlns:q1069="http://laegler.com/openbanking/soap/model" element="q1069:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage" xmlns:q1070="http://laegler.com/openbanking/soap/model" element="q1070:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400" xmlns:q1071="http://laegler.com/openbanking/soap/model" element="q1071:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401" xmlns:q1072="http://laegler.com/openbanking/soap/model" element="q1072:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406" xmlns:q1073="http://laegler.com/openbanking/soap/model" element="q1073:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500" xmlns:q1074="http://laegler.com/openbanking/soap/model" element="q1074:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500" />
  </message>
  <message name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502">
    <part name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502" xmlns:q1075="http://laegler.com/openbanking/soap/model" element="q1075:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage" xmlns:q1076="http://laegler.com/openbanking/soap/model" element="q1076:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage" xmlns:q1077="http://laegler.com/openbanking/soap/model" element="q1077:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400" xmlns:q1078="http://laegler.com/openbanking/soap/model" element="q1078:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401" xmlns:q1079="http://laegler.com/openbanking/soap/model" element="q1079:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406" xmlns:q1080="http://laegler.com/openbanking/soap/model" element="q1080:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500" xmlns:q1081="http://laegler.com/openbanking/soap/model" element="q1081:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500" />
  </message>
  <message name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502">
    <part name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502" xmlns:q1082="http://laegler.com/openbanking/soap/model" element="q1082:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage" xmlns:q1083="http://laegler.com/openbanking/soap/model" element="q1083:GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage" xmlns:q1084="http://laegler.com/openbanking/soap/model" element="q1084:GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_400">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_400" xmlns:q1085="http://laegler.com/openbanking/soap/model" element="q1085:GET_Getallsoftwarestatementsforthegivenorganisation_400" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_401">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_401" xmlns:q1086="http://laegler.com/openbanking/soap/model" element="q1086:GET_Getallsoftwarestatementsforthegivenorganisation_401" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_406">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_406" xmlns:q1087="http://laegler.com/openbanking/soap/model" element="q1087:GET_Getallsoftwarestatementsforthegivenorganisation_406" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_500">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_500" xmlns:q1088="http://laegler.com/openbanking/soap/model" element="q1088:GET_Getallsoftwarestatementsforthegivenorganisation_500" />
  </message>
  <message name="GET_Getallsoftwarestatementsforthegivenorganisation_502">
    <part name="GET_Getallsoftwarestatementsforthegivenorganisation_502" xmlns:q1089="http://laegler.com/openbanking/soap/model" element="q1089:GET_Getallsoftwarestatementsforthegivenorganisation_502" />
  </message>
  <message name="POST_Createasoftwarestatement_InputMessage">
    <part name="POST_Createasoftwarestatement_InputMessage" xmlns:q1090="http://laegler.com/openbanking/soap/model" element="q1090:POST_Createasoftwarestatement_InputMessage" />
  </message>
  <message name="POST_Createasoftwarestatement_OutputMessage">
    <part name="POST_Createasoftwarestatement_OutputMessage" xmlns:q1091="http://laegler.com/openbanking/soap/model" element="q1091:POST_Createasoftwarestatement_OutputMessage" />
  </message>
  <message name="POST_Createasoftwarestatement_400">
    <part name="POST_Createasoftwarestatement_400" xmlns:q1092="http://laegler.com/openbanking/soap/model" element="q1092:POST_Createasoftwarestatement_400" />
  </message>
  <message name="POST_Createasoftwarestatement_401">
    <part name="POST_Createasoftwarestatement_401" xmlns:q1093="http://laegler.com/openbanking/soap/model" element="q1093:POST_Createasoftwarestatement_401" />
  </message>
  <message name="POST_Createasoftwarestatement_406">
    <part name="POST_Createasoftwarestatement_406" xmlns:q1094="http://laegler.com/openbanking/soap/model" element="q1094:POST_Createasoftwarestatement_406" />
  </message>
  <message name="POST_Createasoftwarestatement_500">
    <part name="POST_Createasoftwarestatement_500" xmlns:q1095="http://laegler.com/openbanking/soap/model" element="q1095:POST_Createasoftwarestatement_500" />
  </message>
  <message name="POST_Createasoftwarestatement_502">
    <part name="POST_Createasoftwarestatement_502" xmlns:q1096="http://laegler.com/openbanking/soap/model" element="q1096:POST_Createasoftwarestatement_502" />
  </message>
  <message name="GET_Getasoftwarestatement_InputMessage">
    <part name="GET_Getasoftwarestatement_InputMessage" xmlns:q1097="http://laegler.com/openbanking/soap/model" element="q1097:GET_Getasoftwarestatement_InputMessage" />
  </message>
  <message name="GET_Getasoftwarestatement_OutputMessage">
    <part name="GET_Getasoftwarestatement_OutputMessage" xmlns:q1098="http://laegler.com/openbanking/soap/model" element="q1098:GET_Getasoftwarestatement_OutputMessage" />
  </message>
  <message name="GET_Getasoftwarestatement_400">
    <part name="GET_Getasoftwarestatement_400" xmlns:q1099="http://laegler.com/openbanking/soap/model" element="q1099:GET_Getasoftwarestatement_400" />
  </message>
  <message name="GET_Getasoftwarestatement_401">
    <part name="GET_Getasoftwarestatement_401" xmlns:q1100="http://laegler.com/openbanking/soap/model" element="q1100:GET_Getasoftwarestatement_401" />
  </message>
  <message name="GET_Getasoftwarestatement_404">
    <part name="GET_Getasoftwarestatement_404" xmlns:q1101="http://laegler.com/openbanking/soap/model" element="q1101:GET_Getasoftwarestatement_404" />
  </message>
  <message name="GET_Getasoftwarestatement_406">
    <part name="GET_Getasoftwarestatement_406" xmlns:q1102="http://laegler.com/openbanking/soap/model" element="q1102:GET_Getasoftwarestatement_406" />
  </message>
  <message name="GET_Getasoftwarestatement_500">
    <part name="GET_Getasoftwarestatement_500" xmlns:q1103="http://laegler.com/openbanking/soap/model" element="q1103:GET_Getasoftwarestatement_500" />
  </message>
  <message name="GET_Getasoftwarestatement_502">
    <part name="GET_Getasoftwarestatement_502" xmlns:q1104="http://laegler.com/openbanking/soap/model" element="q1104:GET_Getasoftwarestatement_502" />
  </message>
  <message name="PUT_Updateasoftwarestatement_InputMessage">
    <part name="PUT_Updateasoftwarestatement_InputMessage" xmlns:q1105="http://laegler.com/openbanking/soap/model" element="q1105:PUT_Updateasoftwarestatement_InputMessage" />
  </message>
  <message name="PUT_Updateasoftwarestatement_OutputMessage">
    <part name="PUT_Updateasoftwarestatement_OutputMessage" xmlns:q1106="http://laegler.com/openbanking/soap/model" element="q1106:PUT_Updateasoftwarestatement_OutputMessage" />
  </message>
  <message name="PUT_Updateasoftwarestatement_400">
    <part name="PUT_Updateasoftwarestatement_400" xmlns:q1107="http://laegler.com/openbanking/soap/model" element="q1107:PUT_Updateasoftwarestatement_400" />
  </message>
  <message name="PUT_Updateasoftwarestatement_401">
    <part name="PUT_Updateasoftwarestatement_401" xmlns:q1108="http://laegler.com/openbanking/soap/model" element="q1108:PUT_Updateasoftwarestatement_401" />
  </message>
  <message name="PUT_Updateasoftwarestatement_404">
    <part name="PUT_Updateasoftwarestatement_404" xmlns:q1109="http://laegler.com/openbanking/soap/model" element="q1109:PUT_Updateasoftwarestatement_404" />
  </message>
  <message name="PUT_Updateasoftwarestatement_406">
    <part name="PUT_Updateasoftwarestatement_406" xmlns:q1110="http://laegler.com/openbanking/soap/model" element="q1110:PUT_Updateasoftwarestatement_406" />
  </message>
  <message name="PUT_Updateasoftwarestatement_500">
    <part name="PUT_Updateasoftwarestatement_500" xmlns:q1111="http://laegler.com/openbanking/soap/model" element="q1111:PUT_Updateasoftwarestatement_500" />
  </message>
  <message name="PUT_Updateasoftwarestatement_502">
    <part name="PUT_Updateasoftwarestatement_502" xmlns:q1112="http://laegler.com/openbanking/soap/model" element="q1112:PUT_Updateasoftwarestatement_502" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage" xmlns:q1113="http://laegler.com/openbanking/soap/model" element="q1113:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage" xmlns:q1114="http://laegler.com/openbanking/soap/model" element="q1114:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400" xmlns:q1115="http://laegler.com/openbanking/soap/model" element="q1115:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401" xmlns:q1116="http://laegler.com/openbanking/soap/model" element="q1116:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404" xmlns:q1117="http://laegler.com/openbanking/soap/model" element="q1117:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406" xmlns:q1118="http://laegler.com/openbanking/soap/model" element="q1118:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409" xmlns:q1119="http://laegler.com/openbanking/soap/model" element="q1119:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500" xmlns:q1120="http://laegler.com/openbanking/soap/model" element="q1120:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500" />
  </message>
  <message name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502">
    <part name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502" xmlns:q1121="http://laegler.com/openbanking/soap/model" element="q1121:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_InputMessage">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_InputMessage" xmlns:q1122="http://laegler.com/openbanking/soap/model" element="q1122:POST_AddaredirectURItothegivenSoftwareStatement_InputMessage" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage" xmlns:q1123="http://laegler.com/openbanking/soap/model" element="q1123:POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_400">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_400" xmlns:q1124="http://laegler.com/openbanking/soap/model" element="q1124:POST_AddaredirectURItothegivenSoftwareStatement_400" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_401">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_401" xmlns:q1125="http://laegler.com/openbanking/soap/model" element="q1125:POST_AddaredirectURItothegivenSoftwareStatement_401" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_404">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_404" xmlns:q1126="http://laegler.com/openbanking/soap/model" element="q1126:POST_AddaredirectURItothegivenSoftwareStatement_404" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_406">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_406" xmlns:q1127="http://laegler.com/openbanking/soap/model" element="q1127:POST_AddaredirectURItothegivenSoftwareStatement_406" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_409">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_409" xmlns:q1128="http://laegler.com/openbanking/soap/model" element="q1128:POST_AddaredirectURItothegivenSoftwareStatement_409" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_500">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_500" xmlns:q1129="http://laegler.com/openbanking/soap/model" element="q1129:POST_AddaredirectURItothegivenSoftwareStatement_500" />
  </message>
  <message name="POST_AddaredirectURItothegivenSoftwareStatement_502">
    <part name="POST_AddaredirectURItothegivenSoftwareStatement_502" xmlns:q1130="http://laegler.com/openbanking/soap/model" element="q1130:POST_AddaredirectURItothegivenSoftwareStatement_502" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage" xmlns:q1131="http://laegler.com/openbanking/soap/model" element="q1131:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage" xmlns:q1132="http://laegler.com/openbanking/soap/model" element="q1132:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400" xmlns:q1133="http://laegler.com/openbanking/soap/model" element="q1133:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401" xmlns:q1134="http://laegler.com/openbanking/soap/model" element="q1134:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404" xmlns:q1135="http://laegler.com/openbanking/soap/model" element="q1135:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406" xmlns:q1136="http://laegler.com/openbanking/soap/model" element="q1136:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500" xmlns:q1137="http://laegler.com/openbanking/soap/model" element="q1137:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500" />
  </message>
  <message name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502">
    <part name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502" xmlns:q1138="http://laegler.com/openbanking/soap/model" element="q1138:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502" />
  </message>
  <portType name="default_PortType">
    <operation name="GET_UnsecuredSmeLoans_GET">
      <documentation>Gets a list of all `Unsercured SME Lending` objects.</documentation>
      <input xmlns:q1139="http://laegler.com/openbanking/soap/service" message="q1139:GET_UnsecuredSmeLoans_GET_InputMessage" />
      <output xmlns:q1140="http://laegler.com/openbanking/soap/service" message="q1140:GET_UnsecuredSmeLoans_GET_OutputMessage">
        <documentation>Successful response with a list of `Unsecured SME Lending` data</documentation>
      </output>
      <fault name="GET_UnsecuredSmeLoans_GET_400" xmlns:q1141="http://laegler.com/openbanking/soap/service" message="q1141:GET_UnsecuredSmeLoans_GET_400">
        <documentation>You have sent a request which could not be understood.</documentation>
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_408" xmlns:q1142="http://laegler.com/openbanking/soap/service" message="q1142:GET_UnsecuredSmeLoans_GET_408">
        <documentation>Your client has failed to submit a request, and a timeout has occurred.</documentation>
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_429" xmlns:q1143="http://laegler.com/openbanking/soap/service" message="q1143:GET_UnsecuredSmeLoans_GET_429">
        <documentation>You have requested this resource too often. Slow down.</documentation>
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_500" xmlns:q1144="http://laegler.com/openbanking/soap/service" message="q1144:GET_UnsecuredSmeLoans_GET_500">
        <documentation>An error occurred on the server. No further information is available.</documentation>
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_503" xmlns:q1145="http://laegler.com/openbanking/soap/service" message="q1145:GET_UnsecuredSmeLoans_GET_503">
        <documentation>The service is temporarily unavailable.</documentation>
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_Default" xmlns:q1146="http://laegler.com/openbanking/soap/service" message="q1146:GET_UnsecuredSmeLoans_GET_Default">
        <documentation>A standard error response.</documentation>
      </fault>
    </operation>
    <operation name="GET_CommercialCreditCards_GET">
      <documentation>Gets a list of all `Commerical Credit Card` objects.</documentation>
      <input xmlns:q1147="http://laegler.com/openbanking/soap/service" message="q1147:GET_CommercialCreditCards_GET_InputMessage" />
      <output xmlns:q1148="http://laegler.com/openbanking/soap/service" message="q1148:GET_CommercialCreditCards_GET_OutputMessage">
        <documentation>Successful response with a list of `Commercial Credit Card` data</documentation>
      </output>
      <fault name="GET_CommercialCreditCards_GET_400" xmlns:q1149="http://laegler.com/openbanking/soap/service" message="q1149:GET_CommercialCreditCards_GET_400">
        <documentation>You have sent a request which could not be understood.</documentation>
      </fault>
      <fault name="GET_CommercialCreditCards_GET_408" xmlns:q1150="http://laegler.com/openbanking/soap/service" message="q1150:GET_CommercialCreditCards_GET_408">
        <documentation>Your client has failed to submit a request, and a timeout has occurred.</documentation>
      </fault>
      <fault name="GET_CommercialCreditCards_GET_429" xmlns:q1151="http://laegler.com/openbanking/soap/service" message="q1151:GET_CommercialCreditCards_GET_429">
        <documentation>You have requested this resource too often. Slow down.</documentation>
      </fault>
      <fault name="GET_CommercialCreditCards_GET_500" xmlns:q1152="http://laegler.com/openbanking/soap/service" message="q1152:GET_CommercialCreditCards_GET_500">
        <documentation>An error occurred on the server. No further information is available.</documentation>
      </fault>
      <fault name="GET_CommercialCreditCards_GET_503" xmlns:q1153="http://laegler.com/openbanking/soap/service" message="q1153:GET_CommercialCreditCards_GET_503">
        <documentation>The service is temporarily unavailable.</documentation>
      </fault>
      <fault name="GET_CommercialCreditCards_GET_Default" xmlns:q1154="http://laegler.com/openbanking/soap/service" message="q1154:GET_CommercialCreditCards_GET_Default">
        <documentation>A standard error response.</documentation>
      </fault>
    </operation>
    <operation name="GET_Atms_GET">
      <documentation>Gets a list of all `ATM` objects.</documentation>
      <input xmlns:q1155="http://laegler.com/openbanking/soap/service" message="q1155:GET_Atms_GET_InputMessage" />
      <output xmlns:q1156="http://laegler.com/openbanking/soap/service" message="q1156:GET_Atms_GET_OutputMessage">
        <documentation>Successful response with a list of `ATM` data</documentation>
      </output>
      <fault name="GET_Atms_GET_400" xmlns:q1157="http://laegler.com/openbanking/soap/service" message="q1157:GET_Atms_GET_400">
        <documentation>You have sent a request which could not be understood.</documentation>
      </fault>
      <fault name="GET_Atms_GET_408" xmlns:q1158="http://laegler.com/openbanking/soap/service" message="q1158:GET_Atms_GET_408">
        <documentation>Your client has failed to submit a request, and a timeout has occurred.</documentation>
      </fault>
      <fault name="GET_Atms_GET_429" xmlns:q1159="http://laegler.com/openbanking/soap/service" message="q1159:GET_Atms_GET_429">
        <documentation>You have requested this resource too often. Slow down.</documentation>
      </fault>
      <fault name="GET_Atms_GET_500" xmlns:q1160="http://laegler.com/openbanking/soap/service" message="q1160:GET_Atms_GET_500">
        <documentation>An error occurred on the server. No further information is available.</documentation>
      </fault>
      <fault name="GET_Atms_GET_503" xmlns:q1161="http://laegler.com/openbanking/soap/service" message="q1161:GET_Atms_GET_503">
        <documentation>The service is temporarily unavailable.</documentation>
      </fault>
      <fault name="GET_Atms_GET_Default" xmlns:q1162="http://laegler.com/openbanking/soap/service" message="q1162:GET_Atms_GET_Default">
        <documentation>A standard error response.</documentation>
      </fault>
    </operation>
    <operation name="GET_PersonalCurrentAccounts_GET">
      <documentation>Gets a list of all `Personal Current Account` objects.</documentation>
      <input xmlns:q1163="http://laegler.com/openbanking/soap/service" message="q1163:GET_PersonalCurrentAccounts_GET_InputMessage" />
      <output xmlns:q1164="http://laegler.com/openbanking/soap/service" message="q1164:GET_PersonalCurrentAccounts_GET_OutputMessage">
        <documentation>Successful response with a list of `Personal Current Account` data</documentation>
      </output>
      <fault name="GET_PersonalCurrentAccounts_GET_400" xmlns:q1165="http://laegler.com/openbanking/soap/service" message="q1165:GET_PersonalCurrentAccounts_GET_400">
        <documentation>You have sent a request which could not be understood.</documentation>
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_408" xmlns:q1166="http://laegler.com/openbanking/soap/service" message="q1166:GET_PersonalCurrentAccounts_GET_408">
        <documentation>Your client has failed to submit a request, and a timeout has occurred.</documentation>
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_429" xmlns:q1167="http://laegler.com/openbanking/soap/service" message="q1167:GET_PersonalCurrentAccounts_GET_429">
        <documentation>You have requested this resource too often. Slow down.</documentation>
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_500" xmlns:q1168="http://laegler.com/openbanking/soap/service" message="q1168:GET_PersonalCurrentAccounts_GET_500">
        <documentation>An error occurred on the server. No further information is available.</documentation>
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_503" xmlns:q1169="http://laegler.com/openbanking/soap/service" message="q1169:GET_PersonalCurrentAccounts_GET_503">
        <documentation>The service is temporarily unavailable.</documentation>
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_Default" xmlns:q1170="http://laegler.com/openbanking/soap/service" message="q1170:GET_PersonalCurrentAccounts_GET_Default">
        <documentation>A standard error response.</documentation>
      </fault>
    </operation>
    <operation name="GET_Branches_GET">
      <documentation>Gets a list of all `Branch` objects.</documentation>
      <input xmlns:q1171="http://laegler.com/openbanking/soap/service" message="q1171:GET_Branches_GET_InputMessage" />
      <output xmlns:q1172="http://laegler.com/openbanking/soap/service" message="q1172:GET_Branches_GET_OutputMessage">
        <documentation>Successful response with a list of `Branch` data</documentation>
      </output>
      <fault name="GET_Branches_GET_400" xmlns:q1173="http://laegler.com/openbanking/soap/service" message="q1173:GET_Branches_GET_400">
        <documentation>You have sent a request which could not be understood.</documentation>
      </fault>
      <fault name="GET_Branches_GET_408" xmlns:q1174="http://laegler.com/openbanking/soap/service" message="q1174:GET_Branches_GET_408">
        <documentation>Your client has failed to submit a request, and a timeout has occurred.</documentation>
      </fault>
      <fault name="GET_Branches_GET_429" xmlns:q1175="http://laegler.com/openbanking/soap/service" message="q1175:GET_Branches_GET_429">
        <documentation>You have requested this resource too often. Slow down.</documentation>
      </fault>
      <fault name="GET_Branches_GET_500" xmlns:q1176="http://laegler.com/openbanking/soap/service" message="q1176:GET_Branches_GET_500">
        <documentation>An error occurred on the server. No further information is available.</documentation>
      </fault>
      <fault name="GET_Branches_GET_503" xmlns:q1177="http://laegler.com/openbanking/soap/service" message="q1177:GET_Branches_GET_503">
        <documentation>The service is temporarily unavailable.</documentation>
      </fault>
      <fault name="GET_Branches_GET_Default" xmlns:q1178="http://laegler.com/openbanking/soap/service" message="q1178:GET_Branches_GET_Default">
        <documentation>A standard error response.</documentation>
      </fault>
    </operation>
    <operation name="GET_BusinessCurrentAccounts_GET">
      <documentation>Gets a list of all `Branch Current Account` objects.</documentation>
      <input xmlns:q1179="http://laegler.com/openbanking/soap/service" message="q1179:GET_BusinessCurrentAccounts_GET_InputMessage" />
      <output xmlns:q1180="http://laegler.com/openbanking/soap/service" message="q1180:GET_BusinessCurrentAccounts_GET_OutputMessage">
        <documentation>Successful response with a list of `Branch Current Account` data</documentation>
      </output>
      <fault name="GET_BusinessCurrentAccounts_GET_400" xmlns:q1181="http://laegler.com/openbanking/soap/service" message="q1181:GET_BusinessCurrentAccounts_GET_400">
        <documentation>You have sent a request which could not be understood.</documentation>
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_408" xmlns:q1182="http://laegler.com/openbanking/soap/service" message="q1182:GET_BusinessCurrentAccounts_GET_408">
        <documentation>Your client has failed to submit a request, and a timeout has occurred.</documentation>
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_429" xmlns:q1183="http://laegler.com/openbanking/soap/service" message="q1183:GET_BusinessCurrentAccounts_GET_429">
        <documentation>You have requested this resource too often. Slow down.</documentation>
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_500" xmlns:q1184="http://laegler.com/openbanking/soap/service" message="q1184:GET_BusinessCurrentAccounts_GET_500">
        <documentation>An error occurred on the server. No further information is available.</documentation>
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_503" xmlns:q1185="http://laegler.com/openbanking/soap/service" message="q1185:GET_BusinessCurrentAccounts_GET_503">
        <documentation>The service is temporarily unavailable.</documentation>
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_Default" xmlns:q1186="http://laegler.com/openbanking/soap/service" message="q1186:GET_BusinessCurrentAccounts_GET_Default">
        <documentation>A standard error response.</documentation>
      </fault>
    </operation>
    <operation name="GET_Searchforoneormoreresources">
      <documentation>Search for one or more resources</documentation>
      <input xmlns:q1187="http://laegler.com/openbanking/soap/service" message="q1187:GET_Searchforoneormoreresources_InputMessage" />
      <output xmlns:q1188="http://laegler.com/openbanking/soap/service" message="q1188:GET_Searchforoneormoreresources_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="GET_Searchforoneormoreresources_Default" xmlns:q1189="http://laegler.com/openbanking/soap/service" message="q1189:GET_Searchforoneormoreresources_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="POST_SearchforoneormoreresourcesusingHTTPPOST">
      <documentation>Useful for executing searches without passing parameters that may contain sensitive information on the URL.</documentation>
      <input xmlns:q1190="http://laegler.com/openbanking/soap/service" message="q1190:POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
      <output xmlns:q1191="http://laegler.com/openbanking/soap/service" message="q1191:POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q1192="http://laegler.com/openbanking/soap/service" message="q1192:POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="GET_Retrievetheresource">
      <documentation>Retrieve the resource</documentation>
      <input xmlns:q1193="http://laegler.com/openbanking/soap/service" message="q1193:GET_Retrievetheresource_InputMessage" />
      <output xmlns:q1194="http://laegler.com/openbanking/soap/service" message="q1194:GET_Retrievetheresource_OutputMessage">
        <documentation>The retrieved resource is included in the response body</documentation>
      </output>
      <fault name="GET_Retrievetheresource_Default" xmlns:q1195="http://laegler.com/openbanking/soap/service" message="q1195:GET_Retrievetheresource_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources">
      <documentation>Search for one or more resources</documentation>
      <input xmlns:q1196="http://laegler.com/openbanking/soap/service" message="q1196:OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage" />
      <output xmlns:q1197="http://laegler.com/openbanking/soap/service" message="q1197:OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default" xmlns:q1198="http://laegler.com/openbanking/soap/service" message="q1198:OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST">
      <documentation>Useful for executing searches without passing parameters that may contain sensitive information on the URL.</documentation>
      <input xmlns:q1199="http://laegler.com/openbanking/soap/service" message="q1199:OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
      <output xmlns:q1200="http://laegler.com/openbanking/soap/service" message="q1200:OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q1201="http://laegler.com/openbanking/soap/service" message="q1201:OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBAccountPaymentServiceProviders_GET_Retrievetheresource">
      <documentation>Retrieve the resource</documentation>
      <input xmlns:q1202="http://laegler.com/openbanking/soap/service" message="q1202:OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage" />
      <output xmlns:q1203="http://laegler.com/openbanking/soap/service" message="q1203:OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage">
        <documentation>The retrieved resource is included in the response body</documentation>
      </output>
      <fault name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default" xmlns:q1204="http://laegler.com/openbanking/soap/service" message="q1204:OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBAuthorities_GET_Searchforoneormoreresources">
      <documentation>Search for one or more resources</documentation>
      <input xmlns:q1205="http://laegler.com/openbanking/soap/service" message="q1205:OBAuthorities_GET_Searchforoneormoreresources_InputMessage" />
      <output xmlns:q1206="http://laegler.com/openbanking/soap/service" message="q1206:OBAuthorities_GET_Searchforoneormoreresources_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="OBAuthorities_GET_Searchforoneormoreresources_Default" xmlns:q1207="http://laegler.com/openbanking/soap/service" message="q1207:OBAuthorities_GET_Searchforoneormoreresources_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST">
      <documentation>Useful for executing searches without passing parameters that may contain sensitive information on the URL.</documentation>
      <input xmlns:q1208="http://laegler.com/openbanking/soap/service" message="q1208:OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
      <output xmlns:q1209="http://laegler.com/openbanking/soap/service" message="q1209:OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q1210="http://laegler.com/openbanking/soap/service" message="q1210:OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBAuthorities_GET_Retrievetheresource">
      <documentation>Retrieve the resource</documentation>
      <input xmlns:q1211="http://laegler.com/openbanking/soap/service" message="q1211:OBAuthorities_GET_Retrievetheresource_InputMessage" />
      <output xmlns:q1212="http://laegler.com/openbanking/soap/service" message="q1212:OBAuthorities_GET_Retrievetheresource_OutputMessage">
        <documentation>The retrieved resource is included in the response body</documentation>
      </output>
      <fault name="OBAuthorities_GET_Retrievetheresource_Default" xmlns:q1213="http://laegler.com/openbanking/soap/service" message="q1213:OBAuthorities_GET_Retrievetheresource_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources">
      <documentation>Search for one or more resources</documentation>
      <input xmlns:q1214="http://laegler.com/openbanking/soap/service" message="q1214:OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage" />
      <output xmlns:q1215="http://laegler.com/openbanking/soap/service" message="q1215:OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default" xmlns:q1216="http://laegler.com/openbanking/soap/service" message="q1216:OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST">
      <documentation>Useful for executing searches without passing parameters that may contain sensitive information on the URL.</documentation>
      <input xmlns:q1217="http://laegler.com/openbanking/soap/service" message="q1217:OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage" />
      <output xmlns:q1218="http://laegler.com/openbanking/soap/service" message="q1218:OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage">
        <documentation>SCIM 2.0 List Response Message</documentation>
      </output>
      <fault name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:q1219="http://laegler.com/openbanking/soap/service" message="q1219:OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource">
      <documentation>Retrieve the resource</documentation>
      <input xmlns:q1220="http://laegler.com/openbanking/soap/service" message="q1220:OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage" />
      <output xmlns:q1221="http://laegler.com/openbanking/soap/service" message="q1221:OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage">
        <documentation>The retrieved resource is included in the response body</documentation>
      </output>
      <fault name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default" xmlns:q1222="http://laegler.com/openbanking/soap/service" message="q1222:OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default">
        <documentation>An error occurred while executing the operation</documentation>
      </fault>
    </operation>
    <operation name="POST_RegisteraclientbywayofaSoftwareStatementAssertion">
      <documentation>Endpoint will be secured by way of Mutual Authentication over TLS</documentation>
      <input xmlns:q1223="http://laegler.com/openbanking/soap/service" message="q1223:POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage" />
      <output xmlns:q1224="http://laegler.com/openbanking/soap/service" message="q1224:POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage">
        <documentation>Client registration</documentation>
      </output>
      <fault name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_400" xmlns:q1225="http://laegler.com/openbanking/soap/service" message="q1225:POST_RegisteraclientbywayofaSoftwareStatementAssertion_400">
        <documentation>Bad request</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteaclientbywayofClientID">
      <documentation>Delete a client by way of Client ID</documentation>
      <input xmlns:q1226="http://laegler.com/openbanking/soap/service" message="q1226:DELETE_DeleteaclientbywayofClientID_InputMessage" />
      <output xmlns:q1227="http://laegler.com/openbanking/soap/service" message="q1227:DELETE_DeleteaclientbywayofClientID_OutputMessage">
        <documentation>Client deleted</documentation>
      </output>
      <fault name="DELETE_DeleteaclientbywayofClientID_401" xmlns:q1228="http://laegler.com/openbanking/soap/service" message="q1228:DELETE_DeleteaclientbywayofClientID_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_DeleteaclientbywayofClientID_403" xmlns:q1229="http://laegler.com/openbanking/soap/service" message="q1229:DELETE_DeleteaclientbywayofClientID_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="DELETE_DeleteaclientbywayofClientID_405" xmlns:q1230="http://laegler.com/openbanking/soap/service" message="q1230:DELETE_DeleteaclientbywayofClientID_405">
        <documentation>Forbidden</documentation>
      </fault>
    </operation>
    <operation name="GET_GetaclientbywayofClientID">
      <documentation>Get a client by way of Client ID</documentation>
      <input xmlns:q1231="http://laegler.com/openbanking/soap/service" message="q1231:GET_GetaclientbywayofClientID_InputMessage" />
      <output xmlns:q1232="http://laegler.com/openbanking/soap/service" message="q1232:GET_GetaclientbywayofClientID_OutputMessage">
        <documentation>Client registration</documentation>
      </output>
      <fault name="GET_GetaclientbywayofClientID_401" xmlns:q1233="http://laegler.com/openbanking/soap/service" message="q1233:GET_GetaclientbywayofClientID_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetaclientbywayofClientID_403" xmlns:q1234="http://laegler.com/openbanking/soap/service" message="q1234:GET_GetaclientbywayofClientID_403">
        <documentation>Forbidden</documentation>
      </fault>
    </operation>
    <operation name="PUT_UpdateaclientbywayofClientID">
      <documentation>Update a client by way of Client ID</documentation>
      <input xmlns:q1235="http://laegler.com/openbanking/soap/service" message="q1235:PUT_UpdateaclientbywayofClientID_InputMessage" />
      <output xmlns:q1236="http://laegler.com/openbanking/soap/service" message="q1236:PUT_UpdateaclientbywayofClientID_OutputMessage">
        <documentation>Client registration</documentation>
      </output>
      <fault name="PUT_UpdateaclientbywayofClientID_400" xmlns:q1237="http://laegler.com/openbanking/soap/service" message="q1237:PUT_UpdateaclientbywayofClientID_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="PUT_UpdateaclientbywayofClientID_401" xmlns:q1238="http://laegler.com/openbanking/soap/service" message="q1238:PUT_UpdateaclientbywayofClientID_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_UpdateaclientbywayofClientID_403" xmlns:q1239="http://laegler.com/openbanking/soap/service" message="q1239:PUT_UpdateaclientbywayofClientID_403">
        <documentation>Forbidden</documentation>
      </fault>
    </operation>
    <operation name="GET_ReadallcallbackURLs">
      <documentation>Read all callback URLs</documentation>
      <input xmlns:q1240="http://laegler.com/openbanking/soap/service" message="q1240:GET_ReadallcallbackURLs_InputMessage" />
      <output xmlns:q1241="http://laegler.com/openbanking/soap/service" message="q1241:GET_ReadallcallbackURLs_OutputMessage">
        <documentation>An array of callback URLs</documentation>
      </output>
      <fault name="GET_ReadallcallbackURLs_400" xmlns:q1242="http://laegler.com/openbanking/soap/service" message="q1242:GET_ReadallcallbackURLs_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_401" xmlns:q1243="http://laegler.com/openbanking/soap/service" message="q1243:GET_ReadallcallbackURLs_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_403" xmlns:q1244="http://laegler.com/openbanking/soap/service" message="q1244:GET_ReadallcallbackURLs_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_404" xmlns:q1245="http://laegler.com/openbanking/soap/service" message="q1245:GET_ReadallcallbackURLs_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_405" xmlns:q1246="http://laegler.com/openbanking/soap/service" message="q1246:GET_ReadallcallbackURLs_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_406" xmlns:q1247="http://laegler.com/openbanking/soap/service" message="q1247:GET_ReadallcallbackURLs_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_429" xmlns:q1248="http://laegler.com/openbanking/soap/service" message="q1248:GET_ReadallcallbackURLs_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_ReadallcallbackURLs_500" xmlns:q1249="http://laegler.com/openbanking/soap/service" message="q1249:GET_ReadallcallbackURLs_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateacallbackURL">
      <documentation>Create a callback URL</documentation>
      <input xmlns:q1250="http://laegler.com/openbanking/soap/service" message="q1250:POST_CreateacallbackURL_InputMessage" />
      <output xmlns:q1251="http://laegler.com/openbanking/soap/service" message="q1251:POST_CreateacallbackURL_OutputMessage">
        <documentation>Callback URL created</documentation>
      </output>
      <fault name="POST_CreateacallbackURL_400" xmlns:q1252="http://laegler.com/openbanking/soap/service" message="q1252:POST_CreateacallbackURL_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_401" xmlns:q1253="http://laegler.com/openbanking/soap/service" message="q1253:POST_CreateacallbackURL_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_403" xmlns:q1254="http://laegler.com/openbanking/soap/service" message="q1254:POST_CreateacallbackURL_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_405" xmlns:q1255="http://laegler.com/openbanking/soap/service" message="q1255:POST_CreateacallbackURL_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_406" xmlns:q1256="http://laegler.com/openbanking/soap/service" message="q1256:POST_CreateacallbackURL_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_415" xmlns:q1257="http://laegler.com/openbanking/soap/service" message="q1257:POST_CreateacallbackURL_415">
        <documentation>Unsupported Media Type</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_429" xmlns:q1258="http://laegler.com/openbanking/soap/service" message="q1258:POST_CreateacallbackURL_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateacallbackURL_500" xmlns:q1259="http://laegler.com/openbanking/soap/service" message="q1259:POST_CreateacallbackURL_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteacallbackURI">
      <documentation>Delete a callback URI</documentation>
      <input xmlns:q1260="http://laegler.com/openbanking/soap/service" message="q1260:DELETE_DeleteacallbackURI_InputMessage" />
      <output xmlns:q1261="http://laegler.com/openbanking/soap/service" message="q1261:DELETE_DeleteacallbackURI_OutputMessage">
        <documentation>Callback URL changed</documentation>
      </output>
      <fault name="DELETE_DeleteacallbackURI_400" xmlns:q1262="http://laegler.com/openbanking/soap/service" message="q1262:DELETE_DeleteacallbackURI_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_401" xmlns:q1263="http://laegler.com/openbanking/soap/service" message="q1263:DELETE_DeleteacallbackURI_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_403" xmlns:q1264="http://laegler.com/openbanking/soap/service" message="q1264:DELETE_DeleteacallbackURI_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_404" xmlns:q1265="http://laegler.com/openbanking/soap/service" message="q1265:DELETE_DeleteacallbackURI_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_405" xmlns:q1266="http://laegler.com/openbanking/soap/service" message="q1266:DELETE_DeleteacallbackURI_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_406" xmlns:q1267="http://laegler.com/openbanking/soap/service" message="q1267:DELETE_DeleteacallbackURI_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_429" xmlns:q1268="http://laegler.com/openbanking/soap/service" message="q1268:DELETE_DeleteacallbackURI_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="DELETE_DeleteacallbackURI_500" xmlns:q1269="http://laegler.com/openbanking/soap/service" message="q1269:DELETE_DeleteacallbackURI_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="PUT_AmendacallbackURI">
      <documentation>Amend a callback URI</documentation>
      <input xmlns:q1270="http://laegler.com/openbanking/soap/service" message="q1270:PUT_AmendacallbackURI_InputMessage" />
      <output xmlns:q1271="http://laegler.com/openbanking/soap/service" message="q1271:PUT_AmendacallbackURI_OutputMessage">
        <documentation>Callback URL changed</documentation>
      </output>
      <fault name="PUT_AmendacallbackURI_400" xmlns:q1272="http://laegler.com/openbanking/soap/service" message="q1272:PUT_AmendacallbackURI_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_401" xmlns:q1273="http://laegler.com/openbanking/soap/service" message="q1273:PUT_AmendacallbackURI_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_403" xmlns:q1274="http://laegler.com/openbanking/soap/service" message="q1274:PUT_AmendacallbackURI_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_404" xmlns:q1275="http://laegler.com/openbanking/soap/service" message="q1275:PUT_AmendacallbackURI_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_405" xmlns:q1276="http://laegler.com/openbanking/soap/service" message="q1276:PUT_AmendacallbackURI_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_406" xmlns:q1277="http://laegler.com/openbanking/soap/service" message="q1277:PUT_AmendacallbackURI_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_415" xmlns:q1278="http://laegler.com/openbanking/soap/service" message="q1278:PUT_AmendacallbackURI_415">
        <documentation>Unsupported Media Type</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_429" xmlns:q1279="http://laegler.com/openbanking/soap/service" message="q1279:PUT_AmendacallbackURI_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="PUT_AmendacallbackURI_500" xmlns:q1280="http://laegler.com/openbanking/soap/service" message="q1280:PUT_AmendacallbackURI_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateFundsConfirmationConsents">
      <documentation>Create Funds Confirmation Consent</documentation>
      <input xmlns:q1281="http://laegler.com/openbanking/soap/service" message="q1281:POST_CreateFundsConfirmationConsents_InputMessage" />
      <output xmlns:q1282="http://laegler.com/openbanking/soap/service" message="q1282:POST_CreateFundsConfirmationConsents_OutputMessage">
        <documentation>Funds Confirmation Consent Created</documentation>
      </output>
      <fault name="POST_CreateFundsConfirmationConsents_400" xmlns:q1283="http://laegler.com/openbanking/soap/service" message="q1283:POST_CreateFundsConfirmationConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_401" xmlns:q1284="http://laegler.com/openbanking/soap/service" message="q1284:POST_CreateFundsConfirmationConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_403" xmlns:q1285="http://laegler.com/openbanking/soap/service" message="q1285:POST_CreateFundsConfirmationConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_404" xmlns:q1286="http://laegler.com/openbanking/soap/service" message="q1286:POST_CreateFundsConfirmationConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_405" xmlns:q1287="http://laegler.com/openbanking/soap/service" message="q1287:POST_CreateFundsConfirmationConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_406" xmlns:q1288="http://laegler.com/openbanking/soap/service" message="q1288:POST_CreateFundsConfirmationConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_429" xmlns:q1289="http://laegler.com/openbanking/soap/service" message="q1289:POST_CreateFundsConfirmationConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_500" xmlns:q1290="http://laegler.com/openbanking/soap/service" message="q1290:POST_CreateFundsConfirmationConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteFundsConfirmationConsentsConsentId">
      <documentation>Delete Funds Confirmation Consent</documentation>
      <input xmlns:q1291="http://laegler.com/openbanking/soap/service" message="q1291:DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage" />
      <output xmlns:q1292="http://laegler.com/openbanking/soap/service" message="q1292:DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage">
        <documentation>Funds Confirmation Consent Deleted</documentation>
      </output>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_400" xmlns:q1293="http://laegler.com/openbanking/soap/service" message="q1293:DELETE_DeleteFundsConfirmationConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_401" xmlns:q1294="http://laegler.com/openbanking/soap/service" message="q1294:DELETE_DeleteFundsConfirmationConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_403" xmlns:q1295="http://laegler.com/openbanking/soap/service" message="q1295:DELETE_DeleteFundsConfirmationConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_404" xmlns:q1296="http://laegler.com/openbanking/soap/service" message="q1296:DELETE_DeleteFundsConfirmationConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_405" xmlns:q1297="http://laegler.com/openbanking/soap/service" message="q1297:DELETE_DeleteFundsConfirmationConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_406" xmlns:q1298="http://laegler.com/openbanking/soap/service" message="q1298:DELETE_DeleteFundsConfirmationConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_429" xmlns:q1299="http://laegler.com/openbanking/soap/service" message="q1299:DELETE_DeleteFundsConfirmationConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_500" xmlns:q1300="http://laegler.com/openbanking/soap/service" message="q1300:DELETE_DeleteFundsConfirmationConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFundsConfirmationConsentsConsentId">
      <documentation>Get Funds Confirmation Consent</documentation>
      <input xmlns:q1301="http://laegler.com/openbanking/soap/service" message="q1301:GET_GetFundsConfirmationConsentsConsentId_InputMessage" />
      <output xmlns:q1302="http://laegler.com/openbanking/soap/service" message="q1302:GET_GetFundsConfirmationConsentsConsentId_OutputMessage">
        <documentation>Funds Confirmation Consent Read</documentation>
      </output>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_400" xmlns:q1303="http://laegler.com/openbanking/soap/service" message="q1303:GET_GetFundsConfirmationConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_401" xmlns:q1304="http://laegler.com/openbanking/soap/service" message="q1304:GET_GetFundsConfirmationConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_403" xmlns:q1305="http://laegler.com/openbanking/soap/service" message="q1305:GET_GetFundsConfirmationConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_404" xmlns:q1306="http://laegler.com/openbanking/soap/service" message="q1306:GET_GetFundsConfirmationConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_405" xmlns:q1307="http://laegler.com/openbanking/soap/service" message="q1307:GET_GetFundsConfirmationConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_406" xmlns:q1308="http://laegler.com/openbanking/soap/service" message="q1308:GET_GetFundsConfirmationConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_429" xmlns:q1309="http://laegler.com/openbanking/soap/service" message="q1309:GET_GetFundsConfirmationConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_500" xmlns:q1310="http://laegler.com/openbanking/soap/service" message="q1310:GET_GetFundsConfirmationConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateFundsConfirmations">
      <documentation>Create Funds Confirmation</documentation>
      <input xmlns:q1311="http://laegler.com/openbanking/soap/service" message="q1311:POST_CreateFundsConfirmations_InputMessage" />
      <output xmlns:q1312="http://laegler.com/openbanking/soap/service" message="q1312:POST_CreateFundsConfirmations_OutputMessage">
        <documentation>Funds Confirmation Created</documentation>
      </output>
      <fault name="POST_CreateFundsConfirmations_400" xmlns:q1313="http://laegler.com/openbanking/soap/service" message="q1313:POST_CreateFundsConfirmations_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_401" xmlns:q1314="http://laegler.com/openbanking/soap/service" message="q1314:POST_CreateFundsConfirmations_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_403" xmlns:q1315="http://laegler.com/openbanking/soap/service" message="q1315:POST_CreateFundsConfirmations_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_404" xmlns:q1316="http://laegler.com/openbanking/soap/service" message="q1316:POST_CreateFundsConfirmations_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_405" xmlns:q1317="http://laegler.com/openbanking/soap/service" message="q1317:POST_CreateFundsConfirmations_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_406" xmlns:q1318="http://laegler.com/openbanking/soap/service" message="q1318:POST_CreateFundsConfirmations_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_429" xmlns:q1319="http://laegler.com/openbanking/soap/service" message="q1319:POST_CreateFundsConfirmations_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateFundsConfirmations_500" xmlns:q1320="http://laegler.com/openbanking/soap/service" message="q1320:POST_CreateFundsConfirmations_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateEventNotification">
      <documentation>Send an event notification</documentation>
      <input xmlns:q1321="http://laegler.com/openbanking/soap/service" message="q1321:POST_CreateEventNotification_InputMessage" />
      <output xmlns:q1322="http://laegler.com/openbanking/soap/service" message="q1322:POST_CreateEventNotification_OutputMessage">
        <documentation>Accepted</documentation>
      </output>
    </operation>
    <operation name="GET_GetEventSubscriptions">
      <documentation>Get Event Subscription</documentation>
      <input xmlns:q1323="http://laegler.com/openbanking/soap/service" message="q1323:GET_GetEventSubscriptions_InputMessage" />
      <output xmlns:q1324="http://laegler.com/openbanking/soap/service" message="q1324:GET_GetEventSubscriptions_OutputMessage">
        <documentation>Event Subscription Read</documentation>
      </output>
      <fault name="GET_GetEventSubscriptions_400" xmlns:q1325="http://laegler.com/openbanking/soap/service" message="q1325:GET_GetEventSubscriptions_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_401" xmlns:q1326="http://laegler.com/openbanking/soap/service" message="q1326:GET_GetEventSubscriptions_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_403" xmlns:q1327="http://laegler.com/openbanking/soap/service" message="q1327:GET_GetEventSubscriptions_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_404" xmlns:q1328="http://laegler.com/openbanking/soap/service" message="q1328:GET_GetEventSubscriptions_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_405" xmlns:q1329="http://laegler.com/openbanking/soap/service" message="q1329:GET_GetEventSubscriptions_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_406" xmlns:q1330="http://laegler.com/openbanking/soap/service" message="q1330:GET_GetEventSubscriptions_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_429" xmlns:q1331="http://laegler.com/openbanking/soap/service" message="q1331:GET_GetEventSubscriptions_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetEventSubscriptions_500" xmlns:q1332="http://laegler.com/openbanking/soap/service" message="q1332:GET_GetEventSubscriptions_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateEventSubscriptions">
      <documentation>Create Event Subscription</documentation>
      <input xmlns:q1333="http://laegler.com/openbanking/soap/service" message="q1333:POST_CreateEventSubscriptions_InputMessage" />
      <output xmlns:q1334="http://laegler.com/openbanking/soap/service" message="q1334:POST_CreateEventSubscriptions_OutputMessage">
        <documentation>Event Subscription Created</documentation>
      </output>
      <fault name="POST_CreateEventSubscriptions_400" xmlns:q1335="http://laegler.com/openbanking/soap/service" message="q1335:POST_CreateEventSubscriptions_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_401" xmlns:q1336="http://laegler.com/openbanking/soap/service" message="q1336:POST_CreateEventSubscriptions_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_403" xmlns:q1337="http://laegler.com/openbanking/soap/service" message="q1337:POST_CreateEventSubscriptions_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_404" xmlns:q1338="http://laegler.com/openbanking/soap/service" message="q1338:POST_CreateEventSubscriptions_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_405" xmlns:q1339="http://laegler.com/openbanking/soap/service" message="q1339:POST_CreateEventSubscriptions_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_406" xmlns:q1340="http://laegler.com/openbanking/soap/service" message="q1340:POST_CreateEventSubscriptions_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_429" xmlns:q1341="http://laegler.com/openbanking/soap/service" message="q1341:POST_CreateEventSubscriptions_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateEventSubscriptions_500" xmlns:q1342="http://laegler.com/openbanking/soap/service" message="q1342:POST_CreateEventSubscriptions_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteEventSubscriptionsEventSubscriptionId">
      <documentation>Delete Event Subscription</documentation>
      <input xmlns:q1343="http://laegler.com/openbanking/soap/service" message="q1343:DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage" />
      <output xmlns:q1344="http://laegler.com/openbanking/soap/service" message="q1344:DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage">
        <documentation>Event Subscription Deleted</documentation>
      </output>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_400" xmlns:q1345="http://laegler.com/openbanking/soap/service" message="q1345:DELETE_DeleteEventSubscriptionsEventSubscriptionId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_401" xmlns:q1346="http://laegler.com/openbanking/soap/service" message="q1346:DELETE_DeleteEventSubscriptionsEventSubscriptionId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_403" xmlns:q1347="http://laegler.com/openbanking/soap/service" message="q1347:DELETE_DeleteEventSubscriptionsEventSubscriptionId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_404" xmlns:q1348="http://laegler.com/openbanking/soap/service" message="q1348:DELETE_DeleteEventSubscriptionsEventSubscriptionId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_405" xmlns:q1349="http://laegler.com/openbanking/soap/service" message="q1349:DELETE_DeleteEventSubscriptionsEventSubscriptionId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_406" xmlns:q1350="http://laegler.com/openbanking/soap/service" message="q1350:DELETE_DeleteEventSubscriptionsEventSubscriptionId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_429" xmlns:q1351="http://laegler.com/openbanking/soap/service" message="q1351:DELETE_DeleteEventSubscriptionsEventSubscriptionId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_500" xmlns:q1352="http://laegler.com/openbanking/soap/service" message="q1352:DELETE_DeleteEventSubscriptionsEventSubscriptionId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="PUT_ChangeEventSubscriptionsEventSubscriptionId">
      <documentation>Change Event Subscription</documentation>
      <input xmlns:q1353="http://laegler.com/openbanking/soap/service" message="q1353:PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage" />
      <output xmlns:q1354="http://laegler.com/openbanking/soap/service" message="q1354:PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage">
        <documentation>Event Subscription Changed</documentation>
      </output>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_400" xmlns:q1355="http://laegler.com/openbanking/soap/service" message="q1355:PUT_ChangeEventSubscriptionsEventSubscriptionId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_401" xmlns:q1356="http://laegler.com/openbanking/soap/service" message="q1356:PUT_ChangeEventSubscriptionsEventSubscriptionId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_403" xmlns:q1357="http://laegler.com/openbanking/soap/service" message="q1357:PUT_ChangeEventSubscriptionsEventSubscriptionId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_404" xmlns:q1358="http://laegler.com/openbanking/soap/service" message="q1358:PUT_ChangeEventSubscriptionsEventSubscriptionId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_405" xmlns:q1359="http://laegler.com/openbanking/soap/service" message="q1359:PUT_ChangeEventSubscriptionsEventSubscriptionId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_406" xmlns:q1360="http://laegler.com/openbanking/soap/service" message="q1360:PUT_ChangeEventSubscriptionsEventSubscriptionId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_429" xmlns:q1361="http://laegler.com/openbanking/soap/service" message="q1361:PUT_ChangeEventSubscriptionsEventSubscriptionId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_500" xmlns:q1362="http://laegler.com/openbanking/soap/service" message="q1362:PUT_ChangeEventSubscriptionsEventSubscriptionId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateDomesticPaymentConsents">
      <documentation>Create Domestic Payment Consents</documentation>
      <input xmlns:q1363="http://laegler.com/openbanking/soap/service" message="q1363:POST_CreateDomesticPaymentConsents_InputMessage" />
      <output xmlns:q1364="http://laegler.com/openbanking/soap/service" message="q1364:POST_CreateDomesticPaymentConsents_OutputMessage">
        <documentation>Domestic Payment Consents Created</documentation>
      </output>
      <fault name="POST_CreateDomesticPaymentConsents_400" xmlns:q1365="http://laegler.com/openbanking/soap/service" message="q1365:POST_CreateDomesticPaymentConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_401" xmlns:q1366="http://laegler.com/openbanking/soap/service" message="q1366:POST_CreateDomesticPaymentConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_403" xmlns:q1367="http://laegler.com/openbanking/soap/service" message="q1367:POST_CreateDomesticPaymentConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_404" xmlns:q1368="http://laegler.com/openbanking/soap/service" message="q1368:POST_CreateDomesticPaymentConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_405" xmlns:q1369="http://laegler.com/openbanking/soap/service" message="q1369:POST_CreateDomesticPaymentConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_406" xmlns:q1370="http://laegler.com/openbanking/soap/service" message="q1370:POST_CreateDomesticPaymentConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_429" xmlns:q1371="http://laegler.com/openbanking/soap/service" message="q1371:POST_CreateDomesticPaymentConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_500" xmlns:q1372="http://laegler.com/openbanking/soap/service" message="q1372:POST_CreateDomesticPaymentConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentConsentsConsentId">
      <documentation>Get Domestic Payment Consents</documentation>
      <input xmlns:q1373="http://laegler.com/openbanking/soap/service" message="q1373:GET_GetDomesticPaymentConsentsConsentId_InputMessage" />
      <output xmlns:q1374="http://laegler.com/openbanking/soap/service" message="q1374:GET_GetDomesticPaymentConsentsConsentId_OutputMessage">
        <documentation>Domestic Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_400" xmlns:q1375="http://laegler.com/openbanking/soap/service" message="q1375:GET_GetDomesticPaymentConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_401" xmlns:q1376="http://laegler.com/openbanking/soap/service" message="q1376:GET_GetDomesticPaymentConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_403" xmlns:q1377="http://laegler.com/openbanking/soap/service" message="q1377:GET_GetDomesticPaymentConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_404" xmlns:q1378="http://laegler.com/openbanking/soap/service" message="q1378:GET_GetDomesticPaymentConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_405" xmlns:q1379="http://laegler.com/openbanking/soap/service" message="q1379:GET_GetDomesticPaymentConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_406" xmlns:q1380="http://laegler.com/openbanking/soap/service" message="q1380:GET_GetDomesticPaymentConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_429" xmlns:q1381="http://laegler.com/openbanking/soap/service" message="q1381:GET_GetDomesticPaymentConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_500" xmlns:q1382="http://laegler.com/openbanking/soap/service" message="q1382:GET_GetDomesticPaymentConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation">
      <documentation>Get Domestic Payment Consents</documentation>
      <input xmlns:q1383="http://laegler.com/openbanking/soap/service" message="q1383:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage" />
      <output xmlns:q1384="http://laegler.com/openbanking/soap/service" message="q1384:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage">
        <documentation>Domestic Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400" xmlns:q1385="http://laegler.com/openbanking/soap/service" message="q1385:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401" xmlns:q1386="http://laegler.com/openbanking/soap/service" message="q1386:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403" xmlns:q1387="http://laegler.com/openbanking/soap/service" message="q1387:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404" xmlns:q1388="http://laegler.com/openbanking/soap/service" message="q1388:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405" xmlns:q1389="http://laegler.com/openbanking/soap/service" message="q1389:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406" xmlns:q1390="http://laegler.com/openbanking/soap/service" message="q1390:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429" xmlns:q1391="http://laegler.com/openbanking/soap/service" message="q1391:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500" xmlns:q1392="http://laegler.com/openbanking/soap/service" message="q1392:GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateDomesticPayments">
      <documentation>Create Domestic Payments</documentation>
      <input xmlns:q1393="http://laegler.com/openbanking/soap/service" message="q1393:POST_CreateDomesticPayments_InputMessage" />
      <output xmlns:q1394="http://laegler.com/openbanking/soap/service" message="q1394:POST_CreateDomesticPayments_OutputMessage">
        <documentation>Domestic Payments Created</documentation>
      </output>
      <fault name="POST_CreateDomesticPayments_400" xmlns:q1395="http://laegler.com/openbanking/soap/service" message="q1395:POST_CreateDomesticPayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_401" xmlns:q1396="http://laegler.com/openbanking/soap/service" message="q1396:POST_CreateDomesticPayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_403" xmlns:q1397="http://laegler.com/openbanking/soap/service" message="q1397:POST_CreateDomesticPayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_404" xmlns:q1398="http://laegler.com/openbanking/soap/service" message="q1398:POST_CreateDomesticPayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_405" xmlns:q1399="http://laegler.com/openbanking/soap/service" message="q1399:POST_CreateDomesticPayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_406" xmlns:q1400="http://laegler.com/openbanking/soap/service" message="q1400:POST_CreateDomesticPayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_429" xmlns:q1401="http://laegler.com/openbanking/soap/service" message="q1401:POST_CreateDomesticPayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateDomesticPayments_500" xmlns:q1402="http://laegler.com/openbanking/soap/service" message="q1402:POST_CreateDomesticPayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentsDomesticPaymentId">
      <documentation>Get Domestic Payments</documentation>
      <input xmlns:q1403="http://laegler.com/openbanking/soap/service" message="q1403:GET_GetDomesticPaymentsDomesticPaymentId_InputMessage" />
      <output xmlns:q1404="http://laegler.com/openbanking/soap/service" message="q1404:GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage">
        <documentation>Domestic Payments Read</documentation>
      </output>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_400" xmlns:q1405="http://laegler.com/openbanking/soap/service" message="q1405:GET_GetDomesticPaymentsDomesticPaymentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_401" xmlns:q1406="http://laegler.com/openbanking/soap/service" message="q1406:GET_GetDomesticPaymentsDomesticPaymentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_403" xmlns:q1407="http://laegler.com/openbanking/soap/service" message="q1407:GET_GetDomesticPaymentsDomesticPaymentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_404" xmlns:q1408="http://laegler.com/openbanking/soap/service" message="q1408:GET_GetDomesticPaymentsDomesticPaymentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_405" xmlns:q1409="http://laegler.com/openbanking/soap/service" message="q1409:GET_GetDomesticPaymentsDomesticPaymentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_406" xmlns:q1410="http://laegler.com/openbanking/soap/service" message="q1410:GET_GetDomesticPaymentsDomesticPaymentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_429" xmlns:q1411="http://laegler.com/openbanking/soap/service" message="q1411:GET_GetDomesticPaymentsDomesticPaymentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_500" xmlns:q1412="http://laegler.com/openbanking/soap/service" message="q1412:GET_GetDomesticPaymentsDomesticPaymentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateDomesticScheduledPaymentConsents">
      <documentation>Create Domestic Scheduled Payment Consents</documentation>
      <input xmlns:q1413="http://laegler.com/openbanking/soap/service" message="q1413:POST_CreateDomesticScheduledPaymentConsents_InputMessage" />
      <output xmlns:q1414="http://laegler.com/openbanking/soap/service" message="q1414:POST_CreateDomesticScheduledPaymentConsents_OutputMessage">
        <documentation>Domestic Scheduled Payment Consents Created</documentation>
      </output>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_400" xmlns:q1415="http://laegler.com/openbanking/soap/service" message="q1415:POST_CreateDomesticScheduledPaymentConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_401" xmlns:q1416="http://laegler.com/openbanking/soap/service" message="q1416:POST_CreateDomesticScheduledPaymentConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_403" xmlns:q1417="http://laegler.com/openbanking/soap/service" message="q1417:POST_CreateDomesticScheduledPaymentConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_404" xmlns:q1418="http://laegler.com/openbanking/soap/service" message="q1418:POST_CreateDomesticScheduledPaymentConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_405" xmlns:q1419="http://laegler.com/openbanking/soap/service" message="q1419:POST_CreateDomesticScheduledPaymentConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_406" xmlns:q1420="http://laegler.com/openbanking/soap/service" message="q1420:POST_CreateDomesticScheduledPaymentConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_429" xmlns:q1421="http://laegler.com/openbanking/soap/service" message="q1421:POST_CreateDomesticScheduledPaymentConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_500" xmlns:q1422="http://laegler.com/openbanking/soap/service" message="q1422:POST_CreateDomesticScheduledPaymentConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticScheduledPaymentConsentsConsentId">
      <documentation>Get Domestic Scheduled Payment Consents</documentation>
      <input xmlns:q1423="http://laegler.com/openbanking/soap/service" message="q1423:GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage" />
      <output xmlns:q1424="http://laegler.com/openbanking/soap/service" message="q1424:GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage">
        <documentation>Domestic Scheduled Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_400" xmlns:q1425="http://laegler.com/openbanking/soap/service" message="q1425:GET_GetDomesticScheduledPaymentConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_401" xmlns:q1426="http://laegler.com/openbanking/soap/service" message="q1426:GET_GetDomesticScheduledPaymentConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_403" xmlns:q1427="http://laegler.com/openbanking/soap/service" message="q1427:GET_GetDomesticScheduledPaymentConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_404" xmlns:q1428="http://laegler.com/openbanking/soap/service" message="q1428:GET_GetDomesticScheduledPaymentConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_405" xmlns:q1429="http://laegler.com/openbanking/soap/service" message="q1429:GET_GetDomesticScheduledPaymentConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_406" xmlns:q1430="http://laegler.com/openbanking/soap/service" message="q1430:GET_GetDomesticScheduledPaymentConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_429" xmlns:q1431="http://laegler.com/openbanking/soap/service" message="q1431:GET_GetDomesticScheduledPaymentConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_500" xmlns:q1432="http://laegler.com/openbanking/soap/service" message="q1432:GET_GetDomesticScheduledPaymentConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateDomesticScheduledPayments">
      <documentation>Create Domestic Scheduled Payments</documentation>
      <input xmlns:q1433="http://laegler.com/openbanking/soap/service" message="q1433:POST_CreateDomesticScheduledPayments_InputMessage" />
      <output xmlns:q1434="http://laegler.com/openbanking/soap/service" message="q1434:POST_CreateDomesticScheduledPayments_OutputMessage">
        <documentation>Domestic Scheduled Payments Created</documentation>
      </output>
      <fault name="POST_CreateDomesticScheduledPayments_400" xmlns:q1435="http://laegler.com/openbanking/soap/service" message="q1435:POST_CreateDomesticScheduledPayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_401" xmlns:q1436="http://laegler.com/openbanking/soap/service" message="q1436:POST_CreateDomesticScheduledPayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_403" xmlns:q1437="http://laegler.com/openbanking/soap/service" message="q1437:POST_CreateDomesticScheduledPayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_404" xmlns:q1438="http://laegler.com/openbanking/soap/service" message="q1438:POST_CreateDomesticScheduledPayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_405" xmlns:q1439="http://laegler.com/openbanking/soap/service" message="q1439:POST_CreateDomesticScheduledPayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_406" xmlns:q1440="http://laegler.com/openbanking/soap/service" message="q1440:POST_CreateDomesticScheduledPayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_429" xmlns:q1441="http://laegler.com/openbanking/soap/service" message="q1441:POST_CreateDomesticScheduledPayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_500" xmlns:q1442="http://laegler.com/openbanking/soap/service" message="q1442:POST_CreateDomesticScheduledPayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId">
      <documentation>Get Domestic Scheduled Payments</documentation>
      <input xmlns:q1443="http://laegler.com/openbanking/soap/service" message="q1443:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage" />
      <output xmlns:q1444="http://laegler.com/openbanking/soap/service" message="q1444:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage">
        <documentation>Domestic Scheduled Payments Read</documentation>
      </output>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400" xmlns:q1445="http://laegler.com/openbanking/soap/service" message="q1445:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401" xmlns:q1446="http://laegler.com/openbanking/soap/service" message="q1446:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403" xmlns:q1447="http://laegler.com/openbanking/soap/service" message="q1447:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404" xmlns:q1448="http://laegler.com/openbanking/soap/service" message="q1448:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405" xmlns:q1449="http://laegler.com/openbanking/soap/service" message="q1449:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406" xmlns:q1450="http://laegler.com/openbanking/soap/service" message="q1450:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429" xmlns:q1451="http://laegler.com/openbanking/soap/service" message="q1451:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500" xmlns:q1452="http://laegler.com/openbanking/soap/service" message="q1452:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateFilePaymentConsents">
      <documentation>Create File Payment Consents</documentation>
      <input xmlns:q1453="http://laegler.com/openbanking/soap/service" message="q1453:POST_CreateFilePaymentConsents_InputMessage" />
      <output xmlns:q1454="http://laegler.com/openbanking/soap/service" message="q1454:POST_CreateFilePaymentConsents_OutputMessage">
        <documentation>File Payment Consents Created</documentation>
      </output>
      <fault name="POST_CreateFilePaymentConsents_400" xmlns:q1455="http://laegler.com/openbanking/soap/service" message="q1455:POST_CreateFilePaymentConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_401" xmlns:q1456="http://laegler.com/openbanking/soap/service" message="q1456:POST_CreateFilePaymentConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_403" xmlns:q1457="http://laegler.com/openbanking/soap/service" message="q1457:POST_CreateFilePaymentConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_404" xmlns:q1458="http://laegler.com/openbanking/soap/service" message="q1458:POST_CreateFilePaymentConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_405" xmlns:q1459="http://laegler.com/openbanking/soap/service" message="q1459:POST_CreateFilePaymentConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_406" xmlns:q1460="http://laegler.com/openbanking/soap/service" message="q1460:POST_CreateFilePaymentConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_429" xmlns:q1461="http://laegler.com/openbanking/soap/service" message="q1461:POST_CreateFilePaymentConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsents_500" xmlns:q1462="http://laegler.com/openbanking/soap/service" message="q1462:POST_CreateFilePaymentConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentConsentsConsentId">
      <documentation>Get File Payment Consents</documentation>
      <input xmlns:q1463="http://laegler.com/openbanking/soap/service" message="q1463:GET_GetFilePaymentConsentsConsentId_InputMessage" />
      <output xmlns:q1464="http://laegler.com/openbanking/soap/service" message="q1464:GET_GetFilePaymentConsentsConsentId_OutputMessage">
        <documentation>File Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetFilePaymentConsentsConsentId_400" xmlns:q1465="http://laegler.com/openbanking/soap/service" message="q1465:GET_GetFilePaymentConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_401" xmlns:q1466="http://laegler.com/openbanking/soap/service" message="q1466:GET_GetFilePaymentConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_403" xmlns:q1467="http://laegler.com/openbanking/soap/service" message="q1467:GET_GetFilePaymentConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_404" xmlns:q1468="http://laegler.com/openbanking/soap/service" message="q1468:GET_GetFilePaymentConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_405" xmlns:q1469="http://laegler.com/openbanking/soap/service" message="q1469:GET_GetFilePaymentConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_406" xmlns:q1470="http://laegler.com/openbanking/soap/service" message="q1470:GET_GetFilePaymentConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_429" xmlns:q1471="http://laegler.com/openbanking/soap/service" message="q1471:GET_GetFilePaymentConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_500" xmlns:q1472="http://laegler.com/openbanking/soap/service" message="q1472:GET_GetFilePaymentConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentConsentsConsentIdFile">
      <documentation>Get File Payment Consents</documentation>
      <input xmlns:q1473="http://laegler.com/openbanking/soap/service" message="q1473:GET_GetFilePaymentConsentsConsentIdFile_InputMessage" />
      <output xmlns:q1474="http://laegler.com/openbanking/soap/service" message="q1474:GET_GetFilePaymentConsentsConsentIdFile_OutputMessage">
        <documentation>File Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_400" xmlns:q1475="http://laegler.com/openbanking/soap/service" message="q1475:GET_GetFilePaymentConsentsConsentIdFile_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_401" xmlns:q1476="http://laegler.com/openbanking/soap/service" message="q1476:GET_GetFilePaymentConsentsConsentIdFile_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_403" xmlns:q1477="http://laegler.com/openbanking/soap/service" message="q1477:GET_GetFilePaymentConsentsConsentIdFile_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_404" xmlns:q1478="http://laegler.com/openbanking/soap/service" message="q1478:GET_GetFilePaymentConsentsConsentIdFile_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_405" xmlns:q1479="http://laegler.com/openbanking/soap/service" message="q1479:GET_GetFilePaymentConsentsConsentIdFile_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_406" xmlns:q1480="http://laegler.com/openbanking/soap/service" message="q1480:GET_GetFilePaymentConsentsConsentIdFile_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_429" xmlns:q1481="http://laegler.com/openbanking/soap/service" message="q1481:GET_GetFilePaymentConsentsConsentIdFile_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_500" xmlns:q1482="http://laegler.com/openbanking/soap/service" message="q1482:GET_GetFilePaymentConsentsConsentIdFile_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateFilePaymentConsentsConsentIdFile">
      <documentation>Create File Payment Consents</documentation>
      <input xmlns:q1483="http://laegler.com/openbanking/soap/service" message="q1483:POST_CreateFilePaymentConsentsConsentIdFile_InputMessage" />
      <output xmlns:q1484="http://laegler.com/openbanking/soap/service" message="q1484:POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage">
        <documentation>File Payment Consents Created</documentation>
      </output>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_400" xmlns:q1485="http://laegler.com/openbanking/soap/service" message="q1485:POST_CreateFilePaymentConsentsConsentIdFile_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_401" xmlns:q1486="http://laegler.com/openbanking/soap/service" message="q1486:POST_CreateFilePaymentConsentsConsentIdFile_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_403" xmlns:q1487="http://laegler.com/openbanking/soap/service" message="q1487:POST_CreateFilePaymentConsentsConsentIdFile_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_404" xmlns:q1488="http://laegler.com/openbanking/soap/service" message="q1488:POST_CreateFilePaymentConsentsConsentIdFile_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_405" xmlns:q1489="http://laegler.com/openbanking/soap/service" message="q1489:POST_CreateFilePaymentConsentsConsentIdFile_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_406" xmlns:q1490="http://laegler.com/openbanking/soap/service" message="q1490:POST_CreateFilePaymentConsentsConsentIdFile_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_429" xmlns:q1491="http://laegler.com/openbanking/soap/service" message="q1491:POST_CreateFilePaymentConsentsConsentIdFile_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_500" xmlns:q1492="http://laegler.com/openbanking/soap/service" message="q1492:POST_CreateFilePaymentConsentsConsentIdFile_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateFilePayments">
      <documentation>Create File Payments</documentation>
      <input xmlns:q1493="http://laegler.com/openbanking/soap/service" message="q1493:POST_CreateFilePayments_InputMessage" />
      <output xmlns:q1494="http://laegler.com/openbanking/soap/service" message="q1494:POST_CreateFilePayments_OutputMessage">
        <documentation>File Payments Created</documentation>
      </output>
      <fault name="POST_CreateFilePayments_400" xmlns:q1495="http://laegler.com/openbanking/soap/service" message="q1495:POST_CreateFilePayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_401" xmlns:q1496="http://laegler.com/openbanking/soap/service" message="q1496:POST_CreateFilePayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_403" xmlns:q1497="http://laegler.com/openbanking/soap/service" message="q1497:POST_CreateFilePayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_404" xmlns:q1498="http://laegler.com/openbanking/soap/service" message="q1498:POST_CreateFilePayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_405" xmlns:q1499="http://laegler.com/openbanking/soap/service" message="q1499:POST_CreateFilePayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_406" xmlns:q1500="http://laegler.com/openbanking/soap/service" message="q1500:POST_CreateFilePayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_429" xmlns:q1501="http://laegler.com/openbanking/soap/service" message="q1501:POST_CreateFilePayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateFilePayments_500" xmlns:q1502="http://laegler.com/openbanking/soap/service" message="q1502:POST_CreateFilePayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentsFilePaymentId">
      <documentation>Get File Payments</documentation>
      <input xmlns:q1503="http://laegler.com/openbanking/soap/service" message="q1503:GET_GetFilePaymentsFilePaymentId_InputMessage" />
      <output xmlns:q1504="http://laegler.com/openbanking/soap/service" message="q1504:GET_GetFilePaymentsFilePaymentId_OutputMessage">
        <documentation>File Payments Read</documentation>
      </output>
      <fault name="GET_GetFilePaymentsFilePaymentId_400" xmlns:q1505="http://laegler.com/openbanking/soap/service" message="q1505:GET_GetFilePaymentsFilePaymentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_401" xmlns:q1506="http://laegler.com/openbanking/soap/service" message="q1506:GET_GetFilePaymentsFilePaymentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_403" xmlns:q1507="http://laegler.com/openbanking/soap/service" message="q1507:GET_GetFilePaymentsFilePaymentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_404" xmlns:q1508="http://laegler.com/openbanking/soap/service" message="q1508:GET_GetFilePaymentsFilePaymentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_405" xmlns:q1509="http://laegler.com/openbanking/soap/service" message="q1509:GET_GetFilePaymentsFilePaymentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_406" xmlns:q1510="http://laegler.com/openbanking/soap/service" message="q1510:GET_GetFilePaymentsFilePaymentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_429" xmlns:q1511="http://laegler.com/openbanking/soap/service" message="q1511:GET_GetFilePaymentsFilePaymentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_500" xmlns:q1512="http://laegler.com/openbanking/soap/service" message="q1512:GET_GetFilePaymentsFilePaymentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentsFilePaymentIdReportFile">
      <documentation>Get File Payments</documentation>
      <input xmlns:q1513="http://laegler.com/openbanking/soap/service" message="q1513:GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage" />
      <output xmlns:q1514="http://laegler.com/openbanking/soap/service" message="q1514:GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage">
        <documentation>File Payments Read</documentation>
      </output>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_400" xmlns:q1515="http://laegler.com/openbanking/soap/service" message="q1515:GET_GetFilePaymentsFilePaymentIdReportFile_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_401" xmlns:q1516="http://laegler.com/openbanking/soap/service" message="q1516:GET_GetFilePaymentsFilePaymentIdReportFile_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_403" xmlns:q1517="http://laegler.com/openbanking/soap/service" message="q1517:GET_GetFilePaymentsFilePaymentIdReportFile_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_404" xmlns:q1518="http://laegler.com/openbanking/soap/service" message="q1518:GET_GetFilePaymentsFilePaymentIdReportFile_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_405" xmlns:q1519="http://laegler.com/openbanking/soap/service" message="q1519:GET_GetFilePaymentsFilePaymentIdReportFile_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_406" xmlns:q1520="http://laegler.com/openbanking/soap/service" message="q1520:GET_GetFilePaymentsFilePaymentIdReportFile_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_429" xmlns:q1521="http://laegler.com/openbanking/soap/service" message="q1521:GET_GetFilePaymentsFilePaymentIdReportFile_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_500" xmlns:q1522="http://laegler.com/openbanking/soap/service" message="q1522:GET_GetFilePaymentsFilePaymentIdReportFile_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateInternationalPaymentConsents">
      <documentation>Create International Payment Consents</documentation>
      <input xmlns:q1523="http://laegler.com/openbanking/soap/service" message="q1523:POST_CreateInternationalPaymentConsents_InputMessage" />
      <output xmlns:q1524="http://laegler.com/openbanking/soap/service" message="q1524:POST_CreateInternationalPaymentConsents_OutputMessage">
        <documentation>International Payment Consents Created</documentation>
      </output>
      <fault name="POST_CreateInternationalPaymentConsents_400" xmlns:q1525="http://laegler.com/openbanking/soap/service" message="q1525:POST_CreateInternationalPaymentConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_401" xmlns:q1526="http://laegler.com/openbanking/soap/service" message="q1526:POST_CreateInternationalPaymentConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_403" xmlns:q1527="http://laegler.com/openbanking/soap/service" message="q1527:POST_CreateInternationalPaymentConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_404" xmlns:q1528="http://laegler.com/openbanking/soap/service" message="q1528:POST_CreateInternationalPaymentConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_405" xmlns:q1529="http://laegler.com/openbanking/soap/service" message="q1529:POST_CreateInternationalPaymentConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_406" xmlns:q1530="http://laegler.com/openbanking/soap/service" message="q1530:POST_CreateInternationalPaymentConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_429" xmlns:q1531="http://laegler.com/openbanking/soap/service" message="q1531:POST_CreateInternationalPaymentConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_500" xmlns:q1532="http://laegler.com/openbanking/soap/service" message="q1532:POST_CreateInternationalPaymentConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentConsentsConsentId">
      <documentation>Get International Payment Consents</documentation>
      <input xmlns:q1533="http://laegler.com/openbanking/soap/service" message="q1533:GET_GetInternationalPaymentConsentsConsentId_InputMessage" />
      <output xmlns:q1534="http://laegler.com/openbanking/soap/service" message="q1534:GET_GetInternationalPaymentConsentsConsentId_OutputMessage">
        <documentation>International Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_400" xmlns:q1535="http://laegler.com/openbanking/soap/service" message="q1535:GET_GetInternationalPaymentConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_401" xmlns:q1536="http://laegler.com/openbanking/soap/service" message="q1536:GET_GetInternationalPaymentConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_403" xmlns:q1537="http://laegler.com/openbanking/soap/service" message="q1537:GET_GetInternationalPaymentConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_404" xmlns:q1538="http://laegler.com/openbanking/soap/service" message="q1538:GET_GetInternationalPaymentConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_405" xmlns:q1539="http://laegler.com/openbanking/soap/service" message="q1539:GET_GetInternationalPaymentConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_406" xmlns:q1540="http://laegler.com/openbanking/soap/service" message="q1540:GET_GetInternationalPaymentConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_429" xmlns:q1541="http://laegler.com/openbanking/soap/service" message="q1541:GET_GetInternationalPaymentConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_500" xmlns:q1542="http://laegler.com/openbanking/soap/service" message="q1542:GET_GetInternationalPaymentConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation">
      <documentation>Get International Payment Consents</documentation>
      <input xmlns:q1543="http://laegler.com/openbanking/soap/service" message="q1543:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage" />
      <output xmlns:q1544="http://laegler.com/openbanking/soap/service" message="q1544:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage">
        <documentation>International Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400" xmlns:q1545="http://laegler.com/openbanking/soap/service" message="q1545:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401" xmlns:q1546="http://laegler.com/openbanking/soap/service" message="q1546:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403" xmlns:q1547="http://laegler.com/openbanking/soap/service" message="q1547:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404" xmlns:q1548="http://laegler.com/openbanking/soap/service" message="q1548:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405" xmlns:q1549="http://laegler.com/openbanking/soap/service" message="q1549:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406" xmlns:q1550="http://laegler.com/openbanking/soap/service" message="q1550:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429" xmlns:q1551="http://laegler.com/openbanking/soap/service" message="q1551:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500" xmlns:q1552="http://laegler.com/openbanking/soap/service" message="q1552:GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateInternationalPayments">
      <documentation>Create International Payments</documentation>
      <input xmlns:q1553="http://laegler.com/openbanking/soap/service" message="q1553:POST_CreateInternationalPayments_InputMessage" />
      <output xmlns:q1554="http://laegler.com/openbanking/soap/service" message="q1554:POST_CreateInternationalPayments_OutputMessage">
        <documentation>International Payments Created</documentation>
      </output>
      <fault name="POST_CreateInternationalPayments_400" xmlns:q1555="http://laegler.com/openbanking/soap/service" message="q1555:POST_CreateInternationalPayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_401" xmlns:q1556="http://laegler.com/openbanking/soap/service" message="q1556:POST_CreateInternationalPayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_403" xmlns:q1557="http://laegler.com/openbanking/soap/service" message="q1557:POST_CreateInternationalPayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_404" xmlns:q1558="http://laegler.com/openbanking/soap/service" message="q1558:POST_CreateInternationalPayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_405" xmlns:q1559="http://laegler.com/openbanking/soap/service" message="q1559:POST_CreateInternationalPayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_406" xmlns:q1560="http://laegler.com/openbanking/soap/service" message="q1560:POST_CreateInternationalPayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_429" xmlns:q1561="http://laegler.com/openbanking/soap/service" message="q1561:POST_CreateInternationalPayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateInternationalPayments_500" xmlns:q1562="http://laegler.com/openbanking/soap/service" message="q1562:POST_CreateInternationalPayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentsInternationalPaymentId">
      <documentation>Get International Payments</documentation>
      <input xmlns:q1563="http://laegler.com/openbanking/soap/service" message="q1563:GET_GetInternationalPaymentsInternationalPaymentId_InputMessage" />
      <output xmlns:q1564="http://laegler.com/openbanking/soap/service" message="q1564:GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage">
        <documentation>International Payments Read</documentation>
      </output>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_400" xmlns:q1565="http://laegler.com/openbanking/soap/service" message="q1565:GET_GetInternationalPaymentsInternationalPaymentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_401" xmlns:q1566="http://laegler.com/openbanking/soap/service" message="q1566:GET_GetInternationalPaymentsInternationalPaymentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_403" xmlns:q1567="http://laegler.com/openbanking/soap/service" message="q1567:GET_GetInternationalPaymentsInternationalPaymentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_404" xmlns:q1568="http://laegler.com/openbanking/soap/service" message="q1568:GET_GetInternationalPaymentsInternationalPaymentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_405" xmlns:q1569="http://laegler.com/openbanking/soap/service" message="q1569:GET_GetInternationalPaymentsInternationalPaymentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_406" xmlns:q1570="http://laegler.com/openbanking/soap/service" message="q1570:GET_GetInternationalPaymentsInternationalPaymentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_429" xmlns:q1571="http://laegler.com/openbanking/soap/service" message="q1571:GET_GetInternationalPaymentsInternationalPaymentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_500" xmlns:q1572="http://laegler.com/openbanking/soap/service" message="q1572:GET_GetInternationalPaymentsInternationalPaymentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateInternationalScheduledPaymentConsents">
      <documentation>Create International Scheduled Payment Consents</documentation>
      <input xmlns:q1573="http://laegler.com/openbanking/soap/service" message="q1573:POST_CreateInternationalScheduledPaymentConsents_InputMessage" />
      <output xmlns:q1574="http://laegler.com/openbanking/soap/service" message="q1574:POST_CreateInternationalScheduledPaymentConsents_OutputMessage">
        <documentation>International Scheduled Payment Consents Created</documentation>
      </output>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_400" xmlns:q1575="http://laegler.com/openbanking/soap/service" message="q1575:POST_CreateInternationalScheduledPaymentConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_401" xmlns:q1576="http://laegler.com/openbanking/soap/service" message="q1576:POST_CreateInternationalScheduledPaymentConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_403" xmlns:q1577="http://laegler.com/openbanking/soap/service" message="q1577:POST_CreateInternationalScheduledPaymentConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_404" xmlns:q1578="http://laegler.com/openbanking/soap/service" message="q1578:POST_CreateInternationalScheduledPaymentConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_405" xmlns:q1579="http://laegler.com/openbanking/soap/service" message="q1579:POST_CreateInternationalScheduledPaymentConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_406" xmlns:q1580="http://laegler.com/openbanking/soap/service" message="q1580:POST_CreateInternationalScheduledPaymentConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_429" xmlns:q1581="http://laegler.com/openbanking/soap/service" message="q1581:POST_CreateInternationalScheduledPaymentConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_500" xmlns:q1582="http://laegler.com/openbanking/soap/service" message="q1582:POST_CreateInternationalScheduledPaymentConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentConsentsConsentId">
      <documentation>Get International Scheduled Payment Consents</documentation>
      <input xmlns:q1583="http://laegler.com/openbanking/soap/service" message="q1583:GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage" />
      <output xmlns:q1584="http://laegler.com/openbanking/soap/service" message="q1584:GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage">
        <documentation>International Scheduled Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_400" xmlns:q1585="http://laegler.com/openbanking/soap/service" message="q1585:GET_GetInternationalScheduledPaymentConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_401" xmlns:q1586="http://laegler.com/openbanking/soap/service" message="q1586:GET_GetInternationalScheduledPaymentConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_403" xmlns:q1587="http://laegler.com/openbanking/soap/service" message="q1587:GET_GetInternationalScheduledPaymentConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_404" xmlns:q1588="http://laegler.com/openbanking/soap/service" message="q1588:GET_GetInternationalScheduledPaymentConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_405" xmlns:q1589="http://laegler.com/openbanking/soap/service" message="q1589:GET_GetInternationalScheduledPaymentConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_406" xmlns:q1590="http://laegler.com/openbanking/soap/service" message="q1590:GET_GetInternationalScheduledPaymentConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_429" xmlns:q1591="http://laegler.com/openbanking/soap/service" message="q1591:GET_GetInternationalScheduledPaymentConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_500" xmlns:q1592="http://laegler.com/openbanking/soap/service" message="q1592:GET_GetInternationalScheduledPaymentConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation">
      <documentation>Get International Scheduled Payment Consents</documentation>
      <input xmlns:q1593="http://laegler.com/openbanking/soap/service" message="q1593:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage" />
      <output xmlns:q1594="http://laegler.com/openbanking/soap/service" message="q1594:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage">
        <documentation>International Scheduled Payment Consents Read</documentation>
      </output>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400" xmlns:q1595="http://laegler.com/openbanking/soap/service" message="q1595:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401" xmlns:q1596="http://laegler.com/openbanking/soap/service" message="q1596:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403" xmlns:q1597="http://laegler.com/openbanking/soap/service" message="q1597:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404" xmlns:q1598="http://laegler.com/openbanking/soap/service" message="q1598:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405" xmlns:q1599="http://laegler.com/openbanking/soap/service" message="q1599:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406" xmlns:q1600="http://laegler.com/openbanking/soap/service" message="q1600:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429" xmlns:q1601="http://laegler.com/openbanking/soap/service" message="q1601:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500" xmlns:q1602="http://laegler.com/openbanking/soap/service" message="q1602:GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateInternationalScheduledPayments">
      <documentation>Create International Scheduled Payments</documentation>
      <input xmlns:q1603="http://laegler.com/openbanking/soap/service" message="q1603:POST_CreateInternationalScheduledPayments_InputMessage" />
      <output xmlns:q1604="http://laegler.com/openbanking/soap/service" message="q1604:POST_CreateInternationalScheduledPayments_OutputMessage">
        <documentation>International Scheduled Payments Created</documentation>
      </output>
      <fault name="POST_CreateInternationalScheduledPayments_400" xmlns:q1605="http://laegler.com/openbanking/soap/service" message="q1605:POST_CreateInternationalScheduledPayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_401" xmlns:q1606="http://laegler.com/openbanking/soap/service" message="q1606:POST_CreateInternationalScheduledPayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_403" xmlns:q1607="http://laegler.com/openbanking/soap/service" message="q1607:POST_CreateInternationalScheduledPayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_404" xmlns:q1608="http://laegler.com/openbanking/soap/service" message="q1608:POST_CreateInternationalScheduledPayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_405" xmlns:q1609="http://laegler.com/openbanking/soap/service" message="q1609:POST_CreateInternationalScheduledPayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_406" xmlns:q1610="http://laegler.com/openbanking/soap/service" message="q1610:POST_CreateInternationalScheduledPayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_429" xmlns:q1611="http://laegler.com/openbanking/soap/service" message="q1611:POST_CreateInternationalScheduledPayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_500" xmlns:q1612="http://laegler.com/openbanking/soap/service" message="q1612:POST_CreateInternationalScheduledPayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId">
      <documentation>Get International Scheduled Payments</documentation>
      <input xmlns:q1613="http://laegler.com/openbanking/soap/service" message="q1613:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage" />
      <output xmlns:q1614="http://laegler.com/openbanking/soap/service" message="q1614:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage">
        <documentation>International Scheduled Payments Read</documentation>
      </output>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400" xmlns:q1615="http://laegler.com/openbanking/soap/service" message="q1615:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401" xmlns:q1616="http://laegler.com/openbanking/soap/service" message="q1616:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403" xmlns:q1617="http://laegler.com/openbanking/soap/service" message="q1617:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404" xmlns:q1618="http://laegler.com/openbanking/soap/service" message="q1618:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405" xmlns:q1619="http://laegler.com/openbanking/soap/service" message="q1619:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406" xmlns:q1620="http://laegler.com/openbanking/soap/service" message="q1620:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429" xmlns:q1621="http://laegler.com/openbanking/soap/service" message="q1621:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500" xmlns:q1622="http://laegler.com/openbanking/soap/service" message="q1622:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1623="http://laegler.com/openbanking/soap/service" message="q1623:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage" />
      <output xmlns:q1624="http://laegler.com/openbanking/soap/service" message="q1624:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400" xmlns:q1625="http://laegler.com/openbanking/soap/service" message="q1625:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401" xmlns:q1626="http://laegler.com/openbanking/soap/service" message="q1626:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403" xmlns:q1627="http://laegler.com/openbanking/soap/service" message="q1627:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404" xmlns:q1628="http://laegler.com/openbanking/soap/service" message="q1628:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405" xmlns:q1629="http://laegler.com/openbanking/soap/service" message="q1629:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406" xmlns:q1630="http://laegler.com/openbanking/soap/service" message="q1630:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429" xmlns:q1631="http://laegler.com/openbanking/soap/service" message="q1631:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500" xmlns:q1632="http://laegler.com/openbanking/soap/service" message="q1632:GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1633="http://laegler.com/openbanking/soap/service" message="q1633:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage" />
      <output xmlns:q1634="http://laegler.com/openbanking/soap/service" message="q1634:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400" xmlns:q1635="http://laegler.com/openbanking/soap/service" message="q1635:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401" xmlns:q1636="http://laegler.com/openbanking/soap/service" message="q1636:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403" xmlns:q1637="http://laegler.com/openbanking/soap/service" message="q1637:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404" xmlns:q1638="http://laegler.com/openbanking/soap/service" message="q1638:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405" xmlns:q1639="http://laegler.com/openbanking/soap/service" message="q1639:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406" xmlns:q1640="http://laegler.com/openbanking/soap/service" message="q1640:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429" xmlns:q1641="http://laegler.com/openbanking/soap/service" message="q1641:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500" xmlns:q1642="http://laegler.com/openbanking/soap/service" message="q1642:GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1643="http://laegler.com/openbanking/soap/service" message="q1643:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage" />
      <output xmlns:q1644="http://laegler.com/openbanking/soap/service" message="q1644:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400" xmlns:q1645="http://laegler.com/openbanking/soap/service" message="q1645:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401" xmlns:q1646="http://laegler.com/openbanking/soap/service" message="q1646:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403" xmlns:q1647="http://laegler.com/openbanking/soap/service" message="q1647:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404" xmlns:q1648="http://laegler.com/openbanking/soap/service" message="q1648:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405" xmlns:q1649="http://laegler.com/openbanking/soap/service" message="q1649:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406" xmlns:q1650="http://laegler.com/openbanking/soap/service" message="q1650:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429" xmlns:q1651="http://laegler.com/openbanking/soap/service" message="q1651:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500" xmlns:q1652="http://laegler.com/openbanking/soap/service" message="q1652:GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentsFilePaymentIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1653="http://laegler.com/openbanking/soap/service" message="q1653:GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage" />
      <output xmlns:q1654="http://laegler.com/openbanking/soap/service" message="q1654:GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_400" xmlns:q1655="http://laegler.com/openbanking/soap/service" message="q1655:GET_GetFilePaymentsFilePaymentIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_401" xmlns:q1656="http://laegler.com/openbanking/soap/service" message="q1656:GET_GetFilePaymentsFilePaymentIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_403" xmlns:q1657="http://laegler.com/openbanking/soap/service" message="q1657:GET_GetFilePaymentsFilePaymentIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_404" xmlns:q1658="http://laegler.com/openbanking/soap/service" message="q1658:GET_GetFilePaymentsFilePaymentIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_405" xmlns:q1659="http://laegler.com/openbanking/soap/service" message="q1659:GET_GetFilePaymentsFilePaymentIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_406" xmlns:q1660="http://laegler.com/openbanking/soap/service" message="q1660:GET_GetFilePaymentsFilePaymentIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_429" xmlns:q1661="http://laegler.com/openbanking/soap/service" message="q1661:GET_GetFilePaymentsFilePaymentIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_500" xmlns:q1662="http://laegler.com/openbanking/soap/service" message="q1662:GET_GetFilePaymentsFilePaymentIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1663="http://laegler.com/openbanking/soap/service" message="q1663:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage" />
      <output xmlns:q1664="http://laegler.com/openbanking/soap/service" message="q1664:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400" xmlns:q1665="http://laegler.com/openbanking/soap/service" message="q1665:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401" xmlns:q1666="http://laegler.com/openbanking/soap/service" message="q1666:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403" xmlns:q1667="http://laegler.com/openbanking/soap/service" message="q1667:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404" xmlns:q1668="http://laegler.com/openbanking/soap/service" message="q1668:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405" xmlns:q1669="http://laegler.com/openbanking/soap/service" message="q1669:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406" xmlns:q1670="http://laegler.com/openbanking/soap/service" message="q1670:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429" xmlns:q1671="http://laegler.com/openbanking/soap/service" message="q1671:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500" xmlns:q1672="http://laegler.com/openbanking/soap/service" message="q1672:GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1673="http://laegler.com/openbanking/soap/service" message="q1673:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage" />
      <output xmlns:q1674="http://laegler.com/openbanking/soap/service" message="q1674:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400" xmlns:q1675="http://laegler.com/openbanking/soap/service" message="q1675:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401" xmlns:q1676="http://laegler.com/openbanking/soap/service" message="q1676:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403" xmlns:q1677="http://laegler.com/openbanking/soap/service" message="q1677:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404" xmlns:q1678="http://laegler.com/openbanking/soap/service" message="q1678:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405" xmlns:q1679="http://laegler.com/openbanking/soap/service" message="q1679:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406" xmlns:q1680="http://laegler.com/openbanking/soap/service" message="q1680:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429" xmlns:q1681="http://laegler.com/openbanking/soap/service" message="q1681:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500" xmlns:q1682="http://laegler.com/openbanking/soap/service" message="q1682:GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails">
      <documentation>Get Payment Details</documentation>
      <input xmlns:q1683="http://laegler.com/openbanking/soap/service" message="q1683:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage" />
      <output xmlns:q1684="http://laegler.com/openbanking/soap/service" message="q1684:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage">
        <documentation>Payment Details Read</documentation>
      </output>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400" xmlns:q1685="http://laegler.com/openbanking/soap/service" message="q1685:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401" xmlns:q1686="http://laegler.com/openbanking/soap/service" message="q1686:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403" xmlns:q1687="http://laegler.com/openbanking/soap/service" message="q1687:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404" xmlns:q1688="http://laegler.com/openbanking/soap/service" message="q1688:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405" xmlns:q1689="http://laegler.com/openbanking/soap/service" message="q1689:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406" xmlns:q1690="http://laegler.com/openbanking/soap/service" message="q1690:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429" xmlns:q1691="http://laegler.com/openbanking/soap/service" message="q1691:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500" xmlns:q1692="http://laegler.com/openbanking/soap/service" message="q1692:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateEvents">
      <documentation>Create Events</documentation>
      <input xmlns:q1693="http://laegler.com/openbanking/soap/service" message="q1693:POST_CreateEvents_InputMessage" />
      <output xmlns:q1694="http://laegler.com/openbanking/soap/service" message="q1694:POST_CreateEvents_OutputMessage">
        <documentation>Events Created</documentation>
      </output>
      <fault name="POST_CreateEvents_400" xmlns:q1695="http://laegler.com/openbanking/soap/service" message="q1695:POST_CreateEvents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateEvents_401" xmlns:q1696="http://laegler.com/openbanking/soap/service" message="q1696:POST_CreateEvents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateEvents_403" xmlns:q1697="http://laegler.com/openbanking/soap/service" message="q1697:POST_CreateEvents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateEvents_404" xmlns:q1698="http://laegler.com/openbanking/soap/service" message="q1698:POST_CreateEvents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateEvents_405" xmlns:q1699="http://laegler.com/openbanking/soap/service" message="q1699:POST_CreateEvents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateEvents_406" xmlns:q1700="http://laegler.com/openbanking/soap/service" message="q1700:POST_CreateEvents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateEvents_429" xmlns:q1701="http://laegler.com/openbanking/soap/service" message="q1701:POST_CreateEvents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateEvents_500" xmlns:q1702="http://laegler.com/openbanking/soap/service" message="q1702:POST_CreateEvents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateAccountAccessConsents">
      <documentation>Create Account Access Consents</documentation>
      <input xmlns:q1703="http://laegler.com/openbanking/soap/service" message="q1703:POST_CreateAccountAccessConsents_InputMessage" />
      <output xmlns:q1704="http://laegler.com/openbanking/soap/service" message="q1704:POST_CreateAccountAccessConsents_OutputMessage">
        <documentation>Account Access Consents Created</documentation>
      </output>
      <fault name="POST_CreateAccountAccessConsents_400" xmlns:q1705="http://laegler.com/openbanking/soap/service" message="q1705:POST_CreateAccountAccessConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_401" xmlns:q1706="http://laegler.com/openbanking/soap/service" message="q1706:POST_CreateAccountAccessConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_403" xmlns:q1707="http://laegler.com/openbanking/soap/service" message="q1707:POST_CreateAccountAccessConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_404" xmlns:q1708="http://laegler.com/openbanking/soap/service" message="q1708:POST_CreateAccountAccessConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_405" xmlns:q1709="http://laegler.com/openbanking/soap/service" message="q1709:POST_CreateAccountAccessConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_406" xmlns:q1710="http://laegler.com/openbanking/soap/service" message="q1710:POST_CreateAccountAccessConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_429" xmlns:q1711="http://laegler.com/openbanking/soap/service" message="q1711:POST_CreateAccountAccessConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateAccountAccessConsents_500" xmlns:q1712="http://laegler.com/openbanking/soap/service" message="q1712:POST_CreateAccountAccessConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteAccountAccessConsentsConsentId">
      <documentation>Delete Account Access Consents</documentation>
      <input xmlns:q1713="http://laegler.com/openbanking/soap/service" message="q1713:DELETE_DeleteAccountAccessConsentsConsentId_InputMessage" />
      <output xmlns:q1714="http://laegler.com/openbanking/soap/service" message="q1714:DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage">
        <documentation>Account Access Consents Deleted</documentation>
      </output>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_400" xmlns:q1715="http://laegler.com/openbanking/soap/service" message="q1715:DELETE_DeleteAccountAccessConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_401" xmlns:q1716="http://laegler.com/openbanking/soap/service" message="q1716:DELETE_DeleteAccountAccessConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_403" xmlns:q1717="http://laegler.com/openbanking/soap/service" message="q1717:DELETE_DeleteAccountAccessConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_404" xmlns:q1718="http://laegler.com/openbanking/soap/service" message="q1718:DELETE_DeleteAccountAccessConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_405" xmlns:q1719="http://laegler.com/openbanking/soap/service" message="q1719:DELETE_DeleteAccountAccessConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_406" xmlns:q1720="http://laegler.com/openbanking/soap/service" message="q1720:DELETE_DeleteAccountAccessConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_429" xmlns:q1721="http://laegler.com/openbanking/soap/service" message="q1721:DELETE_DeleteAccountAccessConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_500" xmlns:q1722="http://laegler.com/openbanking/soap/service" message="q1722:DELETE_DeleteAccountAccessConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountAccessConsentsConsentId">
      <documentation>Get Account Access Consents</documentation>
      <input xmlns:q1723="http://laegler.com/openbanking/soap/service" message="q1723:GET_GetAccountAccessConsentsConsentId_InputMessage" />
      <output xmlns:q1724="http://laegler.com/openbanking/soap/service" message="q1724:GET_GetAccountAccessConsentsConsentId_OutputMessage">
        <documentation>Account Access Consents Read</documentation>
      </output>
      <fault name="GET_GetAccountAccessConsentsConsentId_400" xmlns:q1725="http://laegler.com/openbanking/soap/service" message="q1725:GET_GetAccountAccessConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_401" xmlns:q1726="http://laegler.com/openbanking/soap/service" message="q1726:GET_GetAccountAccessConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_403" xmlns:q1727="http://laegler.com/openbanking/soap/service" message="q1727:GET_GetAccountAccessConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_404" xmlns:q1728="http://laegler.com/openbanking/soap/service" message="q1728:GET_GetAccountAccessConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_405" xmlns:q1729="http://laegler.com/openbanking/soap/service" message="q1729:GET_GetAccountAccessConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_406" xmlns:q1730="http://laegler.com/openbanking/soap/service" message="q1730:GET_GetAccountAccessConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_429" xmlns:q1731="http://laegler.com/openbanking/soap/service" message="q1731:GET_GetAccountAccessConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_500" xmlns:q1732="http://laegler.com/openbanking/soap/service" message="q1732:GET_GetAccountAccessConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdParties">
      <documentation>Get Parties</documentation>
      <input xmlns:q1733="http://laegler.com/openbanking/soap/service" message="q1733:GET_GetAccountsAccountIdParties_InputMessage" />
      <output xmlns:q1734="http://laegler.com/openbanking/soap/service" message="q1734:GET_GetAccountsAccountIdParties_OutputMessage">
        <documentation>Parties Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdParties_400" xmlns:q1735="http://laegler.com/openbanking/soap/service" message="q1735:GET_GetAccountsAccountIdParties_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_401" xmlns:q1736="http://laegler.com/openbanking/soap/service" message="q1736:GET_GetAccountsAccountIdParties_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_403" xmlns:q1737="http://laegler.com/openbanking/soap/service" message="q1737:GET_GetAccountsAccountIdParties_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_404" xmlns:q1738="http://laegler.com/openbanking/soap/service" message="q1738:GET_GetAccountsAccountIdParties_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_405" xmlns:q1739="http://laegler.com/openbanking/soap/service" message="q1739:GET_GetAccountsAccountIdParties_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_406" xmlns:q1740="http://laegler.com/openbanking/soap/service" message="q1740:GET_GetAccountsAccountIdParties_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_429" xmlns:q1741="http://laegler.com/openbanking/soap/service" message="q1741:GET_GetAccountsAccountIdParties_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_500" xmlns:q1742="http://laegler.com/openbanking/soap/service" message="q1742:GET_GetAccountsAccountIdParties_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdParty">
      <documentation>Get Parties</documentation>
      <input xmlns:q1743="http://laegler.com/openbanking/soap/service" message="q1743:GET_GetAccountsAccountIdParty_InputMessage" />
      <output xmlns:q1744="http://laegler.com/openbanking/soap/service" message="q1744:GET_GetAccountsAccountIdParty_OutputMessage">
        <documentation>Parties Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdParty_400" xmlns:q1745="http://laegler.com/openbanking/soap/service" message="q1745:GET_GetAccountsAccountIdParty_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_401" xmlns:q1746="http://laegler.com/openbanking/soap/service" message="q1746:GET_GetAccountsAccountIdParty_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_403" xmlns:q1747="http://laegler.com/openbanking/soap/service" message="q1747:GET_GetAccountsAccountIdParty_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_404" xmlns:q1748="http://laegler.com/openbanking/soap/service" message="q1748:GET_GetAccountsAccountIdParty_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_405" xmlns:q1749="http://laegler.com/openbanking/soap/service" message="q1749:GET_GetAccountsAccountIdParty_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_406" xmlns:q1750="http://laegler.com/openbanking/soap/service" message="q1750:GET_GetAccountsAccountIdParty_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_429" xmlns:q1751="http://laegler.com/openbanking/soap/service" message="q1751:GET_GetAccountsAccountIdParty_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_500" xmlns:q1752="http://laegler.com/openbanking/soap/service" message="q1752:GET_GetAccountsAccountIdParty_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetParty">
      <documentation>Get Parties</documentation>
      <input xmlns:q1753="http://laegler.com/openbanking/soap/service" message="q1753:GET_GetParty_InputMessage" />
      <output xmlns:q1754="http://laegler.com/openbanking/soap/service" message="q1754:GET_GetParty_OutputMessage">
        <documentation>Parties Read</documentation>
      </output>
      <fault name="GET_GetParty_400" xmlns:q1755="http://laegler.com/openbanking/soap/service" message="q1755:GET_GetParty_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetParty_401" xmlns:q1756="http://laegler.com/openbanking/soap/service" message="q1756:GET_GetParty_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetParty_403" xmlns:q1757="http://laegler.com/openbanking/soap/service" message="q1757:GET_GetParty_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetParty_404" xmlns:q1758="http://laegler.com/openbanking/soap/service" message="q1758:GET_GetParty_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetParty_405" xmlns:q1759="http://laegler.com/openbanking/soap/service" message="q1759:GET_GetParty_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetParty_406" xmlns:q1760="http://laegler.com/openbanking/soap/service" message="q1760:GET_GetParty_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetParty_429" xmlns:q1761="http://laegler.com/openbanking/soap/service" message="q1761:GET_GetParty_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetParty_500" xmlns:q1762="http://laegler.com/openbanking/soap/service" message="q1762:GET_GetParty_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdScheduledPayments">
      <documentation>Get Scheduled Payments</documentation>
      <input xmlns:q1763="http://laegler.com/openbanking/soap/service" message="q1763:GET_GetAccountsAccountIdScheduledPayments_InputMessage" />
      <output xmlns:q1764="http://laegler.com/openbanking/soap/service" message="q1764:GET_GetAccountsAccountIdScheduledPayments_OutputMessage">
        <documentation>Scheduled Payments Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_400" xmlns:q1765="http://laegler.com/openbanking/soap/service" message="q1765:GET_GetAccountsAccountIdScheduledPayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_401" xmlns:q1766="http://laegler.com/openbanking/soap/service" message="q1766:GET_GetAccountsAccountIdScheduledPayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_403" xmlns:q1767="http://laegler.com/openbanking/soap/service" message="q1767:GET_GetAccountsAccountIdScheduledPayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_404" xmlns:q1768="http://laegler.com/openbanking/soap/service" message="q1768:GET_GetAccountsAccountIdScheduledPayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_405" xmlns:q1769="http://laegler.com/openbanking/soap/service" message="q1769:GET_GetAccountsAccountIdScheduledPayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_406" xmlns:q1770="http://laegler.com/openbanking/soap/service" message="q1770:GET_GetAccountsAccountIdScheduledPayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_429" xmlns:q1771="http://laegler.com/openbanking/soap/service" message="q1771:GET_GetAccountsAccountIdScheduledPayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_500" xmlns:q1772="http://laegler.com/openbanking/soap/service" message="q1772:GET_GetAccountsAccountIdScheduledPayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetScheduledPayments">
      <documentation>Get Scheduled Payments</documentation>
      <input xmlns:q1773="http://laegler.com/openbanking/soap/service" message="q1773:GET_GetScheduledPayments_InputMessage" />
      <output xmlns:q1774="http://laegler.com/openbanking/soap/service" message="q1774:GET_GetScheduledPayments_OutputMessage">
        <documentation>Scheduled Payments Read</documentation>
      </output>
      <fault name="GET_GetScheduledPayments_400" xmlns:q1775="http://laegler.com/openbanking/soap/service" message="q1775:GET_GetScheduledPayments_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_401" xmlns:q1776="http://laegler.com/openbanking/soap/service" message="q1776:GET_GetScheduledPayments_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_403" xmlns:q1777="http://laegler.com/openbanking/soap/service" message="q1777:GET_GetScheduledPayments_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_404" xmlns:q1778="http://laegler.com/openbanking/soap/service" message="q1778:GET_GetScheduledPayments_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_405" xmlns:q1779="http://laegler.com/openbanking/soap/service" message="q1779:GET_GetScheduledPayments_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_406" xmlns:q1780="http://laegler.com/openbanking/soap/service" message="q1780:GET_GetScheduledPayments_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_429" xmlns:q1781="http://laegler.com/openbanking/soap/service" message="q1781:GET_GetScheduledPayments_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetScheduledPayments_500" xmlns:q1782="http://laegler.com/openbanking/soap/service" message="q1782:GET_GetScheduledPayments_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdProduct">
      <documentation>Get Products</documentation>
      <input xmlns:q1783="http://laegler.com/openbanking/soap/service" message="q1783:GET_GetAccountsAccountIdProduct_InputMessage" />
      <output xmlns:q1784="http://laegler.com/openbanking/soap/service" message="q1784:GET_GetAccountsAccountIdProduct_OutputMessage">
        <documentation>Products Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdProduct_400" xmlns:q1785="http://laegler.com/openbanking/soap/service" message="q1785:GET_GetAccountsAccountIdProduct_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_401" xmlns:q1786="http://laegler.com/openbanking/soap/service" message="q1786:GET_GetAccountsAccountIdProduct_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_403" xmlns:q1787="http://laegler.com/openbanking/soap/service" message="q1787:GET_GetAccountsAccountIdProduct_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_404" xmlns:q1788="http://laegler.com/openbanking/soap/service" message="q1788:GET_GetAccountsAccountIdProduct_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_405" xmlns:q1789="http://laegler.com/openbanking/soap/service" message="q1789:GET_GetAccountsAccountIdProduct_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_406" xmlns:q1790="http://laegler.com/openbanking/soap/service" message="q1790:GET_GetAccountsAccountIdProduct_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_429" xmlns:q1791="http://laegler.com/openbanking/soap/service" message="q1791:GET_GetAccountsAccountIdProduct_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_500" xmlns:q1792="http://laegler.com/openbanking/soap/service" message="q1792:GET_GetAccountsAccountIdProduct_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetProducts">
      <documentation>Get Products</documentation>
      <input xmlns:q1793="http://laegler.com/openbanking/soap/service" message="q1793:GET_GetProducts_InputMessage" />
      <output xmlns:q1794="http://laegler.com/openbanking/soap/service" message="q1794:GET_GetProducts_OutputMessage">
        <documentation>Products Read</documentation>
      </output>
      <fault name="GET_GetProducts_400" xmlns:q1795="http://laegler.com/openbanking/soap/service" message="q1795:GET_GetProducts_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetProducts_401" xmlns:q1796="http://laegler.com/openbanking/soap/service" message="q1796:GET_GetProducts_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetProducts_403" xmlns:q1797="http://laegler.com/openbanking/soap/service" message="q1797:GET_GetProducts_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetProducts_404" xmlns:q1798="http://laegler.com/openbanking/soap/service" message="q1798:GET_GetProducts_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetProducts_405" xmlns:q1799="http://laegler.com/openbanking/soap/service" message="q1799:GET_GetProducts_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetProducts_406" xmlns:q1800="http://laegler.com/openbanking/soap/service" message="q1800:GET_GetProducts_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetProducts_429" xmlns:q1801="http://laegler.com/openbanking/soap/service" message="q1801:GET_GetProducts_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetProducts_500" xmlns:q1802="http://laegler.com/openbanking/soap/service" message="q1802:GET_GetProducts_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccounts">
      <documentation>Get Accounts</documentation>
      <input xmlns:q1803="http://laegler.com/openbanking/soap/service" message="q1803:GET_GetAccounts_InputMessage" />
      <output xmlns:q1804="http://laegler.com/openbanking/soap/service" message="q1804:GET_GetAccounts_OutputMessage">
        <documentation>Accounts Read</documentation>
      </output>
      <fault name="GET_GetAccounts_400" xmlns:q1805="http://laegler.com/openbanking/soap/service" message="q1805:GET_GetAccounts_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccounts_401" xmlns:q1806="http://laegler.com/openbanking/soap/service" message="q1806:GET_GetAccounts_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccounts_403" xmlns:q1807="http://laegler.com/openbanking/soap/service" message="q1807:GET_GetAccounts_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccounts_404" xmlns:q1808="http://laegler.com/openbanking/soap/service" message="q1808:GET_GetAccounts_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccounts_405" xmlns:q1809="http://laegler.com/openbanking/soap/service" message="q1809:GET_GetAccounts_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccounts_406" xmlns:q1810="http://laegler.com/openbanking/soap/service" message="q1810:GET_GetAccounts_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccounts_429" xmlns:q1811="http://laegler.com/openbanking/soap/service" message="q1811:GET_GetAccounts_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccounts_500" xmlns:q1812="http://laegler.com/openbanking/soap/service" message="q1812:GET_GetAccounts_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountId">
      <documentation>Get Accounts</documentation>
      <input xmlns:q1813="http://laegler.com/openbanking/soap/service" message="q1813:GET_GetAccountsAccountId_InputMessage" />
      <output xmlns:q1814="http://laegler.com/openbanking/soap/service" message="q1814:GET_GetAccountsAccountId_OutputMessage">
        <documentation>Accounts Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountId_400" xmlns:q1815="http://laegler.com/openbanking/soap/service" message="q1815:GET_GetAccountsAccountId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_401" xmlns:q1816="http://laegler.com/openbanking/soap/service" message="q1816:GET_GetAccountsAccountId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_403" xmlns:q1817="http://laegler.com/openbanking/soap/service" message="q1817:GET_GetAccountsAccountId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_404" xmlns:q1818="http://laegler.com/openbanking/soap/service" message="q1818:GET_GetAccountsAccountId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_405" xmlns:q1819="http://laegler.com/openbanking/soap/service" message="q1819:GET_GetAccountsAccountId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_406" xmlns:q1820="http://laegler.com/openbanking/soap/service" message="q1820:GET_GetAccountsAccountId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_429" xmlns:q1821="http://laegler.com/openbanking/soap/service" message="q1821:GET_GetAccountsAccountId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountId_500" xmlns:q1822="http://laegler.com/openbanking/soap/service" message="q1822:GET_GetAccountsAccountId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdBalances">
      <documentation>Get Balances</documentation>
      <input xmlns:q1823="http://laegler.com/openbanking/soap/service" message="q1823:GET_GetAccountsAccountIdBalances_InputMessage" />
      <output xmlns:q1824="http://laegler.com/openbanking/soap/service" message="q1824:GET_GetAccountsAccountIdBalances_OutputMessage">
        <documentation>Balances Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdBalances_400" xmlns:q1825="http://laegler.com/openbanking/soap/service" message="q1825:GET_GetAccountsAccountIdBalances_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_401" xmlns:q1826="http://laegler.com/openbanking/soap/service" message="q1826:GET_GetAccountsAccountIdBalances_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_403" xmlns:q1827="http://laegler.com/openbanking/soap/service" message="q1827:GET_GetAccountsAccountIdBalances_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_404" xmlns:q1828="http://laegler.com/openbanking/soap/service" message="q1828:GET_GetAccountsAccountIdBalances_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_405" xmlns:q1829="http://laegler.com/openbanking/soap/service" message="q1829:GET_GetAccountsAccountIdBalances_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_406" xmlns:q1830="http://laegler.com/openbanking/soap/service" message="q1830:GET_GetAccountsAccountIdBalances_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_429" xmlns:q1831="http://laegler.com/openbanking/soap/service" message="q1831:GET_GetAccountsAccountIdBalances_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_500" xmlns:q1832="http://laegler.com/openbanking/soap/service" message="q1832:GET_GetAccountsAccountIdBalances_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetBalances">
      <documentation>Get Balances</documentation>
      <input xmlns:q1833="http://laegler.com/openbanking/soap/service" message="q1833:GET_GetBalances_InputMessage" />
      <output xmlns:q1834="http://laegler.com/openbanking/soap/service" message="q1834:GET_GetBalances_OutputMessage">
        <documentation>Balances Read</documentation>
      </output>
      <fault name="GET_GetBalances_400" xmlns:q1835="http://laegler.com/openbanking/soap/service" message="q1835:GET_GetBalances_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetBalances_401" xmlns:q1836="http://laegler.com/openbanking/soap/service" message="q1836:GET_GetBalances_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetBalances_403" xmlns:q1837="http://laegler.com/openbanking/soap/service" message="q1837:GET_GetBalances_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetBalances_404" xmlns:q1838="http://laegler.com/openbanking/soap/service" message="q1838:GET_GetBalances_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetBalances_405" xmlns:q1839="http://laegler.com/openbanking/soap/service" message="q1839:GET_GetBalances_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetBalances_406" xmlns:q1840="http://laegler.com/openbanking/soap/service" message="q1840:GET_GetBalances_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetBalances_429" xmlns:q1841="http://laegler.com/openbanking/soap/service" message="q1841:GET_GetBalances_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetBalances_500" xmlns:q1842="http://laegler.com/openbanking/soap/service" message="q1842:GET_GetBalances_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdBeneficiaries">
      <documentation>Get Beneficiaries</documentation>
      <input xmlns:q1843="http://laegler.com/openbanking/soap/service" message="q1843:GET_GetAccountsAccountIdBeneficiaries_InputMessage" />
      <output xmlns:q1844="http://laegler.com/openbanking/soap/service" message="q1844:GET_GetAccountsAccountIdBeneficiaries_OutputMessage">
        <documentation>Beneficiaries Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_400" xmlns:q1845="http://laegler.com/openbanking/soap/service" message="q1845:GET_GetAccountsAccountIdBeneficiaries_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_401" xmlns:q1846="http://laegler.com/openbanking/soap/service" message="q1846:GET_GetAccountsAccountIdBeneficiaries_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_403" xmlns:q1847="http://laegler.com/openbanking/soap/service" message="q1847:GET_GetAccountsAccountIdBeneficiaries_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_404" xmlns:q1848="http://laegler.com/openbanking/soap/service" message="q1848:GET_GetAccountsAccountIdBeneficiaries_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_405" xmlns:q1849="http://laegler.com/openbanking/soap/service" message="q1849:GET_GetAccountsAccountIdBeneficiaries_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_406" xmlns:q1850="http://laegler.com/openbanking/soap/service" message="q1850:GET_GetAccountsAccountIdBeneficiaries_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_429" xmlns:q1851="http://laegler.com/openbanking/soap/service" message="q1851:GET_GetAccountsAccountIdBeneficiaries_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_500" xmlns:q1852="http://laegler.com/openbanking/soap/service" message="q1852:GET_GetAccountsAccountIdBeneficiaries_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetBeneficiaries">
      <documentation>Get Beneficiaries</documentation>
      <input xmlns:q1853="http://laegler.com/openbanking/soap/service" message="q1853:GET_GetBeneficiaries_InputMessage" />
      <output xmlns:q1854="http://laegler.com/openbanking/soap/service" message="q1854:GET_GetBeneficiaries_OutputMessage">
        <documentation>Beneficiaries Read</documentation>
      </output>
      <fault name="GET_GetBeneficiaries_400" xmlns:q1855="http://laegler.com/openbanking/soap/service" message="q1855:GET_GetBeneficiaries_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_401" xmlns:q1856="http://laegler.com/openbanking/soap/service" message="q1856:GET_GetBeneficiaries_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_403" xmlns:q1857="http://laegler.com/openbanking/soap/service" message="q1857:GET_GetBeneficiaries_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_404" xmlns:q1858="http://laegler.com/openbanking/soap/service" message="q1858:GET_GetBeneficiaries_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_405" xmlns:q1859="http://laegler.com/openbanking/soap/service" message="q1859:GET_GetBeneficiaries_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_406" xmlns:q1860="http://laegler.com/openbanking/soap/service" message="q1860:GET_GetBeneficiaries_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_429" xmlns:q1861="http://laegler.com/openbanking/soap/service" message="q1861:GET_GetBeneficiaries_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetBeneficiaries_500" xmlns:q1862="http://laegler.com/openbanking/soap/service" message="q1862:GET_GetBeneficiaries_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatements">
      <documentation>Get Statements</documentation>
      <input xmlns:q1863="http://laegler.com/openbanking/soap/service" message="q1863:GET_GetAccountsAccountIdStatements_InputMessage" />
      <output xmlns:q1864="http://laegler.com/openbanking/soap/service" message="q1864:GET_GetAccountsAccountIdStatements_OutputMessage">
        <documentation>Statements Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdStatements_400" xmlns:q1865="http://laegler.com/openbanking/soap/service" message="q1865:GET_GetAccountsAccountIdStatements_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_401" xmlns:q1866="http://laegler.com/openbanking/soap/service" message="q1866:GET_GetAccountsAccountIdStatements_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_403" xmlns:q1867="http://laegler.com/openbanking/soap/service" message="q1867:GET_GetAccountsAccountIdStatements_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_404" xmlns:q1868="http://laegler.com/openbanking/soap/service" message="q1868:GET_GetAccountsAccountIdStatements_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_405" xmlns:q1869="http://laegler.com/openbanking/soap/service" message="q1869:GET_GetAccountsAccountIdStatements_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_406" xmlns:q1870="http://laegler.com/openbanking/soap/service" message="q1870:GET_GetAccountsAccountIdStatements_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_429" xmlns:q1871="http://laegler.com/openbanking/soap/service" message="q1871:GET_GetAccountsAccountIdStatements_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_500" xmlns:q1872="http://laegler.com/openbanking/soap/service" message="q1872:GET_GetAccountsAccountIdStatements_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatementsStatementId">
      <documentation>Get Statements</documentation>
      <input xmlns:q1873="http://laegler.com/openbanking/soap/service" message="q1873:GET_GetAccountsAccountIdStatementsStatementId_InputMessage" />
      <output xmlns:q1874="http://laegler.com/openbanking/soap/service" message="q1874:GET_GetAccountsAccountIdStatementsStatementId_OutputMessage">
        <documentation>Statements Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_400" xmlns:q1875="http://laegler.com/openbanking/soap/service" message="q1875:GET_GetAccountsAccountIdStatementsStatementId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_401" xmlns:q1876="http://laegler.com/openbanking/soap/service" message="q1876:GET_GetAccountsAccountIdStatementsStatementId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_403" xmlns:q1877="http://laegler.com/openbanking/soap/service" message="q1877:GET_GetAccountsAccountIdStatementsStatementId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_404" xmlns:q1878="http://laegler.com/openbanking/soap/service" message="q1878:GET_GetAccountsAccountIdStatementsStatementId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_405" xmlns:q1879="http://laegler.com/openbanking/soap/service" message="q1879:GET_GetAccountsAccountIdStatementsStatementId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_406" xmlns:q1880="http://laegler.com/openbanking/soap/service" message="q1880:GET_GetAccountsAccountIdStatementsStatementId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_429" xmlns:q1881="http://laegler.com/openbanking/soap/service" message="q1881:GET_GetAccountsAccountIdStatementsStatementId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_500" xmlns:q1882="http://laegler.com/openbanking/soap/service" message="q1882:GET_GetAccountsAccountIdStatementsStatementId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatementsStatementIdFile">
      <documentation>Get Statements</documentation>
      <input xmlns:q1883="http://laegler.com/openbanking/soap/service" message="q1883:GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage" />
      <output xmlns:q1884="http://laegler.com/openbanking/soap/service" message="q1884:GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage">
        <documentation>Statements Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_400" xmlns:q1885="http://laegler.com/openbanking/soap/service" message="q1885:GET_GetAccountsAccountIdStatementsStatementIdFile_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_401" xmlns:q1886="http://laegler.com/openbanking/soap/service" message="q1886:GET_GetAccountsAccountIdStatementsStatementIdFile_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_403" xmlns:q1887="http://laegler.com/openbanking/soap/service" message="q1887:GET_GetAccountsAccountIdStatementsStatementIdFile_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_404" xmlns:q1888="http://laegler.com/openbanking/soap/service" message="q1888:GET_GetAccountsAccountIdStatementsStatementIdFile_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_405" xmlns:q1889="http://laegler.com/openbanking/soap/service" message="q1889:GET_GetAccountsAccountIdStatementsStatementIdFile_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_406" xmlns:q1890="http://laegler.com/openbanking/soap/service" message="q1890:GET_GetAccountsAccountIdStatementsStatementIdFile_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_429" xmlns:q1891="http://laegler.com/openbanking/soap/service" message="q1891:GET_GetAccountsAccountIdStatementsStatementIdFile_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_500" xmlns:q1892="http://laegler.com/openbanking/soap/service" message="q1892:GET_GetAccountsAccountIdStatementsStatementIdFile_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetStatements">
      <documentation>Get Statements</documentation>
      <input xmlns:q1893="http://laegler.com/openbanking/soap/service" message="q1893:GET_GetStatements_InputMessage" />
      <output xmlns:q1894="http://laegler.com/openbanking/soap/service" message="q1894:GET_GetStatements_OutputMessage">
        <documentation>Statements Read</documentation>
      </output>
      <fault name="GET_GetStatements_400" xmlns:q1895="http://laegler.com/openbanking/soap/service" message="q1895:GET_GetStatements_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetStatements_401" xmlns:q1896="http://laegler.com/openbanking/soap/service" message="q1896:GET_GetStatements_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetStatements_403" xmlns:q1897="http://laegler.com/openbanking/soap/service" message="q1897:GET_GetStatements_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetStatements_404" xmlns:q1898="http://laegler.com/openbanking/soap/service" message="q1898:GET_GetStatements_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetStatements_405" xmlns:q1899="http://laegler.com/openbanking/soap/service" message="q1899:GET_GetStatements_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetStatements_406" xmlns:q1900="http://laegler.com/openbanking/soap/service" message="q1900:GET_GetStatements_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetStatements_429" xmlns:q1901="http://laegler.com/openbanking/soap/service" message="q1901:GET_GetStatements_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetStatements_500" xmlns:q1902="http://laegler.com/openbanking/soap/service" message="q1902:GET_GetStatements_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStandingOrders">
      <documentation>Get Standing Orders</documentation>
      <input xmlns:q1903="http://laegler.com/openbanking/soap/service" message="q1903:GET_GetAccountsAccountIdStandingOrders_InputMessage" />
      <output xmlns:q1904="http://laegler.com/openbanking/soap/service" message="q1904:GET_GetAccountsAccountIdStandingOrders_OutputMessage">
        <documentation>Standing Orders Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdStandingOrders_400" xmlns:q1905="http://laegler.com/openbanking/soap/service" message="q1905:GET_GetAccountsAccountIdStandingOrders_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_401" xmlns:q1906="http://laegler.com/openbanking/soap/service" message="q1906:GET_GetAccountsAccountIdStandingOrders_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_403" xmlns:q1907="http://laegler.com/openbanking/soap/service" message="q1907:GET_GetAccountsAccountIdStandingOrders_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_404" xmlns:q1908="http://laegler.com/openbanking/soap/service" message="q1908:GET_GetAccountsAccountIdStandingOrders_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_405" xmlns:q1909="http://laegler.com/openbanking/soap/service" message="q1909:GET_GetAccountsAccountIdStandingOrders_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_406" xmlns:q1910="http://laegler.com/openbanking/soap/service" message="q1910:GET_GetAccountsAccountIdStandingOrders_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_429" xmlns:q1911="http://laegler.com/openbanking/soap/service" message="q1911:GET_GetAccountsAccountIdStandingOrders_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_500" xmlns:q1912="http://laegler.com/openbanking/soap/service" message="q1912:GET_GetAccountsAccountIdStandingOrders_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetStandingOrders">
      <documentation>Get Standing Orders</documentation>
      <input xmlns:q1913="http://laegler.com/openbanking/soap/service" message="q1913:GET_GetStandingOrders_InputMessage" />
      <output xmlns:q1914="http://laegler.com/openbanking/soap/service" message="q1914:GET_GetStandingOrders_OutputMessage">
        <documentation>Standing Orders Read</documentation>
      </output>
      <fault name="GET_GetStandingOrders_400" xmlns:q1915="http://laegler.com/openbanking/soap/service" message="q1915:GET_GetStandingOrders_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_401" xmlns:q1916="http://laegler.com/openbanking/soap/service" message="q1916:GET_GetStandingOrders_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_403" xmlns:q1917="http://laegler.com/openbanking/soap/service" message="q1917:GET_GetStandingOrders_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_404" xmlns:q1918="http://laegler.com/openbanking/soap/service" message="q1918:GET_GetStandingOrders_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_405" xmlns:q1919="http://laegler.com/openbanking/soap/service" message="q1919:GET_GetStandingOrders_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_406" xmlns:q1920="http://laegler.com/openbanking/soap/service" message="q1920:GET_GetStandingOrders_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_429" xmlns:q1921="http://laegler.com/openbanking/soap/service" message="q1921:GET_GetStandingOrders_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetStandingOrders_500" xmlns:q1922="http://laegler.com/openbanking/soap/service" message="q1922:GET_GetStandingOrders_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatementsStatementIdTransactions">
      <documentation>Get Transactions</documentation>
      <input xmlns:q1923="http://laegler.com/openbanking/soap/service" message="q1923:GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage" />
      <output xmlns:q1924="http://laegler.com/openbanking/soap/service" message="q1924:GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage">
        <documentation>Transactions Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_400" xmlns:q1925="http://laegler.com/openbanking/soap/service" message="q1925:GET_GetAccountsAccountIdStatementsStatementIdTransactions_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_401" xmlns:q1926="http://laegler.com/openbanking/soap/service" message="q1926:GET_GetAccountsAccountIdStatementsStatementIdTransactions_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_403" xmlns:q1927="http://laegler.com/openbanking/soap/service" message="q1927:GET_GetAccountsAccountIdStatementsStatementIdTransactions_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_404" xmlns:q1928="http://laegler.com/openbanking/soap/service" message="q1928:GET_GetAccountsAccountIdStatementsStatementIdTransactions_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_405" xmlns:q1929="http://laegler.com/openbanking/soap/service" message="q1929:GET_GetAccountsAccountIdStatementsStatementIdTransactions_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_406" xmlns:q1930="http://laegler.com/openbanking/soap/service" message="q1930:GET_GetAccountsAccountIdStatementsStatementIdTransactions_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_429" xmlns:q1931="http://laegler.com/openbanking/soap/service" message="q1931:GET_GetAccountsAccountIdStatementsStatementIdTransactions_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_500" xmlns:q1932="http://laegler.com/openbanking/soap/service" message="q1932:GET_GetAccountsAccountIdStatementsStatementIdTransactions_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdTransactions">
      <documentation>Get Transactions</documentation>
      <input xmlns:q1933="http://laegler.com/openbanking/soap/service" message="q1933:GET_GetAccountsAccountIdTransactions_InputMessage" />
      <output xmlns:q1934="http://laegler.com/openbanking/soap/service" message="q1934:GET_GetAccountsAccountIdTransactions_OutputMessage">
        <documentation>Transactions Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdTransactions_400" xmlns:q1935="http://laegler.com/openbanking/soap/service" message="q1935:GET_GetAccountsAccountIdTransactions_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_401" xmlns:q1936="http://laegler.com/openbanking/soap/service" message="q1936:GET_GetAccountsAccountIdTransactions_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_403" xmlns:q1937="http://laegler.com/openbanking/soap/service" message="q1937:GET_GetAccountsAccountIdTransactions_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_404" xmlns:q1938="http://laegler.com/openbanking/soap/service" message="q1938:GET_GetAccountsAccountIdTransactions_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_405" xmlns:q1939="http://laegler.com/openbanking/soap/service" message="q1939:GET_GetAccountsAccountIdTransactions_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_406" xmlns:q1940="http://laegler.com/openbanking/soap/service" message="q1940:GET_GetAccountsAccountIdTransactions_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_429" xmlns:q1941="http://laegler.com/openbanking/soap/service" message="q1941:GET_GetAccountsAccountIdTransactions_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_500" xmlns:q1942="http://laegler.com/openbanking/soap/service" message="q1942:GET_GetAccountsAccountIdTransactions_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetTransactions">
      <documentation>Get Transactions</documentation>
      <input xmlns:q1943="http://laegler.com/openbanking/soap/service" message="q1943:GET_GetTransactions_InputMessage" />
      <output xmlns:q1944="http://laegler.com/openbanking/soap/service" message="q1944:GET_GetTransactions_OutputMessage">
        <documentation>Transactions Read</documentation>
      </output>
      <fault name="GET_GetTransactions_400" xmlns:q1945="http://laegler.com/openbanking/soap/service" message="q1945:GET_GetTransactions_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetTransactions_401" xmlns:q1946="http://laegler.com/openbanking/soap/service" message="q1946:GET_GetTransactions_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetTransactions_403" xmlns:q1947="http://laegler.com/openbanking/soap/service" message="q1947:GET_GetTransactions_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetTransactions_404" xmlns:q1948="http://laegler.com/openbanking/soap/service" message="q1948:GET_GetTransactions_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetTransactions_405" xmlns:q1949="http://laegler.com/openbanking/soap/service" message="q1949:GET_GetTransactions_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetTransactions_406" xmlns:q1950="http://laegler.com/openbanking/soap/service" message="q1950:GET_GetTransactions_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetTransactions_429" xmlns:q1951="http://laegler.com/openbanking/soap/service" message="q1951:GET_GetTransactions_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetTransactions_500" xmlns:q1952="http://laegler.com/openbanking/soap/service" message="q1952:GET_GetTransactions_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdOffers">
      <documentation>Get Offers</documentation>
      <input xmlns:q1953="http://laegler.com/openbanking/soap/service" message="q1953:GET_GetAccountsAccountIdOffers_InputMessage" />
      <output xmlns:q1954="http://laegler.com/openbanking/soap/service" message="q1954:GET_GetAccountsAccountIdOffers_OutputMessage">
        <documentation>Offers Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdOffers_400" xmlns:q1955="http://laegler.com/openbanking/soap/service" message="q1955:GET_GetAccountsAccountIdOffers_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_401" xmlns:q1956="http://laegler.com/openbanking/soap/service" message="q1956:GET_GetAccountsAccountIdOffers_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_403" xmlns:q1957="http://laegler.com/openbanking/soap/service" message="q1957:GET_GetAccountsAccountIdOffers_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_404" xmlns:q1958="http://laegler.com/openbanking/soap/service" message="q1958:GET_GetAccountsAccountIdOffers_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_405" xmlns:q1959="http://laegler.com/openbanking/soap/service" message="q1959:GET_GetAccountsAccountIdOffers_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_406" xmlns:q1960="http://laegler.com/openbanking/soap/service" message="q1960:GET_GetAccountsAccountIdOffers_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_429" xmlns:q1961="http://laegler.com/openbanking/soap/service" message="q1961:GET_GetAccountsAccountIdOffers_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_500" xmlns:q1962="http://laegler.com/openbanking/soap/service" message="q1962:GET_GetAccountsAccountIdOffers_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetOffers">
      <documentation>Get Offers</documentation>
      <input xmlns:q1963="http://laegler.com/openbanking/soap/service" message="q1963:GET_GetOffers_InputMessage" />
      <output xmlns:q1964="http://laegler.com/openbanking/soap/service" message="q1964:GET_GetOffers_OutputMessage">
        <documentation>Offers Read</documentation>
      </output>
      <fault name="GET_GetOffers_400" xmlns:q1965="http://laegler.com/openbanking/soap/service" message="q1965:GET_GetOffers_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetOffers_401" xmlns:q1966="http://laegler.com/openbanking/soap/service" message="q1966:GET_GetOffers_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetOffers_403" xmlns:q1967="http://laegler.com/openbanking/soap/service" message="q1967:GET_GetOffers_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetOffers_404" xmlns:q1968="http://laegler.com/openbanking/soap/service" message="q1968:GET_GetOffers_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetOffers_405" xmlns:q1969="http://laegler.com/openbanking/soap/service" message="q1969:GET_GetOffers_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetOffers_406" xmlns:q1970="http://laegler.com/openbanking/soap/service" message="q1970:GET_GetOffers_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetOffers_429" xmlns:q1971="http://laegler.com/openbanking/soap/service" message="q1971:GET_GetOffers_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetOffers_500" xmlns:q1972="http://laegler.com/openbanking/soap/service" message="q1972:GET_GetOffers_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdDirectDebits">
      <documentation>Get Direct Debits</documentation>
      <input xmlns:q1973="http://laegler.com/openbanking/soap/service" message="q1973:GET_GetAccountsAccountIdDirectDebits_InputMessage" />
      <output xmlns:q1974="http://laegler.com/openbanking/soap/service" message="q1974:GET_GetAccountsAccountIdDirectDebits_OutputMessage">
        <documentation>Direct Debits Read</documentation>
      </output>
      <fault name="GET_GetAccountsAccountIdDirectDebits_400" xmlns:q1975="http://laegler.com/openbanking/soap/service" message="q1975:GET_GetAccountsAccountIdDirectDebits_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_401" xmlns:q1976="http://laegler.com/openbanking/soap/service" message="q1976:GET_GetAccountsAccountIdDirectDebits_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_403" xmlns:q1977="http://laegler.com/openbanking/soap/service" message="q1977:GET_GetAccountsAccountIdDirectDebits_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_404" xmlns:q1978="http://laegler.com/openbanking/soap/service" message="q1978:GET_GetAccountsAccountIdDirectDebits_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_405" xmlns:q1979="http://laegler.com/openbanking/soap/service" message="q1979:GET_GetAccountsAccountIdDirectDebits_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_406" xmlns:q1980="http://laegler.com/openbanking/soap/service" message="q1980:GET_GetAccountsAccountIdDirectDebits_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_429" xmlns:q1981="http://laegler.com/openbanking/soap/service" message="q1981:GET_GetAccountsAccountIdDirectDebits_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_500" xmlns:q1982="http://laegler.com/openbanking/soap/service" message="q1982:GET_GetAccountsAccountIdDirectDebits_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDirectDebits">
      <documentation>Get Direct Debits</documentation>
      <input xmlns:q1983="http://laegler.com/openbanking/soap/service" message="q1983:GET_GetDirectDebits_InputMessage" />
      <output xmlns:q1984="http://laegler.com/openbanking/soap/service" message="q1984:GET_GetDirectDebits_OutputMessage">
        <documentation>Direct Debits Read</documentation>
      </output>
      <fault name="GET_GetDirectDebits_400" xmlns:q1985="http://laegler.com/openbanking/soap/service" message="q1985:GET_GetDirectDebits_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_401" xmlns:q1986="http://laegler.com/openbanking/soap/service" message="q1986:GET_GetDirectDebits_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_403" xmlns:q1987="http://laegler.com/openbanking/soap/service" message="q1987:GET_GetDirectDebits_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_404" xmlns:q1988="http://laegler.com/openbanking/soap/service" message="q1988:GET_GetDirectDebits_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_405" xmlns:q1989="http://laegler.com/openbanking/soap/service" message="q1989:GET_GetDirectDebits_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_406" xmlns:q1990="http://laegler.com/openbanking/soap/service" message="q1990:GET_GetDirectDebits_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_429" xmlns:q1991="http://laegler.com/openbanking/soap/service" message="q1991:GET_GetDirectDebits_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDirectDebits_500" xmlns:q1992="http://laegler.com/openbanking/soap/service" message="q1992:GET_GetDirectDebits_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_Getcertificatesforthegivensoftwarestatement">
      <documentation>Get certificates for the given software statement</documentation>
      <input xmlns:q1993="http://laegler.com/openbanking/soap/service" message="q1993:GET_Getcertificatesforthegivensoftwarestatement_InputMessage" />
      <output xmlns:q1994="http://laegler.com/openbanking/soap/service" message="q1994:GET_Getcertificatesforthegivensoftwarestatement_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_400" xmlns:q1995="http://laegler.com/openbanking/soap/service" message="q1995:GET_Getcertificatesforthegivensoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_401" xmlns:q1996="http://laegler.com/openbanking/soap/service" message="q1996:GET_Getcertificatesforthegivensoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_404" xmlns:q1997="http://laegler.com/openbanking/soap/service" message="q1997:GET_Getcertificatesforthegivensoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_406" xmlns:q1998="http://laegler.com/openbanking/soap/service" message="q1998:GET_Getcertificatesforthegivensoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_500" xmlns:q1999="http://laegler.com/openbanking/soap/service" message="q1999:GET_Getcertificatesforthegivensoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_502" xmlns:q2000="http://laegler.com/openbanking/soap/service" message="q2000:GET_Getcertificatesforthegivensoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement">
      <documentation>Get the certificate of the given type and ID for the given software statement</documentation>
      <input xmlns:q2001="http://laegler.com/openbanking/soap/service" message="q2001:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage" />
      <output xmlns:q2002="http://laegler.com/openbanking/soap/service" message="q2002:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400" xmlns:q2003="http://laegler.com/openbanking/soap/service" message="q2003:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401" xmlns:q2004="http://laegler.com/openbanking/soap/service" message="q2004:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404" xmlns:q2005="http://laegler.com/openbanking/soap/service" message="q2005:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406" xmlns:q2006="http://laegler.com/openbanking/soap/service" message="q2006:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500" xmlns:q2007="http://laegler.com/openbanking/soap/service" message="q2007:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502" xmlns:q2008="http://laegler.com/openbanking/soap/service" message="q2008:GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement">
      <documentation>Get the certificates of the given type for the given software statement</documentation>
      <input xmlns:q2009="http://laegler.com/openbanking/soap/service" message="q2009:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage" />
      <output xmlns:q2010="http://laegler.com/openbanking/soap/service" message="q2010:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400" xmlns:q2011="http://laegler.com/openbanking/soap/service" message="q2011:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401" xmlns:q2012="http://laegler.com/openbanking/soap/service" message="q2012:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404" xmlns:q2013="http://laegler.com/openbanking/soap/service" message="q2013:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406" xmlns:q2014="http://laegler.com/openbanking/soap/service" message="q2014:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500" xmlns:q2015="http://laegler.com/openbanking/soap/service" message="q2015:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502" xmlns:q2016="http://laegler.com/openbanking/soap/service" message="q2016:GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement">
      <documentation>Add a key or create a new certificate for the given software statement</documentation>
      <input xmlns:q2017="http://laegler.com/openbanking/soap/service" message="q2017:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage" />
      <output xmlns:q2018="http://laegler.com/openbanking/soap/service" message="q2018:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage">
        <documentation>Created</documentation>
      </output>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400" xmlns:q2019="http://laegler.com/openbanking/soap/service" message="q2019:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401" xmlns:q2020="http://laegler.com/openbanking/soap/service" message="q2020:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404" xmlns:q2021="http://laegler.com/openbanking/soap/service" message="q2021:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406" xmlns:q2022="http://laegler.com/openbanking/soap/service" message="q2022:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500" xmlns:q2023="http://laegler.com/openbanking/soap/service" message="q2023:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502" xmlns:q2024="http://laegler.com/openbanking/soap/service" message="q2024:POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_Validatecertificate">
      <documentation>Validate certificate</documentation>
      <input xmlns:q2025="http://laegler.com/openbanking/soap/service" message="q2025:POST_Validatecertificate_InputMessage" />
      <output xmlns:q2026="http://laegler.com/openbanking/soap/service" message="q2026:POST_Validatecertificate_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="POST_Validatecertificate_400" xmlns:q2027="http://laegler.com/openbanking/soap/service" message="q2027:POST_Validatecertificate_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_Validatecertificate_401" xmlns:q2028="http://laegler.com/openbanking/soap/service" message="q2028:POST_Validatecertificate_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_Validatecertificate_404" xmlns:q2029="http://laegler.com/openbanking/soap/service" message="q2029:POST_Validatecertificate_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_Validatecertificate_406" xmlns:q2030="http://laegler.com/openbanking/soap/service" message="q2030:POST_Validatecertificate_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_Validatecertificate_500" xmlns:q2031="http://laegler.com/openbanking/soap/service" message="q2031:POST_Validatecertificate_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_Validatecertificate_502" xmlns:q2032="http://laegler.com/openbanking/soap/service" message="q2032:POST_Validatecertificate_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateDomesticStandingOrderConsents">
      <documentation>Create Domestic Standing Order Consents</documentation>
      <input xmlns:q2033="http://laegler.com/openbanking/soap/service" message="q2033:POST_CreateDomesticStandingOrderConsents_InputMessage" />
      <output xmlns:q2034="http://laegler.com/openbanking/soap/service" message="q2034:POST_CreateDomesticStandingOrderConsents_OutputMessage">
        <documentation>Domestic Standing Order Consents Created</documentation>
      </output>
      <fault name="POST_CreateDomesticStandingOrderConsents_400" xmlns:q2035="http://laegler.com/openbanking/soap/service" message="q2035:POST_CreateDomesticStandingOrderConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_401" xmlns:q2036="http://laegler.com/openbanking/soap/service" message="q2036:POST_CreateDomesticStandingOrderConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_403" xmlns:q2037="http://laegler.com/openbanking/soap/service" message="q2037:POST_CreateDomesticStandingOrderConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_404" xmlns:q2038="http://laegler.com/openbanking/soap/service" message="q2038:POST_CreateDomesticStandingOrderConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_405" xmlns:q2039="http://laegler.com/openbanking/soap/service" message="q2039:POST_CreateDomesticStandingOrderConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_406" xmlns:q2040="http://laegler.com/openbanking/soap/service" message="q2040:POST_CreateDomesticStandingOrderConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_429" xmlns:q2041="http://laegler.com/openbanking/soap/service" message="q2041:POST_CreateDomesticStandingOrderConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_500" xmlns:q2042="http://laegler.com/openbanking/soap/service" message="q2042:POST_CreateDomesticStandingOrderConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticStandingOrderConsentsConsentId">
      <documentation>Get Domestic Standing Order Consents</documentation>
      <input xmlns:q2043="http://laegler.com/openbanking/soap/service" message="q2043:GET_GetDomesticStandingOrderConsentsConsentId_InputMessage" />
      <output xmlns:q2044="http://laegler.com/openbanking/soap/service" message="q2044:GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage">
        <documentation>Domestic Standing Order Consents Read</documentation>
      </output>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_400" xmlns:q2045="http://laegler.com/openbanking/soap/service" message="q2045:GET_GetDomesticStandingOrderConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_401" xmlns:q2046="http://laegler.com/openbanking/soap/service" message="q2046:GET_GetDomesticStandingOrderConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_403" xmlns:q2047="http://laegler.com/openbanking/soap/service" message="q2047:GET_GetDomesticStandingOrderConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_404" xmlns:q2048="http://laegler.com/openbanking/soap/service" message="q2048:GET_GetDomesticStandingOrderConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_405" xmlns:q2049="http://laegler.com/openbanking/soap/service" message="q2049:GET_GetDomesticStandingOrderConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_406" xmlns:q2050="http://laegler.com/openbanking/soap/service" message="q2050:GET_GetDomesticStandingOrderConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_429" xmlns:q2051="http://laegler.com/openbanking/soap/service" message="q2051:GET_GetDomesticStandingOrderConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_500" xmlns:q2052="http://laegler.com/openbanking/soap/service" message="q2052:GET_GetDomesticStandingOrderConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateDomesticStandingOrders">
      <documentation>Create Domestic Standing Orders</documentation>
      <input xmlns:q2053="http://laegler.com/openbanking/soap/service" message="q2053:POST_CreateDomesticStandingOrders_InputMessage" />
      <output xmlns:q2054="http://laegler.com/openbanking/soap/service" message="q2054:POST_CreateDomesticStandingOrders_OutputMessage">
        <documentation>Domestic Standing Orders Created</documentation>
      </output>
      <fault name="POST_CreateDomesticStandingOrders_400" xmlns:q2055="http://laegler.com/openbanking/soap/service" message="q2055:POST_CreateDomesticStandingOrders_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_401" xmlns:q2056="http://laegler.com/openbanking/soap/service" message="q2056:POST_CreateDomesticStandingOrders_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_403" xmlns:q2057="http://laegler.com/openbanking/soap/service" message="q2057:POST_CreateDomesticStandingOrders_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_404" xmlns:q2058="http://laegler.com/openbanking/soap/service" message="q2058:POST_CreateDomesticStandingOrders_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_405" xmlns:q2059="http://laegler.com/openbanking/soap/service" message="q2059:POST_CreateDomesticStandingOrders_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_406" xmlns:q2060="http://laegler.com/openbanking/soap/service" message="q2060:POST_CreateDomesticStandingOrders_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_429" xmlns:q2061="http://laegler.com/openbanking/soap/service" message="q2061:POST_CreateDomesticStandingOrders_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_500" xmlns:q2062="http://laegler.com/openbanking/soap/service" message="q2062:POST_CreateDomesticStandingOrders_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetDomesticStandingOrdersDomesticStandingOrderId">
      <documentation>Get Domestic Standing Orders</documentation>
      <input xmlns:q2063="http://laegler.com/openbanking/soap/service" message="q2063:GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage" />
      <output xmlns:q2064="http://laegler.com/openbanking/soap/service" message="q2064:GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage">
        <documentation>Domestic Standing Orders Read</documentation>
      </output>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_400" xmlns:q2065="http://laegler.com/openbanking/soap/service" message="q2065:GET_GetDomesticStandingOrdersDomesticStandingOrderId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_401" xmlns:q2066="http://laegler.com/openbanking/soap/service" message="q2066:GET_GetDomesticStandingOrdersDomesticStandingOrderId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_403" xmlns:q2067="http://laegler.com/openbanking/soap/service" message="q2067:GET_GetDomesticStandingOrdersDomesticStandingOrderId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_404" xmlns:q2068="http://laegler.com/openbanking/soap/service" message="q2068:GET_GetDomesticStandingOrdersDomesticStandingOrderId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_405" xmlns:q2069="http://laegler.com/openbanking/soap/service" message="q2069:GET_GetDomesticStandingOrdersDomesticStandingOrderId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_406" xmlns:q2070="http://laegler.com/openbanking/soap/service" message="q2070:GET_GetDomesticStandingOrdersDomesticStandingOrderId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_429" xmlns:q2071="http://laegler.com/openbanking/soap/service" message="q2071:GET_GetDomesticStandingOrdersDomesticStandingOrderId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_500" xmlns:q2072="http://laegler.com/openbanking/soap/service" message="q2072:GET_GetDomesticStandingOrdersDomesticStandingOrderId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateInternationalStandingOrderConsents">
      <documentation>Create International Standing Order Consents</documentation>
      <input xmlns:q2073="http://laegler.com/openbanking/soap/service" message="q2073:POST_CreateInternationalStandingOrderConsents_InputMessage" />
      <output xmlns:q2074="http://laegler.com/openbanking/soap/service" message="q2074:POST_CreateInternationalStandingOrderConsents_OutputMessage">
        <documentation>International Standing Order Consents Created</documentation>
      </output>
      <fault name="POST_CreateInternationalStandingOrderConsents_400" xmlns:q2075="http://laegler.com/openbanking/soap/service" message="q2075:POST_CreateInternationalStandingOrderConsents_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_401" xmlns:q2076="http://laegler.com/openbanking/soap/service" message="q2076:POST_CreateInternationalStandingOrderConsents_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_403" xmlns:q2077="http://laegler.com/openbanking/soap/service" message="q2077:POST_CreateInternationalStandingOrderConsents_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_404" xmlns:q2078="http://laegler.com/openbanking/soap/service" message="q2078:POST_CreateInternationalStandingOrderConsents_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_405" xmlns:q2079="http://laegler.com/openbanking/soap/service" message="q2079:POST_CreateInternationalStandingOrderConsents_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_406" xmlns:q2080="http://laegler.com/openbanking/soap/service" message="q2080:POST_CreateInternationalStandingOrderConsents_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_429" xmlns:q2081="http://laegler.com/openbanking/soap/service" message="q2081:POST_CreateInternationalStandingOrderConsents_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_500" xmlns:q2082="http://laegler.com/openbanking/soap/service" message="q2082:POST_CreateInternationalStandingOrderConsents_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalStandingOrderConsentsConsentId">
      <documentation>Get International Standing Order Consents</documentation>
      <input xmlns:q2083="http://laegler.com/openbanking/soap/service" message="q2083:GET_GetInternationalStandingOrderConsentsConsentId_InputMessage" />
      <output xmlns:q2084="http://laegler.com/openbanking/soap/service" message="q2084:GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage">
        <documentation>International Standing Order Consents Read</documentation>
      </output>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_400" xmlns:q2085="http://laegler.com/openbanking/soap/service" message="q2085:GET_GetInternationalStandingOrderConsentsConsentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_401" xmlns:q2086="http://laegler.com/openbanking/soap/service" message="q2086:GET_GetInternationalStandingOrderConsentsConsentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_403" xmlns:q2087="http://laegler.com/openbanking/soap/service" message="q2087:GET_GetInternationalStandingOrderConsentsConsentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_404" xmlns:q2088="http://laegler.com/openbanking/soap/service" message="q2088:GET_GetInternationalStandingOrderConsentsConsentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_405" xmlns:q2089="http://laegler.com/openbanking/soap/service" message="q2089:GET_GetInternationalStandingOrderConsentsConsentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_406" xmlns:q2090="http://laegler.com/openbanking/soap/service" message="q2090:GET_GetInternationalStandingOrderConsentsConsentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_429" xmlns:q2091="http://laegler.com/openbanking/soap/service" message="q2091:GET_GetInternationalStandingOrderConsentsConsentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_500" xmlns:q2092="http://laegler.com/openbanking/soap/service" message="q2092:GET_GetInternationalStandingOrderConsentsConsentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateInternationalStandingOrders">
      <documentation>Create International Standing Orders</documentation>
      <input xmlns:q2093="http://laegler.com/openbanking/soap/service" message="q2093:POST_CreateInternationalStandingOrders_InputMessage" />
      <output xmlns:q2094="http://laegler.com/openbanking/soap/service" message="q2094:POST_CreateInternationalStandingOrders_OutputMessage">
        <documentation>International Standing Orders Created</documentation>
      </output>
      <fault name="POST_CreateInternationalStandingOrders_400" xmlns:q2095="http://laegler.com/openbanking/soap/service" message="q2095:POST_CreateInternationalStandingOrders_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_401" xmlns:q2096="http://laegler.com/openbanking/soap/service" message="q2096:POST_CreateInternationalStandingOrders_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_403" xmlns:q2097="http://laegler.com/openbanking/soap/service" message="q2097:POST_CreateInternationalStandingOrders_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_404" xmlns:q2098="http://laegler.com/openbanking/soap/service" message="q2098:POST_CreateInternationalStandingOrders_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_405" xmlns:q2099="http://laegler.com/openbanking/soap/service" message="q2099:POST_CreateInternationalStandingOrders_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_406" xmlns:q2100="http://laegler.com/openbanking/soap/service" message="q2100:POST_CreateInternationalStandingOrders_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_429" xmlns:q2101="http://laegler.com/openbanking/soap/service" message="q2101:POST_CreateInternationalStandingOrders_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_500" xmlns:q2102="http://laegler.com/openbanking/soap/service" message="q2102:POST_CreateInternationalStandingOrders_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId">
      <documentation>Get International Standing Orders</documentation>
      <input xmlns:q2103="http://laegler.com/openbanking/soap/service" message="q2103:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage" />
      <output xmlns:q2104="http://laegler.com/openbanking/soap/service" message="q2104:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage">
        <documentation>International Standing Orders Read</documentation>
      </output>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400" xmlns:q2105="http://laegler.com/openbanking/soap/service" message="q2105:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400">
        <documentation>Bad request</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401" xmlns:q2106="http://laegler.com/openbanking/soap/service" message="q2106:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403" xmlns:q2107="http://laegler.com/openbanking/soap/service" message="q2107:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403">
        <documentation>Forbidden</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404" xmlns:q2108="http://laegler.com/openbanking/soap/service" message="q2108:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405" xmlns:q2109="http://laegler.com/openbanking/soap/service" message="q2109:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405">
        <documentation>Method Not Allowed</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406" xmlns:q2110="http://laegler.com/openbanking/soap/service" message="q2110:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429" xmlns:q2111="http://laegler.com/openbanking/soap/service" message="q2111:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429">
        <documentation>Too Many Requests</documentation>
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500" xmlns:q2112="http://laegler.com/openbanking/soap/service" message="q2112:GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
    </operation>
    <operation name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve">
      <documentation>Note that this was not in the original design but is included to inform the client</documentation>
      <input xmlns:q2113="http://laegler.com/openbanking/soap/service" message="q2113:GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage" />
      <output xmlns:q2114="http://laegler.com/openbanking/soap/service" message="q2114:GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage">
        <documentation>List of the organisation - Schema in scim-swagger.json
</documentation>
      </output>
      <fault name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406" xmlns:q2115="http://laegler.com/openbanking/soap/service" message="q2115:GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406">
        <documentation>Not Acceptable</documentation>
      </fault>
    </operation>
    <operation name="POST_EnrolaeIDASQWACQSealC-bearingparticipant">
      <documentation>Enrol an eIDAS QWAC/QSealC certificate-bearing participant onto the Open Banking Directory. Currenty only TPPs can use this enrolment endpoint, so please set `OrganisationType` to `tpp`</documentation>
      <input xmlns:q2116="http://laegler.com/openbanking/soap/service" message="q2116:POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage" />
      <output xmlns:q2117="http://laegler.com/openbanking/soap/service" message="q2117:POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage">
        <documentation>Created</documentation>
      </output>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_400" xmlns:q2118="http://laegler.com/openbanking/soap/service" message="q2118:POST_EnrolaeIDASQWACQSealC-bearingparticipant_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_401" xmlns:q2119="http://laegler.com/openbanking/soap/service" message="q2119:POST_EnrolaeIDASQWACQSealC-bearingparticipant_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_406" xmlns:q2120="http://laegler.com/openbanking/soap/service" message="q2120:POST_EnrolaeIDASQWACQSealC-bearingparticipant_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_500" xmlns:q2121="http://laegler.com/openbanking/soap/service" message="q2121:POST_EnrolaeIDASQWACQSealC-bearingparticipant_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_502" xmlns:q2122="http://laegler.com/openbanking/soap/service" message="q2122:POST_EnrolaeIDASQWACQSealC-bearingparticipant_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Getthegivenorganisationsdetails">
      <documentation>Get the given organisation's details</documentation>
      <input xmlns:q2123="http://laegler.com/openbanking/soap/service" message="q2123:GET_Getthegivenorganisationsdetails_InputMessage" />
      <output xmlns:q2124="http://laegler.com/openbanking/soap/service" message="q2124:GET_Getthegivenorganisationsdetails_OutputMessage">
        <documentation>Full details of the organisation - Schema in scim-swagger.json
</documentation>
      </output>
      <fault name="GET_Getthegivenorganisationsdetails_404" xmlns:q2125="http://laegler.com/openbanking/soap/service" message="q2125:GET_Getthegivenorganisationsdetails_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_Getthegivenorganisationsdetails_406" xmlns:q2126="http://laegler.com/openbanking/soap/service" message="q2126:GET_Getthegivenorganisationsdetails_406">
        <documentation>Not Acceptable</documentation>
      </fault>
    </operation>
    <operation name="GET_GetallAuthorisationServersforthegivenorganisation">
      <documentation>Get all Authorisation Servers for the given organisation</documentation>
      <input xmlns:q2127="http://laegler.com/openbanking/soap/service" message="q2127:GET_GetallAuthorisationServersforthegivenorganisation_InputMessage" />
      <output xmlns:q2128="http://laegler.com/openbanking/soap/service" message="q2128:GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_400" xmlns:q2129="http://laegler.com/openbanking/soap/service" message="q2129:GET_GetallAuthorisationServersforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_401" xmlns:q2130="http://laegler.com/openbanking/soap/service" message="q2130:GET_GetallAuthorisationServersforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_404" xmlns:q2131="http://laegler.com/openbanking/soap/service" message="q2131:GET_GetallAuthorisationServersforthegivenorganisation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_406" xmlns:q2132="http://laegler.com/openbanking/soap/service" message="q2132:GET_GetallAuthorisationServersforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_500" xmlns:q2133="http://laegler.com/openbanking/soap/service" message="q2133:GET_GetallAuthorisationServersforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_502" xmlns:q2134="http://laegler.com/openbanking/soap/service" message="q2134:GET_GetallAuthorisationServersforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_CreateanAuthorisationServerforthegivenorganisation">
      <documentation>Create an Authorisation Server for the given organisation</documentation>
      <input xmlns:q2135="http://laegler.com/openbanking/soap/service" message="q2135:POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage" />
      <output xmlns:q2136="http://laegler.com/openbanking/soap/service" message="q2136:POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_400" xmlns:q2137="http://laegler.com/openbanking/soap/service" message="q2137:POST_CreateanAuthorisationServerforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_401" xmlns:q2138="http://laegler.com/openbanking/soap/service" message="q2138:POST_CreateanAuthorisationServerforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_404" xmlns:q2139="http://laegler.com/openbanking/soap/service" message="q2139:POST_CreateanAuthorisationServerforthegivenorganisation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_406" xmlns:q2140="http://laegler.com/openbanking/soap/service" message="q2140:POST_CreateanAuthorisationServerforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_500" xmlns:q2141="http://laegler.com/openbanking/soap/service" message="q2141:POST_CreateanAuthorisationServerforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_502" xmlns:q2142="http://laegler.com/openbanking/soap/service" message="q2142:POST_CreateanAuthorisationServerforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="DELETE_DeleteanAuthorisationServer">
      <documentation>Delete an Authorisation Server</documentation>
      <input xmlns:q2143="http://laegler.com/openbanking/soap/service" message="q2143:DELETE_DeleteanAuthorisationServer_InputMessage" />
      <output xmlns:q2144="http://laegler.com/openbanking/soap/service" message="q2144:DELETE_DeleteanAuthorisationServer_OutputMessage">
        <documentation>No Content</documentation>
      </output>
      <fault name="DELETE_DeleteanAuthorisationServer_400" xmlns:q2145="http://laegler.com/openbanking/soap/service" message="q2145:DELETE_DeleteanAuthorisationServer_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_401" xmlns:q2146="http://laegler.com/openbanking/soap/service" message="q2146:DELETE_DeleteanAuthorisationServer_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_404" xmlns:q2147="http://laegler.com/openbanking/soap/service" message="q2147:DELETE_DeleteanAuthorisationServer_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_406" xmlns:q2148="http://laegler.com/openbanking/soap/service" message="q2148:DELETE_DeleteanAuthorisationServer_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_500" xmlns:q2149="http://laegler.com/openbanking/soap/service" message="q2149:DELETE_DeleteanAuthorisationServer_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_502" xmlns:q2150="http://laegler.com/openbanking/soap/service" message="q2150:DELETE_DeleteanAuthorisationServer_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Get.well-knownentity">
      <documentation>Get .well-known entity</documentation>
      <input xmlns:q2151="http://laegler.com/openbanking/soap/service" message="q2151:GET_Get.well-knownentity_InputMessage" />
      <output xmlns:q2152="http://laegler.com/openbanking/soap/service" message="q2152:GET_Get.well-knownentity_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_Get.well-knownentity_400" xmlns:q2153="http://laegler.com/openbanking/soap/service" message="q2153:GET_Get.well-knownentity_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Get.well-knownentity_401" xmlns:q2154="http://laegler.com/openbanking/soap/service" message="q2154:GET_Get.well-knownentity_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Get.well-knownentity_404" xmlns:q2155="http://laegler.com/openbanking/soap/service" message="q2155:GET_Get.well-knownentity_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_Get.well-knownentity_406" xmlns:q2156="http://laegler.com/openbanking/soap/service" message="q2156:GET_Get.well-knownentity_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Get.well-knownentity_500" xmlns:q2157="http://laegler.com/openbanking/soap/service" message="q2157:GET_Get.well-knownentity_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Get.well-knownentity_502" xmlns:q2158="http://laegler.com/openbanking/soap/service" message="q2158:GET_Get.well-knownentity_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="PUT_Update.well-knownentity">
      <documentation>Update .well-known entity</documentation>
      <input xmlns:q2159="http://laegler.com/openbanking/soap/service" message="q2159:PUT_Update.well-knownentity_InputMessage" />
      <output xmlns:q2160="http://laegler.com/openbanking/soap/service" message="q2160:PUT_Update.well-knownentity_OutputMessage">
        <documentation>Accepted</documentation>
      </output>
      <fault name="PUT_Update.well-knownentity_400" xmlns:q2161="http://laegler.com/openbanking/soap/service" message="q2161:PUT_Update.well-knownentity_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="PUT_Update.well-knownentity_401" xmlns:q2162="http://laegler.com/openbanking/soap/service" message="q2162:PUT_Update.well-knownentity_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_Update.well-knownentity_404" xmlns:q2163="http://laegler.com/openbanking/soap/service" message="q2163:PUT_Update.well-knownentity_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="PUT_Update.well-knownentity_406" xmlns:q2164="http://laegler.com/openbanking/soap/service" message="q2164:PUT_Update.well-knownentity_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="PUT_Update.well-knownentity_500" xmlns:q2165="http://laegler.com/openbanking/soap/service" message="q2165:PUT_Update.well-knownentity_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="PUT_Update.well-knownentity_502" xmlns:q2166="http://laegler.com/openbanking/soap/service" message="q2166:PUT_Update.well-knownentity_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Getthecertificatesforthegivenorganisation">
      <documentation>Get the certificates for the given organisation</documentation>
      <input xmlns:q2167="http://laegler.com/openbanking/soap/service" message="q2167:GET_Getthecertificatesforthegivenorganisation_InputMessage" />
      <output xmlns:q2168="http://laegler.com/openbanking/soap/service" message="q2168:GET_Getthecertificatesforthegivenorganisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_Getthecertificatesforthegivenorganisation_400" xmlns:q2169="http://laegler.com/openbanking/soap/service" message="q2169:GET_Getthecertificatesforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_401" xmlns:q2170="http://laegler.com/openbanking/soap/service" message="q2170:GET_Getthecertificatesforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_404" xmlns:q2171="http://laegler.com/openbanking/soap/service" message="q2171:GET_Getthecertificatesforthegivenorganisation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_406" xmlns:q2172="http://laegler.com/openbanking/soap/service" message="q2172:GET_Getthecertificatesforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_500" xmlns:q2173="http://laegler.com/openbanking/soap/service" message="q2173:GET_Getthecertificatesforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_502" xmlns:q2174="http://laegler.com/openbanking/soap/service" message="q2174:GET_Getthecertificatesforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation">
      <documentation>Get the certificates of the given OrganisationCertificateType for the given oranisation</documentation>
      <input xmlns:q2175="http://laegler.com/openbanking/soap/service" message="q2175:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage" />
      <output xmlns:q2176="http://laegler.com/openbanking/soap/service" message="q2176:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400" xmlns:q2177="http://laegler.com/openbanking/soap/service" message="q2177:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401" xmlns:q2178="http://laegler.com/openbanking/soap/service" message="q2178:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404" xmlns:q2179="http://laegler.com/openbanking/soap/service" message="q2179:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406" xmlns:q2180="http://laegler.com/openbanking/soap/service" message="q2180:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500" xmlns:q2181="http://laegler.com/openbanking/soap/service" message="q2181:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502" xmlns:q2182="http://laegler.com/openbanking/soap/service" message="q2182:GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation">
      <documentation>Store or create a new certificate of the given OrganisationCertificateType for the given organisation</documentation>
      <input xmlns:q2183="http://laegler.com/openbanking/soap/service" message="q2183:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage" />
      <output xmlns:q2184="http://laegler.com/openbanking/soap/service" message="q2184:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage">
        <documentation>Created</documentation>
      </output>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400" xmlns:q2185="http://laegler.com/openbanking/soap/service" message="q2185:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401" xmlns:q2186="http://laegler.com/openbanking/soap/service" message="q2186:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404" xmlns:q2187="http://laegler.com/openbanking/soap/service" message="q2187:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406" xmlns:q2188="http://laegler.com/openbanking/soap/service" message="q2188:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500" xmlns:q2189="http://laegler.com/openbanking/soap/service" message="q2189:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502" xmlns:q2190="http://laegler.com/openbanking/soap/service" message="q2190:POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId">
      <documentation>Revoke or remove a certificate with the given CertificateOrKeyId</documentation>
      <input xmlns:q2191="http://laegler.com/openbanking/soap/service" message="q2191:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage" />
      <output xmlns:q2192="http://laegler.com/openbanking/soap/service" message="q2192:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage">
        <documentation>No Content</documentation>
      </output>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400" xmlns:q2193="http://laegler.com/openbanking/soap/service" message="q2193:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401" xmlns:q2194="http://laegler.com/openbanking/soap/service" message="q2194:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404" xmlns:q2195="http://laegler.com/openbanking/soap/service" message="q2195:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406" xmlns:q2196="http://laegler.com/openbanking/soap/service" message="q2196:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500" xmlns:q2197="http://laegler.com/openbanking/soap/service" message="q2197:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502" xmlns:q2198="http://laegler.com/openbanking/soap/service" message="q2198:DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId">
      <documentation>Retrieve a certificate with the given CertificateOrKeyId</documentation>
      <input xmlns:q2199="http://laegler.com/openbanking/soap/service" message="q2199:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage" />
      <output xmlns:q2200="http://laegler.com/openbanking/soap/service" message="q2200:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400" xmlns:q2201="http://laegler.com/openbanking/soap/service" message="q2201:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401" xmlns:q2202="http://laegler.com/openbanking/soap/service" message="q2202:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404" xmlns:q2203="http://laegler.com/openbanking/soap/service" message="q2203:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406" xmlns:q2204="http://laegler.com/openbanking/soap/service" message="q2204:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500" xmlns:q2205="http://laegler.com/openbanking/soap/service" message="q2205:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502" xmlns:q2206="http://laegler.com/openbanking/soap/service" message="q2206:GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation">
      <documentation>Get the business or the technical contacts for the given organisation</documentation>
      <input xmlns:q2207="http://laegler.com/openbanking/soap/service" message="q2207:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage" />
      <output xmlns:q2208="http://laegler.com/openbanking/soap/service" message="q2208:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400" xmlns:q2209="http://laegler.com/openbanking/soap/service" message="q2209:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401" xmlns:q2210="http://laegler.com/openbanking/soap/service" message="q2210:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406" xmlns:q2211="http://laegler.com/openbanking/soap/service" message="q2211:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500" xmlns:q2212="http://laegler.com/openbanking/soap/service" message="q2212:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502" xmlns:q2213="http://laegler.com/openbanking/soap/service" message="q2213:GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation">
      <documentation>Update the business or the technical contacts for the given organisation</documentation>
      <input xmlns:q2214="http://laegler.com/openbanking/soap/service" message="q2214:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage" />
      <output xmlns:q2215="http://laegler.com/openbanking/soap/service" message="q2215:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400" xmlns:q2216="http://laegler.com/openbanking/soap/service" message="q2216:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401" xmlns:q2217="http://laegler.com/openbanking/soap/service" message="q2217:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406" xmlns:q2218="http://laegler.com/openbanking/soap/service" message="q2218:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500" xmlns:q2219="http://laegler.com/openbanking/soap/service" message="q2219:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502" xmlns:q2220="http://laegler.com/openbanking/soap/service" message="q2220:PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Getallsoftwarestatementsforthegivenorganisation">
      <documentation>Get all software statements for the given organisation</documentation>
      <input xmlns:q2221="http://laegler.com/openbanking/soap/service" message="q2221:GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage" />
      <output xmlns:q2222="http://laegler.com/openbanking/soap/service" message="q2222:GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_400" xmlns:q2223="http://laegler.com/openbanking/soap/service" message="q2223:GET_Getallsoftwarestatementsforthegivenorganisation_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_401" xmlns:q2224="http://laegler.com/openbanking/soap/service" message="q2224:GET_Getallsoftwarestatementsforthegivenorganisation_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_406" xmlns:q2225="http://laegler.com/openbanking/soap/service" message="q2225:GET_Getallsoftwarestatementsforthegivenorganisation_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_500" xmlns:q2226="http://laegler.com/openbanking/soap/service" message="q2226:GET_Getallsoftwarestatementsforthegivenorganisation_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_502" xmlns:q2227="http://laegler.com/openbanking/soap/service" message="q2227:GET_Getallsoftwarestatementsforthegivenorganisation_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_Createasoftwarestatement">
      <documentation>Create a software statement</documentation>
      <input xmlns:q2228="http://laegler.com/openbanking/soap/service" message="q2228:POST_Createasoftwarestatement_InputMessage" />
      <output xmlns:q2229="http://laegler.com/openbanking/soap/service" message="q2229:POST_Createasoftwarestatement_OutputMessage">
        <documentation>Created</documentation>
      </output>
      <fault name="POST_Createasoftwarestatement_400" xmlns:q2230="http://laegler.com/openbanking/soap/service" message="q2230:POST_Createasoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_Createasoftwarestatement_401" xmlns:q2231="http://laegler.com/openbanking/soap/service" message="q2231:POST_Createasoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_Createasoftwarestatement_406" xmlns:q2232="http://laegler.com/openbanking/soap/service" message="q2232:POST_Createasoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_Createasoftwarestatement_500" xmlns:q2233="http://laegler.com/openbanking/soap/service" message="q2233:POST_Createasoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_Createasoftwarestatement_502" xmlns:q2234="http://laegler.com/openbanking/soap/service" message="q2234:POST_Createasoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_Getasoftwarestatement">
      <documentation>Get a software statement</documentation>
      <input xmlns:q2235="http://laegler.com/openbanking/soap/service" message="q2235:GET_Getasoftwarestatement_InputMessage" />
      <output xmlns:q2236="http://laegler.com/openbanking/soap/service" message="q2236:GET_Getasoftwarestatement_OutputMessage">
        <documentation>Created</documentation>
      </output>
      <fault name="GET_Getasoftwarestatement_400" xmlns:q2237="http://laegler.com/openbanking/soap/service" message="q2237:GET_Getasoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_Getasoftwarestatement_401" xmlns:q2238="http://laegler.com/openbanking/soap/service" message="q2238:GET_Getasoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_Getasoftwarestatement_404" xmlns:q2239="http://laegler.com/openbanking/soap/service" message="q2239:GET_Getasoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_Getasoftwarestatement_406" xmlns:q2240="http://laegler.com/openbanking/soap/service" message="q2240:GET_Getasoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_Getasoftwarestatement_500" xmlns:q2241="http://laegler.com/openbanking/soap/service" message="q2241:GET_Getasoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_Getasoftwarestatement_502" xmlns:q2242="http://laegler.com/openbanking/soap/service" message="q2242:GET_Getasoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="PUT_Updateasoftwarestatement">
      <documentation>Update a software statement</documentation>
      <input xmlns:q2243="http://laegler.com/openbanking/soap/service" message="q2243:PUT_Updateasoftwarestatement_InputMessage" />
      <output xmlns:q2244="http://laegler.com/openbanking/soap/service" message="q2244:PUT_Updateasoftwarestatement_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="PUT_Updateasoftwarestatement_400" xmlns:q2245="http://laegler.com/openbanking/soap/service" message="q2245:PUT_Updateasoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="PUT_Updateasoftwarestatement_401" xmlns:q2246="http://laegler.com/openbanking/soap/service" message="q2246:PUT_Updateasoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_Updateasoftwarestatement_404" xmlns:q2247="http://laegler.com/openbanking/soap/service" message="q2247:PUT_Updateasoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="PUT_Updateasoftwarestatement_406" xmlns:q2248="http://laegler.com/openbanking/soap/service" message="q2248:PUT_Updateasoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="PUT_Updateasoftwarestatement_500" xmlns:q2249="http://laegler.com/openbanking/soap/service" message="q2249:PUT_Updateasoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="PUT_Updateasoftwarestatement_502" xmlns:q2250="http://laegler.com/openbanking/soap/service" message="q2250:PUT_Updateasoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement">
      <documentation>Associate/de-associate a QSEAL/OBSEAL certificate with the given software statement</documentation>
      <input xmlns:q2251="http://laegler.com/openbanking/soap/service" message="q2251:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage" />
      <output xmlns:q2252="http://laegler.com/openbanking/soap/service" message="q2252:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400" xmlns:q2253="http://laegler.com/openbanking/soap/service" message="q2253:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401" xmlns:q2254="http://laegler.com/openbanking/soap/service" message="q2254:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404" xmlns:q2255="http://laegler.com/openbanking/soap/service" message="q2255:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406" xmlns:q2256="http://laegler.com/openbanking/soap/service" message="q2256:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409" xmlns:q2257="http://laegler.com/openbanking/soap/service" message="q2257:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409">
        <documentation>Conflict</documentation>
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500" xmlns:q2258="http://laegler.com/openbanking/soap/service" message="q2258:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502" xmlns:q2259="http://laegler.com/openbanking/soap/service" message="q2259:PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="POST_AddaredirectURItothegivenSoftwareStatement">
      <documentation>Add a redirect URI to the given Software Statement</documentation>
      <input xmlns:q2260="http://laegler.com/openbanking/soap/service" message="q2260:POST_AddaredirectURItothegivenSoftwareStatement_InputMessage" />
      <output xmlns:q2261="http://laegler.com/openbanking/soap/service" message="q2261:POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_400" xmlns:q2262="http://laegler.com/openbanking/soap/service" message="q2262:POST_AddaredirectURItothegivenSoftwareStatement_400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_401" xmlns:q2263="http://laegler.com/openbanking/soap/service" message="q2263:POST_AddaredirectURItothegivenSoftwareStatement_401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_404" xmlns:q2264="http://laegler.com/openbanking/soap/service" message="q2264:POST_AddaredirectURItothegivenSoftwareStatement_404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_406" xmlns:q2265="http://laegler.com/openbanking/soap/service" message="q2265:POST_AddaredirectURItothegivenSoftwareStatement_406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_409" xmlns:q2266="http://laegler.com/openbanking/soap/service" message="q2266:POST_AddaredirectURItothegivenSoftwareStatement_409">
        <documentation>Conflict</documentation>
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_500" xmlns:q2267="http://laegler.com/openbanking/soap/service" message="q2267:POST_AddaredirectURItothegivenSoftwareStatement_500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_502" xmlns:q2268="http://laegler.com/openbanking/soap/service" message="q2268:POST_AddaredirectURItothegivenSoftwareStatement_502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
    <operation name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID.">
      <documentation>The response body is a signed JWT and the values found in the header and the payload of the SSA are specified below

# Terminology

  This specification uses the terms "access token", "authorization code", "authorization endpoint", "authorization grant", "authorization server", "client", "client identifier", "client secret", "grant type", "protected resource", "redirection URI", "refresh token", "resource owner", "resource server", "response type", and "token endpoint" defined by OAuth 2.0 [RFC6749] and uses the term "Claim" defined by JSON Web Token (JWT) [RFC7519].

  * __Account Servicing Payment Services Provider (ASPSP)__ -- An organisation managing customer accounts (and operating banking APIs).
  * __Primary Technical Contact__ -- The person at the TPP who creates an SSA and invokes a registration mechanism. This is an example of an [RFC7591] Client Developer.
  * __OB Organisation ID__ -- The unique identifier for each OpenBanking participant. Both TPPs and ASPSPs have OB Organisation IDs.
  * __OpenBanking Directory__ -- An implementation of a [PSD2] competent authority; acts as an Identity Provider, certificate authority, and registry governing the participants in the UK OpenBanking API scheme.
  * __ASPSP Registration Endpoint__ -- OAuth 2.0 &amp; [RFC7591] compliant endpoint, exact value is discoverable from the [OIDCD] openid-configuration file of the ASPSP.
  * __Software Statement Assertion (SSA)__ -- An implementation of an [RFC7591] software statement, signed by the OpenBanking Directory.
  * __Trusted Third Party (TPP)__ -- An organization working to initiate payments or consume account information with/from an ASPSP.
  * __TPP Client Software__ -- software implementing an OAuth2 client, interacting with an ASPSP registration endpoint.

# Software Statement Assertion (SSA)

  The SSA is a JSON Web Token (JWT) containing client metadata about an instance of TPP client software. The JWT is issued and signed by the OpenBanking Directory.

## SSA Payload

  The payload of an OpenBanking SSA MUST be a compliant software statement according to [RFC7591]. The SSA MUST also be a compliant JWT according to [RFC7519]. The following metadata profiles the metadata in [RFC7591] and [RFC7519]:

  | Metadata | Description | Source Specification |
  |----------|-------------|----------------------|
  |`software_id`|Unique Identifier for TPP Client Software|[RFC7591]|
  |`iss`|SSA Issuer|[RFC7519]|
  |`iat`|Time SSA issued|[RFC7519]|
  |`jti`|JWT ID|[RFC7519]|

  The following software metadata is additionally defined for this profile:

  |Metadata |Description |Field Size |Default values |
  |---------|------------|-----------|---------------|
  |`software_client_id`|The Client ID Registered at OB used to access OB resources|Base62 GUID (22 chars)| |
  |`software_client_description`|Human-readable detailed description of the client|Max256Text| |
  |`software_client_name`|Human-readable Software Name|Max40Text| |
  |`software_client_uri`|The website or resource root uri|Max256Text| |
  |`software_version`|The version number of the software should a TPP choose to register and / or maintain it|decimal| |
  |`software_environment`|Requested additional field to avoid certificate check|Max256Text| |
  |`software_jwks_endpoint`|Contains all active signing and network certs for the software|Max256Text| |
  |`software_jwks_revoked_endpoint`|Contains all revoked signing and network certs for the software|Max256Text| |
  |`software_logo_uri`|Link to the TPP logo. Note, ASPSPs are not obliged to display images hosted by third parties|Max256Text| |
  |`software_mode`|ASPSP Requested additional field to indicate that this software is `Test` or `Live` the default is `Live`. Impact and support for `Test` software is up to the ASPSP.|Max40Text| |
  |`software_on_behalf_of_org`|A reference to fourth party organsiation resource on the OB Directory if the registering TPP is acting on behalf of another.|Max40Text| |
  |`software_policy_uri`|A link to the software's policy page|Max256Text| |
  |`software_redirect_uris`|Registered client callback endpoints as registered with Open Banking|A string array of Max256Text items|
  |`software_roles`|A multi value list of PSD2 roles that this software is authorized to perform.|A string array of Max256Text items| |
  |`software_tos_uri`|A link to the software's terms of service page|Max256Text| |

  The following Organisational metadata is defined for this profile:

  |Metadata |Description |Field Size | Default values |
  |---------|------------|-----------|----------------|
  |`organisation_competent_authority_claims`|Authorisations granted to the organsiation by an NCA|CodeList {`AISP`, `PISP`, `CBPII`, `ASPSP`}| |
  |`org_status`|Included to cater for voluntary withdrawal from OB scenarios|`Active`, `Revoked`, or `Withdrawn`| |
  |`org_id`|The Unique TPP or ASPSP ID held by OpenBanking.|Max35Text| |
  |`org_name`|Legal Entity Identifier or other known organisation name|Max140Text| |
  |`org_contacts`|JSON array of objects containing a triplet of name, email, and phone number|Each item Max256Text| |
  |`org_jwks_endpoint`|Contains all active signing and network certs for the organisation|Max256Text| |
  |`org_jwks_revoked_endpoint`|Contains all revoked signing and network certs for the organisation|Max256Text| |

## SSA header

  The SSA header MUST comply with [RFC7519].

  |Metadata |Description |Comments |
  |---------|------------|---------|
  |`typ`|MUST be set to `JWT`| |
  |`alg`|MUST be set to `ES256` or `PS256`| |
  |`kid`|The kid will be kept the same as the `x5t` parameter. (X.509 Certificate SHA-1 Thumbprint) of the signing certificate.| |

  ### Example SSA

  The elements defined in the software statement will consist of the following values.

  *Note that there are inconsistent applications of booleans or "Active" strings in the current data model.*

  *Note that there are inconsistent applications of status flags case sensitivity.*

  *The attributes required to be displayed by ASPSPs.*

```
{
  "typ": "JWT",
  "alg": "ES256",
  "kid": "ABCD1234"
}
{
  "iss": "OpenBanking Ltd",
  "iat": 1492756331,
  "jti": "id12345685439487678",
  "software_environment": "production",
  "software_mode": "live",
  "software_id": "65d1f27c-4aea-4549-9c21-60e495a7a86f",
  "software_client_id": "OpenBanking TPP Client Unique ID",
  "software_client_name": "Amazon Prime Movies",
  "software_client_description": "Amazon Prime Movies is a moving streaming service",
  "software_version": "2.2",
  "software_client_uri": "http://prime.amazon.com",
  "software_redirect_uris": [
    "http://prime.amazon.com/cb",
    "http://prime.amazon.co.uk/cb"
  ],
  "software_roles": [
    "PISP",
    "AISP"
  ],
  "organisation_competent_authority_claims": {
    "authority_id": "FMA", // Austrian Financial Market Authority
    "registration_id": "111111",
    "status": "Active",
    "authorisations":  [
      {
        "member_state": "GB",
        "roles": [
          "PISP",
          "AISP"
        ]
      },
      {
        "member_state": "IR",
        "roles": [
          "PISP"
        ]
      }
    ]
  },
  "software_logo_uri": "http://prime.amazon.com/logo.png",
  "org_status": "Active",
  "org_id": "Amazon TPPID",
  "org_name": "OpenBanking TPP Registered Name",
  "org_contacts": [
    {
      "name": "contact name",
      "email": "contact@contact.com",
      "phone": "+447890130558"
      "type": "business"
    },
    {
      "name": "contact name",
      "email": "contact@contact.com",
      "phone": "+447890130558",
      "type": "technical"
    }
  ],
  "org_jwks_endpoint": "http://jwks.openbanking.org.uk/org_id/org_id.jkws",
  "org_jwks_revoked_endpoint": "http://jwks.openbanking.org.uk/org_id/revoked/org_id.jkws",
  "software_jwks_endpoint": "http://jwks.openbanking.org.uk/org_id/software_id.jkws",
  "software_jwks_revoked_endpoint": "http://jwks.openbanking.org.uk/org_id/revoked/software_id.jkws",
  "software_policy_uri": "http://tpp.com/policy.html",
  "software_tos_uri": "http://tpp.com/tos.html",
  "software_on_behalf_of_org": "Acme Ltd"
}
{
  Signature
}
```

# Automated Client Registration

A TPP MAY use automated client registration to submit an SSA to an ASPSP in exchange for client credentials for use as a client against an OAuth 2.0 Authorization Server. It is RECOMMENDED for ASPSPs to support the automated client registration mechanism. A large number of claims that OpenID Connect OPs could support as part of the RFC7591 request are detailed [https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata) and should be followed if not explicitly referenced in the Software Statement Assertion claim set.

## Request Validation

Prior to issuing a client registration response, the ASPSP MUST perform the following checks

* The ASPSP SHOULD check whether the TPP that initiated the TLS connection is the same TPP as listed in the SSA.
* In the case where a gateway or other piece of infrastructure pre-terminates the MATLS channel in front of the registration endpoint, the certificate used to initiate the connection or some part of that certificate (such as DN &amp; Issuer) SHOULD be made available to the ASPSP for validation against the claims in the SSA.
* The registration request MUST be signed with a key contained in the JWKS referenced in the SSA included with the request. This ensures that a holder-of-key proof-of-possession is performed proving that the TPP app was the originally intended recipient of the SSA when the OB issued it.
* The SSA MUST be validated according to [RFC7519], including validation of the signature and validity window.

JWT signature must be validated, this involves retrieving the jwks keyset for both the OB and the TPP. The OB keystore location will be published as part of the directory specification, The TPP's will be included in the software statement.

### SSA Lifetime

The SSA's Lifetime / Validity period is not defined by Open Banking. ASPSPs in the Open Banking ecosystem are required to implement pragmatic time ranges in which to accept an SSA. For example, an ASPSP that has implemented Dynamic Client Registration may choose to accept SSA's that were issued no earlier than 1 minute prior to their presentation however ASPSPs that only support manual registration may need to accept SSAs that were issued 30 minutes prior as the elapsed time period between generation and use between these two flows is expected to differ significantly.
</documentation>
      <input xmlns:q2269="http://laegler.com/openbanking/soap/service" message="q2269:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage" />
      <output xmlns:q2270="http://laegler.com/openbanking/soap/service" message="q2270:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage">
        <documentation>OK</documentation>
      </output>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400" xmlns:q2271="http://laegler.com/openbanking/soap/service" message="q2271:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400">
        <documentation>Bad Request</documentation>
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401" xmlns:q2272="http://laegler.com/openbanking/soap/service" message="q2272:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401">
        <documentation>Unauthorized</documentation>
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404" xmlns:q2273="http://laegler.com/openbanking/soap/service" message="q2273:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404">
        <documentation>Not found</documentation>
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406" xmlns:q2274="http://laegler.com/openbanking/soap/service" message="q2274:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406">
        <documentation>Not Acceptable</documentation>
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500" xmlns:q2275="http://laegler.com/openbanking/soap/service" message="q2275:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500">
        <documentation>Internal Server Error</documentation>
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502" xmlns:q2276="http://laegler.com/openbanking/soap/service" message="q2276:GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502">
        <documentation>Bad Gateway</documentation>
      </fault>
    </operation>
  </portType>
  <portType name="authserver_PortType" />
  <binding name="default_Binding" xmlns:q2277="http://laegler.com/openbanking/soap/service" type="q2277:default_PortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
    <operation name="GET_UnsecuredSmeLoans_GET">
      <soap:operation soapAction="GET_UnsecuredSmeLoans_GET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_UnsecuredSmeLoans_GET_400">
        <soap:fault use="literal" name="GET_UnsecuredSmeLoans_GET_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_408">
        <soap:fault use="literal" name="GET_UnsecuredSmeLoans_GET_408" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_429">
        <soap:fault use="literal" name="GET_UnsecuredSmeLoans_GET_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_500">
        <soap:fault use="literal" name="GET_UnsecuredSmeLoans_GET_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_503">
        <soap:fault use="literal" name="GET_UnsecuredSmeLoans_GET_503" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_UnsecuredSmeLoans_GET_Default">
        <soap:fault use="literal" name="GET_UnsecuredSmeLoans_GET_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_CommercialCreditCards_GET">
      <soap:operation soapAction="GET_CommercialCreditCards_GET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_CommercialCreditCards_GET_400">
        <soap:fault use="literal" name="GET_CommercialCreditCards_GET_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_CommercialCreditCards_GET_408">
        <soap:fault use="literal" name="GET_CommercialCreditCards_GET_408" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_CommercialCreditCards_GET_429">
        <soap:fault use="literal" name="GET_CommercialCreditCards_GET_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_CommercialCreditCards_GET_500">
        <soap:fault use="literal" name="GET_CommercialCreditCards_GET_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_CommercialCreditCards_GET_503">
        <soap:fault use="literal" name="GET_CommercialCreditCards_GET_503" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_CommercialCreditCards_GET_Default">
        <soap:fault use="literal" name="GET_CommercialCreditCards_GET_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Atms_GET">
      <soap:operation soapAction="GET_Atms_GET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Atms_GET_400">
        <soap:fault use="literal" name="GET_Atms_GET_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Atms_GET_408">
        <soap:fault use="literal" name="GET_Atms_GET_408" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Atms_GET_429">
        <soap:fault use="literal" name="GET_Atms_GET_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Atms_GET_500">
        <soap:fault use="literal" name="GET_Atms_GET_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Atms_GET_503">
        <soap:fault use="literal" name="GET_Atms_GET_503" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Atms_GET_Default">
        <soap:fault use="literal" name="GET_Atms_GET_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_PersonalCurrentAccounts_GET">
      <soap:operation soapAction="GET_PersonalCurrentAccounts_GET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_PersonalCurrentAccounts_GET_400">
        <soap:fault use="literal" name="GET_PersonalCurrentAccounts_GET_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_408">
        <soap:fault use="literal" name="GET_PersonalCurrentAccounts_GET_408" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_429">
        <soap:fault use="literal" name="GET_PersonalCurrentAccounts_GET_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_500">
        <soap:fault use="literal" name="GET_PersonalCurrentAccounts_GET_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_503">
        <soap:fault use="literal" name="GET_PersonalCurrentAccounts_GET_503" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_PersonalCurrentAccounts_GET_Default">
        <soap:fault use="literal" name="GET_PersonalCurrentAccounts_GET_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Branches_GET">
      <soap:operation soapAction="GET_Branches_GET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Branches_GET_400">
        <soap:fault use="literal" name="GET_Branches_GET_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Branches_GET_408">
        <soap:fault use="literal" name="GET_Branches_GET_408" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Branches_GET_429">
        <soap:fault use="literal" name="GET_Branches_GET_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Branches_GET_500">
        <soap:fault use="literal" name="GET_Branches_GET_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Branches_GET_503">
        <soap:fault use="literal" name="GET_Branches_GET_503" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Branches_GET_Default">
        <soap:fault use="literal" name="GET_Branches_GET_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_BusinessCurrentAccounts_GET">
      <soap:operation soapAction="GET_BusinessCurrentAccounts_GET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_BusinessCurrentAccounts_GET_400">
        <soap:fault use="literal" name="GET_BusinessCurrentAccounts_GET_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_408">
        <soap:fault use="literal" name="GET_BusinessCurrentAccounts_GET_408" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_429">
        <soap:fault use="literal" name="GET_BusinessCurrentAccounts_GET_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_500">
        <soap:fault use="literal" name="GET_BusinessCurrentAccounts_GET_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_503">
        <soap:fault use="literal" name="GET_BusinessCurrentAccounts_GET_503" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_BusinessCurrentAccounts_GET_Default">
        <soap:fault use="literal" name="GET_BusinessCurrentAccounts_GET_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Searchforoneormoreresources">
      <soap:operation soapAction="GET_Searchforoneormoreresources" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Searchforoneormoreresources_Default">
        <soap:fault use="literal" name="GET_Searchforoneormoreresources_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_SearchforoneormoreresourcesusingHTTPPOST">
      <soap:operation soapAction="POST_SearchforoneormoreresourcesusingHTTPPOST" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <soap:fault use="literal" name="POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Retrievetheresource">
      <soap:operation soapAction="GET_Retrievetheresource" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Retrievetheresource_Default">
        <soap:fault use="literal" name="GET_Retrievetheresource_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources">
      <soap:operation soapAction="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default">
        <soap:fault use="literal" name="OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST">
      <soap:operation soapAction="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <soap:fault use="literal" name="OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBAccountPaymentServiceProviders_GET_Retrievetheresource">
      <soap:operation soapAction="OBAccountPaymentServiceProviders_GET_Retrievetheresource" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default">
        <soap:fault use="literal" name="OBAccountPaymentServiceProviders_GET_Retrievetheresource_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBAuthorities_GET_Searchforoneormoreresources">
      <soap:operation soapAction="OBAuthorities_GET_Searchforoneormoreresources" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBAuthorities_GET_Searchforoneormoreresources_Default">
        <soap:fault use="literal" name="OBAuthorities_GET_Searchforoneormoreresources_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST">
      <soap:operation soapAction="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <soap:fault use="literal" name="OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBAuthorities_GET_Retrievetheresource">
      <soap:operation soapAction="OBAuthorities_GET_Retrievetheresource" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBAuthorities_GET_Retrievetheresource_Default">
        <soap:fault use="literal" name="OBAuthorities_GET_Retrievetheresource_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources">
      <soap:operation soapAction="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default">
        <soap:fault use="literal" name="OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST">
      <soap:operation soapAction="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default">
        <soap:fault use="literal" name="OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource">
      <soap:operation soapAction="OBQualifiedTrustServiceProviders_GET_Retrievetheresource" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default">
        <soap:fault use="literal" name="OBQualifiedTrustServiceProviders_GET_Retrievetheresource_Default" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_RegisteraclientbywayofaSoftwareStatementAssertion">
      <soap:operation soapAction="POST_RegisteraclientbywayofaSoftwareStatementAssertion" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_400">
        <soap:fault use="literal" name="POST_RegisteraclientbywayofaSoftwareStatementAssertion_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteaclientbywayofClientID">
      <soap:operation soapAction="DELETE_DeleteaclientbywayofClientID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteaclientbywayofClientID_401">
        <soap:fault use="literal" name="DELETE_DeleteaclientbywayofClientID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteaclientbywayofClientID_403">
        <soap:fault use="literal" name="DELETE_DeleteaclientbywayofClientID_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteaclientbywayofClientID_405">
        <soap:fault use="literal" name="DELETE_DeleteaclientbywayofClientID_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetaclientbywayofClientID">
      <soap:operation soapAction="GET_GetaclientbywayofClientID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetaclientbywayofClientID_401">
        <soap:fault use="literal" name="GET_GetaclientbywayofClientID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetaclientbywayofClientID_403">
        <soap:fault use="literal" name="GET_GetaclientbywayofClientID_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_UpdateaclientbywayofClientID">
      <soap:operation soapAction="PUT_UpdateaclientbywayofClientID" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_UpdateaclientbywayofClientID_400">
        <soap:fault use="literal" name="PUT_UpdateaclientbywayofClientID_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_UpdateaclientbywayofClientID_401">
        <soap:fault use="literal" name="PUT_UpdateaclientbywayofClientID_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_UpdateaclientbywayofClientID_403">
        <soap:fault use="literal" name="PUT_UpdateaclientbywayofClientID_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_ReadallcallbackURLs">
      <soap:operation soapAction="GET_ReadallcallbackURLs" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_ReadallcallbackURLs_400">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_401">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_403">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_404">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_405">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_406">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_429">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_ReadallcallbackURLs_500">
        <soap:fault use="literal" name="GET_ReadallcallbackURLs_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateacallbackURL">
      <soap:operation soapAction="POST_CreateacallbackURL" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateacallbackURL_400">
        <soap:fault use="literal" name="POST_CreateacallbackURL_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_401">
        <soap:fault use="literal" name="POST_CreateacallbackURL_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_403">
        <soap:fault use="literal" name="POST_CreateacallbackURL_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_405">
        <soap:fault use="literal" name="POST_CreateacallbackURL_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_406">
        <soap:fault use="literal" name="POST_CreateacallbackURL_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_415">
        <soap:fault use="literal" name="POST_CreateacallbackURL_415" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_429">
        <soap:fault use="literal" name="POST_CreateacallbackURL_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateacallbackURL_500">
        <soap:fault use="literal" name="POST_CreateacallbackURL_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteacallbackURI">
      <soap:operation soapAction="DELETE_DeleteacallbackURI" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteacallbackURI_400">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_401">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_403">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_404">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_405">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_406">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_429">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteacallbackURI_500">
        <soap:fault use="literal" name="DELETE_DeleteacallbackURI_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_AmendacallbackURI">
      <soap:operation soapAction="PUT_AmendacallbackURI" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_AmendacallbackURI_400">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_401">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_403">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_404">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_405">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_406">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_415">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_415" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_429">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_AmendacallbackURI_500">
        <soap:fault use="literal" name="PUT_AmendacallbackURI_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateFundsConfirmationConsents">
      <soap:operation soapAction="POST_CreateFundsConfirmationConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateFundsConfirmationConsents_400">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_401">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_403">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_404">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_405">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_406">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_429">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmationConsents_500">
        <soap:fault use="literal" name="POST_CreateFundsConfirmationConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteFundsConfirmationConsentsConsentId">
      <soap:operation soapAction="DELETE_DeleteFundsConfirmationConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_400">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_401">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_403">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_404">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_405">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_406">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_429">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteFundsConfirmationConsentsConsentId_500">
        <soap:fault use="literal" name="DELETE_DeleteFundsConfirmationConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFundsConfirmationConsentsConsentId">
      <soap:operation soapAction="GET_GetFundsConfirmationConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFundsConfirmationConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetFundsConfirmationConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateFundsConfirmations">
      <soap:operation soapAction="POST_CreateFundsConfirmations" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateFundsConfirmations_400">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_401">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_403">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_404">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_405">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_406">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_429">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFundsConfirmations_500">
        <soap:fault use="literal" name="POST_CreateFundsConfirmations_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateEventNotification">
      <soap:operation soapAction="POST_CreateEventNotification" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
    </operation>
    <operation name="GET_GetEventSubscriptions">
      <soap:operation soapAction="GET_GetEventSubscriptions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetEventSubscriptions_400">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_401">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_403">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_404">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_405">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_406">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_429">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetEventSubscriptions_500">
        <soap:fault use="literal" name="GET_GetEventSubscriptions_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateEventSubscriptions">
      <soap:operation soapAction="POST_CreateEventSubscriptions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateEventSubscriptions_400">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_401">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_403">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_404">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_405">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_406">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_429">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEventSubscriptions_500">
        <soap:fault use="literal" name="POST_CreateEventSubscriptions_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteEventSubscriptionsEventSubscriptionId">
      <soap:operation soapAction="DELETE_DeleteEventSubscriptionsEventSubscriptionId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_400">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_401">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_403">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_404">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_405">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_406">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_429">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_500">
        <soap:fault use="literal" name="DELETE_DeleteEventSubscriptionsEventSubscriptionId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_ChangeEventSubscriptionsEventSubscriptionId">
      <soap:operation soapAction="PUT_ChangeEventSubscriptionsEventSubscriptionId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_400">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_401">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_403">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_404">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_405">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_406">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_429">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_ChangeEventSubscriptionsEventSubscriptionId_500">
        <soap:fault use="literal" name="PUT_ChangeEventSubscriptionsEventSubscriptionId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateDomesticPaymentConsents">
      <soap:operation soapAction="POST_CreateDomesticPaymentConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateDomesticPaymentConsents_400">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_401">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_403">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_404">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_405">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_406">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_429">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPaymentConsents_500">
        <soap:fault use="literal" name="POST_CreateDomesticPaymentConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentConsentsConsentId">
      <soap:operation soapAction="GET_GetDomesticPaymentConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation">
      <soap:operation soapAction="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500">
        <soap:fault use="literal" name="GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateDomesticPayments">
      <soap:operation soapAction="POST_CreateDomesticPayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateDomesticPayments_400">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_401">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_403">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_404">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_405">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_406">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_429">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticPayments_500">
        <soap:fault use="literal" name="POST_CreateDomesticPayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentsDomesticPaymentId">
      <soap:operation soapAction="GET_GetDomesticPaymentsDomesticPaymentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_400">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_401">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_403">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_404">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_405">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_406">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_429">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentId_500">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateDomesticScheduledPaymentConsents">
      <soap:operation soapAction="POST_CreateDomesticScheduledPaymentConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_400">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_401">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_403">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_404">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_405">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_406">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_429">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPaymentConsents_500">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPaymentConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticScheduledPaymentConsentsConsentId">
      <soap:operation soapAction="GET_GetDomesticScheduledPaymentConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateDomesticScheduledPayments">
      <soap:operation soapAction="POST_CreateDomesticScheduledPayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateDomesticScheduledPayments_400">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_401">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_403">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_404">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_405">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_406">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_429">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticScheduledPayments_500">
        <soap:fault use="literal" name="POST_CreateDomesticScheduledPayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId">
      <soap:operation soapAction="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateFilePaymentConsents">
      <soap:operation soapAction="POST_CreateFilePaymentConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateFilePaymentConsents_400">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_401">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_403">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_404">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_405">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_406">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_429">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsents_500">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentConsentsConsentId">
      <soap:operation soapAction="GET_GetFilePaymentConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFilePaymentConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentConsentsConsentIdFile">
      <soap:operation soapAction="GET_GetFilePaymentConsentsConsentIdFile" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_400">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_401">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_403">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_404">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_405">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_406">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_429">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentConsentsConsentIdFile_500">
        <soap:fault use="literal" name="GET_GetFilePaymentConsentsConsentIdFile_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateFilePaymentConsentsConsentIdFile">
      <soap:operation soapAction="POST_CreateFilePaymentConsentsConsentIdFile" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_400">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_401">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_403">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_404">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_405">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_406">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_429">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePaymentConsentsConsentIdFile_500">
        <soap:fault use="literal" name="POST_CreateFilePaymentConsentsConsentIdFile_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateFilePayments">
      <soap:operation soapAction="POST_CreateFilePayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateFilePayments_400">
        <soap:fault use="literal" name="POST_CreateFilePayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_401">
        <soap:fault use="literal" name="POST_CreateFilePayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_403">
        <soap:fault use="literal" name="POST_CreateFilePayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_404">
        <soap:fault use="literal" name="POST_CreateFilePayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_405">
        <soap:fault use="literal" name="POST_CreateFilePayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_406">
        <soap:fault use="literal" name="POST_CreateFilePayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_429">
        <soap:fault use="literal" name="POST_CreateFilePayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateFilePayments_500">
        <soap:fault use="literal" name="POST_CreateFilePayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentsFilePaymentId">
      <soap:operation soapAction="GET_GetFilePaymentsFilePaymentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFilePaymentsFilePaymentId_400">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_401">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_403">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_404">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_405">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_406">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_429">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentId_500">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentsFilePaymentIdReportFile">
      <soap:operation soapAction="GET_GetFilePaymentsFilePaymentIdReportFile" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_400">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_401">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_403">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_404">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_405">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_406">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_429">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdReportFile_500">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdReportFile_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateInternationalPaymentConsents">
      <soap:operation soapAction="POST_CreateInternationalPaymentConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateInternationalPaymentConsents_400">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_401">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_403">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_404">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_405">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_406">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_429">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPaymentConsents_500">
        <soap:fault use="literal" name="POST_CreateInternationalPaymentConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentConsentsConsentId">
      <soap:operation soapAction="GET_GetInternationalPaymentConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation">
      <soap:operation soapAction="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500">
        <soap:fault use="literal" name="GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateInternationalPayments">
      <soap:operation soapAction="POST_CreateInternationalPayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateInternationalPayments_400">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_401">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_403">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_404">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_405">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_406">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_429">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalPayments_500">
        <soap:fault use="literal" name="POST_CreateInternationalPayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentsInternationalPaymentId">
      <soap:operation soapAction="GET_GetInternationalPaymentsInternationalPaymentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_400">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_401">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_403">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_404">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_405">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_406">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_429">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentId_500">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateInternationalScheduledPaymentConsents">
      <soap:operation soapAction="POST_CreateInternationalScheduledPaymentConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_400">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_401">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_403">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_404">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_405">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_406">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_429">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPaymentConsents_500">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPaymentConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentConsentsConsentId">
      <soap:operation soapAction="GET_GetInternationalScheduledPaymentConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation">
      <soap:operation soapAction="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateInternationalScheduledPayments">
      <soap:operation soapAction="POST_CreateInternationalScheduledPayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateInternationalScheduledPayments_400">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_401">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_403">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_404">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_405">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_406">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_429">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalScheduledPayments_500">
        <soap:fault use="literal" name="POST_CreateInternationalScheduledPayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId">
      <soap:operation soapAction="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails">
      <soap:operation soapAction="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails">
      <soap:operation soapAction="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails">
      <soap:operation soapAction="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetFilePaymentsFilePaymentIdPaymentDetails">
      <soap:operation soapAction="GET_GetFilePaymentsFilePaymentIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetFilePaymentsFilePaymentIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails">
      <soap:operation soapAction="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails">
      <soap:operation soapAction="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails">
      <soap:operation soapAction="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateEvents">
      <soap:operation soapAction="POST_CreateEvents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateEvents_400">
        <soap:fault use="literal" name="POST_CreateEvents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_401">
        <soap:fault use="literal" name="POST_CreateEvents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_403">
        <soap:fault use="literal" name="POST_CreateEvents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_404">
        <soap:fault use="literal" name="POST_CreateEvents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_405">
        <soap:fault use="literal" name="POST_CreateEvents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_406">
        <soap:fault use="literal" name="POST_CreateEvents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_429">
        <soap:fault use="literal" name="POST_CreateEvents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateEvents_500">
        <soap:fault use="literal" name="POST_CreateEvents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateAccountAccessConsents">
      <soap:operation soapAction="POST_CreateAccountAccessConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateAccountAccessConsents_400">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_401">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_403">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_404">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_405">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_406">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_429">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateAccountAccessConsents_500">
        <soap:fault use="literal" name="POST_CreateAccountAccessConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteAccountAccessConsentsConsentId">
      <soap:operation soapAction="DELETE_DeleteAccountAccessConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_400">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_401">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_403">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_404">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_405">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_406">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_429">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteAccountAccessConsentsConsentId_500">
        <soap:fault use="literal" name="DELETE_DeleteAccountAccessConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountAccessConsentsConsentId">
      <soap:operation soapAction="GET_GetAccountAccessConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountAccessConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountAccessConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetAccountAccessConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdParties">
      <soap:operation soapAction="GET_GetAccountsAccountIdParties" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdParties_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParties_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParties_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdParty">
      <soap:operation soapAction="GET_GetAccountsAccountIdParty" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdParty_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdParty_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdParty_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetParty">
      <soap:operation soapAction="GET_GetParty" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetParty_400">
        <soap:fault use="literal" name="GET_GetParty_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_401">
        <soap:fault use="literal" name="GET_GetParty_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_403">
        <soap:fault use="literal" name="GET_GetParty_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_404">
        <soap:fault use="literal" name="GET_GetParty_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_405">
        <soap:fault use="literal" name="GET_GetParty_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_406">
        <soap:fault use="literal" name="GET_GetParty_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_429">
        <soap:fault use="literal" name="GET_GetParty_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetParty_500">
        <soap:fault use="literal" name="GET_GetParty_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdScheduledPayments">
      <soap:operation soapAction="GET_GetAccountsAccountIdScheduledPayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdScheduledPayments_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdScheduledPayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetScheduledPayments">
      <soap:operation soapAction="GET_GetScheduledPayments" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetScheduledPayments_400">
        <soap:fault use="literal" name="GET_GetScheduledPayments_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_401">
        <soap:fault use="literal" name="GET_GetScheduledPayments_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_403">
        <soap:fault use="literal" name="GET_GetScheduledPayments_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_404">
        <soap:fault use="literal" name="GET_GetScheduledPayments_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_405">
        <soap:fault use="literal" name="GET_GetScheduledPayments_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_406">
        <soap:fault use="literal" name="GET_GetScheduledPayments_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_429">
        <soap:fault use="literal" name="GET_GetScheduledPayments_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetScheduledPayments_500">
        <soap:fault use="literal" name="GET_GetScheduledPayments_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdProduct">
      <soap:operation soapAction="GET_GetAccountsAccountIdProduct" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdProduct_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdProduct_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdProduct_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetProducts">
      <soap:operation soapAction="GET_GetProducts" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetProducts_400">
        <soap:fault use="literal" name="GET_GetProducts_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_401">
        <soap:fault use="literal" name="GET_GetProducts_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_403">
        <soap:fault use="literal" name="GET_GetProducts_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_404">
        <soap:fault use="literal" name="GET_GetProducts_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_405">
        <soap:fault use="literal" name="GET_GetProducts_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_406">
        <soap:fault use="literal" name="GET_GetProducts_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_429">
        <soap:fault use="literal" name="GET_GetProducts_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetProducts_500">
        <soap:fault use="literal" name="GET_GetProducts_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccounts">
      <soap:operation soapAction="GET_GetAccounts" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccounts_400">
        <soap:fault use="literal" name="GET_GetAccounts_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_401">
        <soap:fault use="literal" name="GET_GetAccounts_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_403">
        <soap:fault use="literal" name="GET_GetAccounts_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_404">
        <soap:fault use="literal" name="GET_GetAccounts_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_405">
        <soap:fault use="literal" name="GET_GetAccounts_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_406">
        <soap:fault use="literal" name="GET_GetAccounts_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_429">
        <soap:fault use="literal" name="GET_GetAccounts_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccounts_500">
        <soap:fault use="literal" name="GET_GetAccounts_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountId">
      <soap:operation soapAction="GET_GetAccountsAccountId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountId_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountId_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdBalances">
      <soap:operation soapAction="GET_GetAccountsAccountIdBalances" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdBalances_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBalances_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBalances_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetBalances">
      <soap:operation soapAction="GET_GetBalances" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetBalances_400">
        <soap:fault use="literal" name="GET_GetBalances_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_401">
        <soap:fault use="literal" name="GET_GetBalances_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_403">
        <soap:fault use="literal" name="GET_GetBalances_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_404">
        <soap:fault use="literal" name="GET_GetBalances_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_405">
        <soap:fault use="literal" name="GET_GetBalances_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_406">
        <soap:fault use="literal" name="GET_GetBalances_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_429">
        <soap:fault use="literal" name="GET_GetBalances_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBalances_500">
        <soap:fault use="literal" name="GET_GetBalances_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdBeneficiaries">
      <soap:operation soapAction="GET_GetAccountsAccountIdBeneficiaries" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdBeneficiaries_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdBeneficiaries_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetBeneficiaries">
      <soap:operation soapAction="GET_GetBeneficiaries" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetBeneficiaries_400">
        <soap:fault use="literal" name="GET_GetBeneficiaries_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_401">
        <soap:fault use="literal" name="GET_GetBeneficiaries_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_403">
        <soap:fault use="literal" name="GET_GetBeneficiaries_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_404">
        <soap:fault use="literal" name="GET_GetBeneficiaries_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_405">
        <soap:fault use="literal" name="GET_GetBeneficiaries_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_406">
        <soap:fault use="literal" name="GET_GetBeneficiaries_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_429">
        <soap:fault use="literal" name="GET_GetBeneficiaries_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetBeneficiaries_500">
        <soap:fault use="literal" name="GET_GetBeneficiaries_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatements">
      <soap:operation soapAction="GET_GetAccountsAccountIdStatements" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdStatements_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatements_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatements_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatementsStatementId">
      <soap:operation soapAction="GET_GetAccountsAccountIdStatementsStatementId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementId_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatementsStatementIdFile">
      <soap:operation soapAction="GET_GetAccountsAccountIdStatementsStatementIdFile" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdFile_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdFile_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetStatements">
      <soap:operation soapAction="GET_GetStatements" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetStatements_400">
        <soap:fault use="literal" name="GET_GetStatements_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_401">
        <soap:fault use="literal" name="GET_GetStatements_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_403">
        <soap:fault use="literal" name="GET_GetStatements_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_404">
        <soap:fault use="literal" name="GET_GetStatements_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_405">
        <soap:fault use="literal" name="GET_GetStatements_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_406">
        <soap:fault use="literal" name="GET_GetStatements_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_429">
        <soap:fault use="literal" name="GET_GetStatements_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStatements_500">
        <soap:fault use="literal" name="GET_GetStatements_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStandingOrders">
      <soap:operation soapAction="GET_GetAccountsAccountIdStandingOrders" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdStandingOrders_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStandingOrders_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStandingOrders_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetStandingOrders">
      <soap:operation soapAction="GET_GetStandingOrders" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetStandingOrders_400">
        <soap:fault use="literal" name="GET_GetStandingOrders_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_401">
        <soap:fault use="literal" name="GET_GetStandingOrders_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_403">
        <soap:fault use="literal" name="GET_GetStandingOrders_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_404">
        <soap:fault use="literal" name="GET_GetStandingOrders_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_405">
        <soap:fault use="literal" name="GET_GetStandingOrders_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_406">
        <soap:fault use="literal" name="GET_GetStandingOrders_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_429">
        <soap:fault use="literal" name="GET_GetStandingOrders_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetStandingOrders_500">
        <soap:fault use="literal" name="GET_GetStandingOrders_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdStatementsStatementIdTransactions">
      <soap:operation soapAction="GET_GetAccountsAccountIdStatementsStatementIdTransactions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdStatementsStatementIdTransactions_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdTransactions">
      <soap:operation soapAction="GET_GetAccountsAccountIdTransactions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdTransactions_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdTransactions_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdTransactions_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetTransactions">
      <soap:operation soapAction="GET_GetTransactions" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetTransactions_400">
        <soap:fault use="literal" name="GET_GetTransactions_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_401">
        <soap:fault use="literal" name="GET_GetTransactions_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_403">
        <soap:fault use="literal" name="GET_GetTransactions_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_404">
        <soap:fault use="literal" name="GET_GetTransactions_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_405">
        <soap:fault use="literal" name="GET_GetTransactions_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_406">
        <soap:fault use="literal" name="GET_GetTransactions_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_429">
        <soap:fault use="literal" name="GET_GetTransactions_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetTransactions_500">
        <soap:fault use="literal" name="GET_GetTransactions_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdOffers">
      <soap:operation soapAction="GET_GetAccountsAccountIdOffers" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdOffers_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdOffers_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdOffers_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetOffers">
      <soap:operation soapAction="GET_GetOffers" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetOffers_400">
        <soap:fault use="literal" name="GET_GetOffers_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_401">
        <soap:fault use="literal" name="GET_GetOffers_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_403">
        <soap:fault use="literal" name="GET_GetOffers_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_404">
        <soap:fault use="literal" name="GET_GetOffers_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_405">
        <soap:fault use="literal" name="GET_GetOffers_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_406">
        <soap:fault use="literal" name="GET_GetOffers_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_429">
        <soap:fault use="literal" name="GET_GetOffers_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetOffers_500">
        <soap:fault use="literal" name="GET_GetOffers_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetAccountsAccountIdDirectDebits">
      <soap:operation soapAction="GET_GetAccountsAccountIdDirectDebits" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetAccountsAccountIdDirectDebits_400">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_401">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_403">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_404">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_405">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_406">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_429">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetAccountsAccountIdDirectDebits_500">
        <soap:fault use="literal" name="GET_GetAccountsAccountIdDirectDebits_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDirectDebits">
      <soap:operation soapAction="GET_GetDirectDebits" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDirectDebits_400">
        <soap:fault use="literal" name="GET_GetDirectDebits_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_401">
        <soap:fault use="literal" name="GET_GetDirectDebits_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_403">
        <soap:fault use="literal" name="GET_GetDirectDebits_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_404">
        <soap:fault use="literal" name="GET_GetDirectDebits_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_405">
        <soap:fault use="literal" name="GET_GetDirectDebits_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_406">
        <soap:fault use="literal" name="GET_GetDirectDebits_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_429">
        <soap:fault use="literal" name="GET_GetDirectDebits_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDirectDebits_500">
        <soap:fault use="literal" name="GET_GetDirectDebits_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getcertificatesforthegivensoftwarestatement">
      <soap:operation soapAction="GET_Getcertificatesforthegivensoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_400">
        <soap:fault use="literal" name="GET_Getcertificatesforthegivensoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_401">
        <soap:fault use="literal" name="GET_Getcertificatesforthegivensoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_404">
        <soap:fault use="literal" name="GET_Getcertificatesforthegivensoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_406">
        <soap:fault use="literal" name="GET_Getcertificatesforthegivensoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_500">
        <soap:fault use="literal" name="GET_Getcertificatesforthegivensoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getcertificatesforthegivensoftwarestatement_502">
        <soap:fault use="literal" name="GET_Getcertificatesforthegivensoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement">
      <soap:operation soapAction="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400">
        <soap:fault use="literal" name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401">
        <soap:fault use="literal" name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404">
        <soap:fault use="literal" name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406">
        <soap:fault use="literal" name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500">
        <soap:fault use="literal" name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502">
        <soap:fault use="literal" name="GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement">
      <soap:operation soapAction="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400">
        <soap:fault use="literal" name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401">
        <soap:fault use="literal" name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404">
        <soap:fault use="literal" name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406">
        <soap:fault use="literal" name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500">
        <soap:fault use="literal" name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502">
        <soap:fault use="literal" name="GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement">
      <soap:operation soapAction="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400">
        <soap:fault use="literal" name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401">
        <soap:fault use="literal" name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404">
        <soap:fault use="literal" name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406">
        <soap:fault use="literal" name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500">
        <soap:fault use="literal" name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502">
        <soap:fault use="literal" name="POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_Validatecertificate">
      <soap:operation soapAction="POST_Validatecertificate" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_Validatecertificate_400">
        <soap:fault use="literal" name="POST_Validatecertificate_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Validatecertificate_401">
        <soap:fault use="literal" name="POST_Validatecertificate_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Validatecertificate_404">
        <soap:fault use="literal" name="POST_Validatecertificate_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Validatecertificate_406">
        <soap:fault use="literal" name="POST_Validatecertificate_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Validatecertificate_500">
        <soap:fault use="literal" name="POST_Validatecertificate_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Validatecertificate_502">
        <soap:fault use="literal" name="POST_Validatecertificate_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateDomesticStandingOrderConsents">
      <soap:operation soapAction="POST_CreateDomesticStandingOrderConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateDomesticStandingOrderConsents_400">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_401">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_403">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_404">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_405">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_406">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_429">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrderConsents_500">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrderConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticStandingOrderConsentsConsentId">
      <soap:operation soapAction="GET_GetDomesticStandingOrderConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrderConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrderConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateDomesticStandingOrders">
      <soap:operation soapAction="POST_CreateDomesticStandingOrders" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateDomesticStandingOrders_400">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_401">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_403">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_404">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_405">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_406">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_429">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateDomesticStandingOrders_500">
        <soap:fault use="literal" name="POST_CreateDomesticStandingOrders_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetDomesticStandingOrdersDomesticStandingOrderId">
      <soap:operation soapAction="GET_GetDomesticStandingOrdersDomesticStandingOrderId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_400">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_401">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_403">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_404">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_405">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_406">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_429">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_500">
        <soap:fault use="literal" name="GET_GetDomesticStandingOrdersDomesticStandingOrderId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateInternationalStandingOrderConsents">
      <soap:operation soapAction="POST_CreateInternationalStandingOrderConsents" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateInternationalStandingOrderConsents_400">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_401">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_403">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_404">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_405">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_406">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_429">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrderConsents_500">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrderConsents_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalStandingOrderConsentsConsentId">
      <soap:operation soapAction="GET_GetInternationalStandingOrderConsentsConsentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_400">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_401">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_403">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_404">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_405">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_406">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_429">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrderConsentsConsentId_500">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrderConsentsConsentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateInternationalStandingOrders">
      <soap:operation soapAction="POST_CreateInternationalStandingOrders" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateInternationalStandingOrders_400">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_401">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_403">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_404">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_405">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_406">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_429">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateInternationalStandingOrders_500">
        <soap:fault use="literal" name="POST_CreateInternationalStandingOrders_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId">
      <soap:operation soapAction="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_403" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_405" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_429" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500">
        <soap:fault use="literal" name="GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve">
      <soap:operation soapAction="GET_Getallorganisationsthattheclientisauthorisedtoretrieve" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406">
        <soap:fault use="literal" name="GET_Getallorganisationsthattheclientisauthorisedtoretrieve_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_EnrolaeIDASQWACQSealC-bearingparticipant">
      <soap:operation soapAction="POST_EnrolaeIDASQWACQSealC-bearingparticipant" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_400">
        <soap:fault use="literal" name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_401">
        <soap:fault use="literal" name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_406">
        <soap:fault use="literal" name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_500">
        <soap:fault use="literal" name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_502">
        <soap:fault use="literal" name="POST_EnrolaeIDASQWACQSealC-bearingparticipant_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getthegivenorganisationsdetails">
      <soap:operation soapAction="GET_Getthegivenorganisationsdetails" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getthegivenorganisationsdetails_404">
        <soap:fault use="literal" name="GET_Getthegivenorganisationsdetails_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthegivenorganisationsdetails_406">
        <soap:fault use="literal" name="GET_Getthegivenorganisationsdetails_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetallAuthorisationServersforthegivenorganisation">
      <soap:operation soapAction="GET_GetallAuthorisationServersforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_400">
        <soap:fault use="literal" name="GET_GetallAuthorisationServersforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_401">
        <soap:fault use="literal" name="GET_GetallAuthorisationServersforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_404">
        <soap:fault use="literal" name="GET_GetallAuthorisationServersforthegivenorganisation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_406">
        <soap:fault use="literal" name="GET_GetallAuthorisationServersforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_500">
        <soap:fault use="literal" name="GET_GetallAuthorisationServersforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetallAuthorisationServersforthegivenorganisation_502">
        <soap:fault use="literal" name="GET_GetallAuthorisationServersforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_CreateanAuthorisationServerforthegivenorganisation">
      <soap:operation soapAction="POST_CreateanAuthorisationServerforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_400">
        <soap:fault use="literal" name="POST_CreateanAuthorisationServerforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_401">
        <soap:fault use="literal" name="POST_CreateanAuthorisationServerforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_404">
        <soap:fault use="literal" name="POST_CreateanAuthorisationServerforthegivenorganisation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_406">
        <soap:fault use="literal" name="POST_CreateanAuthorisationServerforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_500">
        <soap:fault use="literal" name="POST_CreateanAuthorisationServerforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_CreateanAuthorisationServerforthegivenorganisation_502">
        <soap:fault use="literal" name="POST_CreateanAuthorisationServerforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_DeleteanAuthorisationServer">
      <soap:operation soapAction="DELETE_DeleteanAuthorisationServer" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_DeleteanAuthorisationServer_400">
        <soap:fault use="literal" name="DELETE_DeleteanAuthorisationServer_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_401">
        <soap:fault use="literal" name="DELETE_DeleteanAuthorisationServer_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_404">
        <soap:fault use="literal" name="DELETE_DeleteanAuthorisationServer_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_406">
        <soap:fault use="literal" name="DELETE_DeleteanAuthorisationServer_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_500">
        <soap:fault use="literal" name="DELETE_DeleteanAuthorisationServer_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_DeleteanAuthorisationServer_502">
        <soap:fault use="literal" name="DELETE_DeleteanAuthorisationServer_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Get.well-knownentity">
      <soap:operation soapAction="GET_Get.well-knownentity" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Get.well-knownentity_400">
        <soap:fault use="literal" name="GET_Get.well-knownentity_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Get.well-knownentity_401">
        <soap:fault use="literal" name="GET_Get.well-knownentity_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Get.well-knownentity_404">
        <soap:fault use="literal" name="GET_Get.well-knownentity_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Get.well-knownentity_406">
        <soap:fault use="literal" name="GET_Get.well-knownentity_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Get.well-knownentity_500">
        <soap:fault use="literal" name="GET_Get.well-knownentity_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Get.well-knownentity_502">
        <soap:fault use="literal" name="GET_Get.well-knownentity_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_Update.well-knownentity">
      <soap:operation soapAction="PUT_Update.well-knownentity" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_Update.well-knownentity_400">
        <soap:fault use="literal" name="PUT_Update.well-knownentity_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Update.well-knownentity_401">
        <soap:fault use="literal" name="PUT_Update.well-knownentity_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Update.well-knownentity_404">
        <soap:fault use="literal" name="PUT_Update.well-knownentity_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Update.well-knownentity_406">
        <soap:fault use="literal" name="PUT_Update.well-knownentity_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Update.well-knownentity_500">
        <soap:fault use="literal" name="PUT_Update.well-knownentity_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Update.well-knownentity_502">
        <soap:fault use="literal" name="PUT_Update.well-knownentity_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getthecertificatesforthegivenorganisation">
      <soap:operation soapAction="GET_Getthecertificatesforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getthecertificatesforthegivenorganisation_400">
        <soap:fault use="literal" name="GET_Getthecertificatesforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_401">
        <soap:fault use="literal" name="GET_Getthecertificatesforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_404">
        <soap:fault use="literal" name="GET_Getthecertificatesforthegivenorganisation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_406">
        <soap:fault use="literal" name="GET_Getthecertificatesforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_500">
        <soap:fault use="literal" name="GET_Getthecertificatesforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthecertificatesforthegivenorganisation_502">
        <soap:fault use="literal" name="GET_Getthecertificatesforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation">
      <soap:operation soapAction="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400">
        <soap:fault use="literal" name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401">
        <soap:fault use="literal" name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404">
        <soap:fault use="literal" name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406">
        <soap:fault use="literal" name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500">
        <soap:fault use="literal" name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502">
        <soap:fault use="literal" name="GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation">
      <soap:operation soapAction="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400">
        <soap:fault use="literal" name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401">
        <soap:fault use="literal" name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404">
        <soap:fault use="literal" name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406">
        <soap:fault use="literal" name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500">
        <soap:fault use="literal" name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502">
        <soap:fault use="literal" name="POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId">
      <soap:operation soapAction="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400">
        <soap:fault use="literal" name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401">
        <soap:fault use="literal" name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404">
        <soap:fault use="literal" name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406">
        <soap:fault use="literal" name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500">
        <soap:fault use="literal" name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502">
        <soap:fault use="literal" name="DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId">
      <soap:operation soapAction="GET_RetrieveacertificatewiththegivenCertificateOrKeyId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400">
        <soap:fault use="literal" name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401">
        <soap:fault use="literal" name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404">
        <soap:fault use="literal" name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406">
        <soap:fault use="literal" name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500">
        <soap:fault use="literal" name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502">
        <soap:fault use="literal" name="GET_RetrieveacertificatewiththegivenCertificateOrKeyId_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation">
      <soap:operation soapAction="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400">
        <soap:fault use="literal" name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401">
        <soap:fault use="literal" name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406">
        <soap:fault use="literal" name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500">
        <soap:fault use="literal" name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502">
        <soap:fault use="literal" name="GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation">
      <soap:operation soapAction="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400">
        <soap:fault use="literal" name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401">
        <soap:fault use="literal" name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406">
        <soap:fault use="literal" name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500">
        <soap:fault use="literal" name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502">
        <soap:fault use="literal" name="PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getallsoftwarestatementsforthegivenorganisation">
      <soap:operation soapAction="GET_Getallsoftwarestatementsforthegivenorganisation" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_400">
        <soap:fault use="literal" name="GET_Getallsoftwarestatementsforthegivenorganisation_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_401">
        <soap:fault use="literal" name="GET_Getallsoftwarestatementsforthegivenorganisation_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_406">
        <soap:fault use="literal" name="GET_Getallsoftwarestatementsforthegivenorganisation_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_500">
        <soap:fault use="literal" name="GET_Getallsoftwarestatementsforthegivenorganisation_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getallsoftwarestatementsforthegivenorganisation_502">
        <soap:fault use="literal" name="GET_Getallsoftwarestatementsforthegivenorganisation_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_Createasoftwarestatement">
      <soap:operation soapAction="POST_Createasoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_Createasoftwarestatement_400">
        <soap:fault use="literal" name="POST_Createasoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Createasoftwarestatement_401">
        <soap:fault use="literal" name="POST_Createasoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Createasoftwarestatement_406">
        <soap:fault use="literal" name="POST_Createasoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Createasoftwarestatement_500">
        <soap:fault use="literal" name="POST_Createasoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_Createasoftwarestatement_502">
        <soap:fault use="literal" name="POST_Createasoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_Getasoftwarestatement">
      <soap:operation soapAction="GET_Getasoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_Getasoftwarestatement_400">
        <soap:fault use="literal" name="GET_Getasoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getasoftwarestatement_401">
        <soap:fault use="literal" name="GET_Getasoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getasoftwarestatement_404">
        <soap:fault use="literal" name="GET_Getasoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getasoftwarestatement_406">
        <soap:fault use="literal" name="GET_Getasoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getasoftwarestatement_500">
        <soap:fault use="literal" name="GET_Getasoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_Getasoftwarestatement_502">
        <soap:fault use="literal" name="GET_Getasoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_Updateasoftwarestatement">
      <soap:operation soapAction="PUT_Updateasoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_Updateasoftwarestatement_400">
        <soap:fault use="literal" name="PUT_Updateasoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updateasoftwarestatement_401">
        <soap:fault use="literal" name="PUT_Updateasoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updateasoftwarestatement_404">
        <soap:fault use="literal" name="PUT_Updateasoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updateasoftwarestatement_406">
        <soap:fault use="literal" name="PUT_Updateasoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updateasoftwarestatement_500">
        <soap:fault use="literal" name="PUT_Updateasoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Updateasoftwarestatement_502">
        <soap:fault use="literal" name="PUT_Updateasoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement">
      <soap:operation soapAction="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502">
        <soap:fault use="literal" name="PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="POST_AddaredirectURItothegivenSoftwareStatement">
      <soap:operation soapAction="POST_AddaredirectURItothegivenSoftwareStatement" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_400">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_401">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_404">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_406">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_409">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_409" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_500">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="POST_AddaredirectURItothegivenSoftwareStatement_502">
        <soap:fault use="literal" name="POST_AddaredirectURItothegivenSoftwareStatement_502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
    <operation name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID.">
      <soap:operation soapAction="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID." xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      <input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </input>
      <output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </output>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400">
        <soap:fault use="literal" name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._400" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401">
        <soap:fault use="literal" name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._401" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404">
        <soap:fault use="literal" name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._404" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406">
        <soap:fault use="literal" name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._406" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500">
        <soap:fault use="literal" name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._500" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
      <fault name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502">
        <soap:fault use="literal" name="GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._502" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
      </fault>
    </operation>
  </binding>
  <binding name="authserver_Binding" xmlns:q2278="http://laegler.com/openbanking/soap/service" type="q2278:authserver_PortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
  </binding>
  <service name="Open_x0020_Banking_x0020_API">
    <documentation>Latest Swagger specification for OpenBanking</documentation>
    <port name="default_Port" xmlns:q2279="http://laegler.com/openbanking/soap/service" binding="q2279:default_Binding">
      <soap:address location="http://laegler.com/openbanking/soap" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
    </port>
    <port name="authserver_Port" xmlns:q2280="http://laegler.com/openbanking/soap/service" binding="q2280:authserver_Binding">
      <soap:address location="http://matls-sso.openbanking.org.uk/as" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" />
    </port>
  </service>
</definitions>