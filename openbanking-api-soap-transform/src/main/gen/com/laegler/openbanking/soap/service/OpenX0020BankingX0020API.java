package com.laegler.openbanking.soap.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * Latest Swagger specification for OpenBanking
 *
 * This class was generated by Apache CXF 3.3.3
 * 2019-10-21T07:01:27.729+13:00
 * Generated source version: 3.3.3
 *
 */
@WebServiceClient(name = "Open_x0020_Banking_x0020_API",
                  wsdlLocation = "file:/Users/thomas/git/openbanking/openbanking-api-soap-transform/src/main/resources/wsdl/swagger-to-soap.wsdl",
                  targetNamespace = "http://laegler.com/openbanking/soap/service")
public class OpenX0020BankingX0020API extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://laegler.com/openbanking/soap/service", "Open_x0020_Banking_x0020_API");
    public final static QName DefaultPort = new QName("http://laegler.com/openbanking/soap/service", "default_Port");
    public final static QName AuthserverPort = new QName("http://laegler.com/openbanking/soap/service", "authserver_Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/thomas/git/openbanking/openbanking-api-soap-transform/src/main/resources/wsdl/swagger-to-soap.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(OpenX0020BankingX0020API.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/thomas/git/openbanking/openbanking-api-soap-transform/src/main/resources/wsdl/swagger-to-soap.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public OpenX0020BankingX0020API(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OpenX0020BankingX0020API(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OpenX0020BankingX0020API() {
        super(WSDL_LOCATION, SERVICE);
    }

    public OpenX0020BankingX0020API(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public OpenX0020BankingX0020API(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public OpenX0020BankingX0020API(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns DefaultPortType
     */
    @WebEndpoint(name = "default_Port")
    public DefaultPortType getDefaultPort() {
        return super.getPort(DefaultPort, DefaultPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DefaultPortType
     */
    @WebEndpoint(name = "default_Port")
    public DefaultPortType getDefaultPort(WebServiceFeature... features) {
        return super.getPort(DefaultPort, DefaultPortType.class, features);
    }


    /**
     *
     * @return
     *     returns AuthserverPortType
     */
    @WebEndpoint(name = "authserver_Port")
    public AuthserverPortType getAuthserverPort() {
        return super.getPort(AuthserverPort, AuthserverPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthserverPortType
     */
    @WebEndpoint(name = "authserver_Port")
    public AuthserverPortType getAuthserverPort(WebServiceFeature... features) {
        return super.getPort(AuthserverPort, AuthserverPortType.class, features);
    }

}
