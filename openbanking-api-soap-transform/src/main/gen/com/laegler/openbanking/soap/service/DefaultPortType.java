package com.laegler.openbanking.soap.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.3.3
 * 2019-10-21T07:01:27.630+13:00
 * Generated source version: 3.3.3
 *
 */
@WebService(targetNamespace = "http://laegler.com/openbanking/soap/service", name = "default_PortType")
@XmlSeeAlso({com.laegler.openbanking.soap.model.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface DefaultPortType {

    /**
     * Create a callback URL
     */
    @WebMethod(operationName = "POST_CreateacallbackURL", action = "POST_CreateacallbackURL")
    @WebResult(name = "POST_CreateacallbackURL_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateacallbackURL_OutputMessage")
    public com.laegler.openbanking.soap.model.OBCallbackUrlResponse1 postCreateacallbackURL(

        @WebParam(partName = "POST_CreateacallbackURL_InputMessage", name = "POST_CreateacallbackURL_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateacallbackURLInputMessage postCreateacallbackURLInputMessage
    ) throws POSTCreateacallbackURL405, POSTCreateacallbackURL406, POSTCreateacallbackURL403, POSTCreateacallbackURL415, POSTCreateacallbackURL401, POSTCreateacallbackURL500, POSTCreateacallbackURL400, POSTCreateacallbackURL429;

    /**
     * Get Accounts
     */
    @WebMethod(operationName = "GET_GetAccountsAccountId", action = "GET_GetAccountsAccountId")
    @WebResult(name = "GET_GetAccountsAccountId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadAccount4 getGetAccountsAccountId(

        @WebParam(partName = "GET_GetAccountsAccountId_InputMessage", name = "GET_GetAccountsAccountId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdInputMessage getGetAccountsAccountIdInputMessage
    ) throws GETGetAccountsAccountId406, GETGetAccountsAccountId429, GETGetAccountsAccountId400, GETGetAccountsAccountId401, GETGetAccountsAccountId500, GETGetAccountsAccountId403, GETGetAccountsAccountId404, GETGetAccountsAccountId405;

    /**
     * Get Standing Orders
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdStandingOrders", action = "GET_GetAccountsAccountIdStandingOrders")
    @WebResult(name = "GET_GetAccountsAccountIdStandingOrders_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdStandingOrders_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadStandingOrder5 getGetAccountsAccountIdStandingOrders(

        @WebParam(partName = "GET_GetAccountsAccountIdStandingOrders_InputMessage", name = "GET_GetAccountsAccountIdStandingOrders_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdStandingOrdersInputMessage getGetAccountsAccountIdStandingOrdersInputMessage
    ) throws GETGetAccountsAccountIdStandingOrders401, GETGetAccountsAccountIdStandingOrders500, GETGetAccountsAccountIdStandingOrders404, GETGetAccountsAccountIdStandingOrders403, GETGetAccountsAccountIdStandingOrders400, GETGetAccountsAccountIdStandingOrders406, GETGetAccountsAccountIdStandingOrders405, GETGetAccountsAccountIdStandingOrders429;

    /**
     * Get certificates for the given software statement
     */
    @WebMethod(operationName = "GET_Getcertificatesforthegivensoftwarestatement", action = "GET_Getcertificatesforthegivensoftwarestatement")
    @WebResult(name = "GET_Getcertificatesforthegivensoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getcertificatesforthegivensoftwarestatement_OutputMessage")
    public java.lang.Object getGetcertificatesforthegivensoftwarestatement(

        @WebParam(partName = "GET_Getcertificatesforthegivensoftwarestatement_InputMessage", name = "GET_Getcertificatesforthegivensoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetcertificatesforthegivensoftwarestatementInputMessage getGetcertificatesforthegivensoftwarestatementInputMessage
    ) throws GETGetcertificatesforthegivensoftwarestatement400, GETGetcertificatesforthegivensoftwarestatement401, GETGetcertificatesforthegivensoftwarestatement500, GETGetcertificatesforthegivensoftwarestatement502, GETGetcertificatesforthegivensoftwarestatement404, GETGetcertificatesforthegivensoftwarestatement406;

    /**
     * Get Domestic Scheduled Payments
     */
    @WebMethod(operationName = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId", action = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId")
    @WebResult(name = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticScheduledResponse3 getGetDomesticScheduledPaymentsDomesticScheduledPaymentId(

        @WebParam(partName = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage", name = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdInputMessage getGetDomesticScheduledPaymentsDomesticScheduledPaymentIdInputMessage
    ) throws GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId401, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId500, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId400, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId429, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId406, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId405, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId404, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentId403;

    /**
     * Get Statements
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdStatementsStatementId", action = "GET_GetAccountsAccountIdStatementsStatementId")
    @WebResult(name = "GET_GetAccountsAccountIdStatementsStatementId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdStatementsStatementId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadStatement1 getGetAccountsAccountIdStatementsStatementId(

        @WebParam(partName = "GET_GetAccountsAccountIdStatementsStatementId_InputMessage", name = "GET_GetAccountsAccountIdStatementsStatementId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdStatementsStatementIdInputMessage getGetAccountsAccountIdStatementsStatementIdInputMessage
    ) throws GETGetAccountsAccountIdStatementsStatementId401, GETGetAccountsAccountIdStatementsStatementId500, GETGetAccountsAccountIdStatementsStatementId400, GETGetAccountsAccountIdStatementsStatementId403, GETGetAccountsAccountIdStatementsStatementId405, GETGetAccountsAccountIdStatementsStatementId404, GETGetAccountsAccountIdStatementsStatementId429, GETGetAccountsAccountIdStatementsStatementId406;

    /**
     * Create Domestic Standing Orders
     */
    @WebMethod(operationName = "POST_CreateDomesticStandingOrders", action = "POST_CreateDomesticStandingOrders")
    @WebResult(name = "POST_CreateDomesticStandingOrders_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateDomesticStandingOrders_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticStandingOrderResponse4 postCreateDomesticStandingOrders(

        @WebParam(partName = "POST_CreateDomesticStandingOrders_InputMessage", name = "POST_CreateDomesticStandingOrders_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateDomesticStandingOrdersInputMessage postCreateDomesticStandingOrdersInputMessage
    ) throws POSTCreateDomesticStandingOrders429, POSTCreateDomesticStandingOrders406, POSTCreateDomesticStandingOrders405, POSTCreateDomesticStandingOrders404, POSTCreateDomesticStandingOrders403, POSTCreateDomesticStandingOrders401, POSTCreateDomesticStandingOrders500, POSTCreateDomesticStandingOrders400;

    /**
     * Get Beneficiaries
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdBeneficiaries", action = "GET_GetAccountsAccountIdBeneficiaries")
    @WebResult(name = "GET_GetAccountsAccountIdBeneficiaries_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdBeneficiaries_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadBeneficiary3 getGetAccountsAccountIdBeneficiaries(

        @WebParam(partName = "GET_GetAccountsAccountIdBeneficiaries_InputMessage", name = "GET_GetAccountsAccountIdBeneficiaries_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdBeneficiariesInputMessage getGetAccountsAccountIdBeneficiariesInputMessage
    ) throws GETGetAccountsAccountIdBeneficiaries403, GETGetAccountsAccountIdBeneficiaries404, GETGetAccountsAccountIdBeneficiaries401, GETGetAccountsAccountIdBeneficiaries500, GETGetAccountsAccountIdBeneficiaries400, GETGetAccountsAccountIdBeneficiaries429, GETGetAccountsAccountIdBeneficiaries405, GETGetAccountsAccountIdBeneficiaries406;

    /**
     * Search for one or more resources
     */
    @WebMethod(operationName = "OBAuthorities_GET_Searchforoneormoreresources", action = "OBAuthorities_GET_Searchforoneormoreresources")
    @WebResult(name = "OBAuthorities_GET_Searchforoneormoreresources_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBAuthorities_GET_Searchforoneormoreresources_OutputMessage")
    public com.laegler.openbanking.soap.model.SearchforoneormoreresourcesResponse obAuthoritiesGETSearchforoneormoreresources(

        @WebParam(partName = "OBAuthorities_GET_Searchforoneormoreresources_InputMessage", name = "OBAuthorities_GET_Searchforoneormoreresources_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBAuthoritiesGETSearchforoneormoreresourcesInputMessage obAuthoritiesGETSearchforoneormoreresourcesInputMessage
    ) throws OBAuthoritiesGETSearchforoneormoreresourcesDefault;

    /**
     * Retrieve the resource
     */
    @WebMethod(operationName = "GET_Retrievetheresource", action = "GET_Retrievetheresource")
    @WebResult(name = "GET_Retrievetheresource_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Retrievetheresource_OutputMessage")
    public com.laegler.openbanking.soap.model.OBThirdPartyProviders getRetrievetheresource(

        @WebParam(partName = "GET_Retrievetheresource_InputMessage", name = "GET_Retrievetheresource_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETRetrievetheresourceInputMessage getRetrievetheresourceInputMessage
    ) throws GETRetrievetheresourceDefault;

    /**
     * Delete a client by way of Client ID
     */
    @WebMethod(operationName = "DELETE_DeleteaclientbywayofClientID", action = "DELETE_DeleteaclientbywayofClientID")
    @WebResult(name = "DELETE_DeleteaclientbywayofClientID_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_DeleteaclientbywayofClientID_OutputMessage")
    public java.lang.Object deleteDeleteaclientbywayofClientID(

        @WebParam(partName = "DELETE_DeleteaclientbywayofClientID_InputMessage", name = "DELETE_DeleteaclientbywayofClientID_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETEDeleteaclientbywayofClientIDInputMessage deleteDeleteaclientbywayofClientIDInputMessage
    ) throws DELETEDeleteaclientbywayofClientID401, DELETEDeleteaclientbywayofClientID405, DELETEDeleteaclientbywayofClientID403;

    /**
     * Create International Scheduled Payments
     */
    @WebMethod(operationName = "POST_CreateInternationalScheduledPayments", action = "POST_CreateInternationalScheduledPayments")
    @WebResult(name = "POST_CreateInternationalScheduledPayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateInternationalScheduledPayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalScheduledResponse3 postCreateInternationalScheduledPayments(

        @WebParam(partName = "POST_CreateInternationalScheduledPayments_InputMessage", name = "POST_CreateInternationalScheduledPayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateInternationalScheduledPaymentsInputMessage postCreateInternationalScheduledPaymentsInputMessage
    ) throws POSTCreateInternationalScheduledPayments405, POSTCreateInternationalScheduledPayments404, POSTCreateInternationalScheduledPayments429, POSTCreateInternationalScheduledPayments406, POSTCreateInternationalScheduledPayments401, POSTCreateInternationalScheduledPayments500, POSTCreateInternationalScheduledPayments400, POSTCreateInternationalScheduledPayments403;

    /**
     * Get Standing Orders
     */
    @WebMethod(operationName = "GET_GetStandingOrders", action = "GET_GetStandingOrders")
    @WebResult(name = "GET_GetStandingOrders_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetStandingOrders_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadStandingOrder5 getGetStandingOrders(

        @WebParam(partName = "GET_GetStandingOrders_InputMessage", name = "GET_GetStandingOrders_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetStandingOrdersInputMessage getGetStandingOrdersInputMessage
    ) throws GETGetStandingOrders400, GETGetStandingOrders404, GETGetStandingOrders403, GETGetStandingOrders401, GETGetStandingOrders500, GETGetStandingOrders429, GETGetStandingOrders406, GETGetStandingOrders405;

    /**
     * Get .well-known entity
     */
    @WebMethod(operationName = "GET_Get.well-knownentity", action = "GET_Get.well-knownentity")
    @WebResult(name = "GET_Get.well-knownentity_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Get.well-knownentity_OutputMessage")
    public java.lang.Object getGetWellKnownentity(

        @WebParam(partName = "GET_Get.well-knownentity_InputMessage", name = "GET_Get.well-knownentity_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetWellKnownentityInputMessage getGetWellKnownentityInputMessage
    ) throws GETGetWellKnownentity400, GETGetWellKnownentity401, GETGetWellKnownentity500, GETGetWellKnownentity404, GETGetWellKnownentity502, GETGetWellKnownentity406;

    /**
     * Get Account Access Consents
     */
    @WebMethod(operationName = "GET_GetAccountAccessConsentsConsentId", action = "GET_GetAccountAccessConsentsConsentId")
    @WebResult(name = "GET_GetAccountAccessConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountAccessConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadConsentResponse1 getGetAccountAccessConsentsConsentId(

        @WebParam(partName = "GET_GetAccountAccessConsentsConsentId_InputMessage", name = "GET_GetAccountAccessConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountAccessConsentsConsentIdInputMessage getGetAccountAccessConsentsConsentIdInputMessage
    ) throws GETGetAccountAccessConsentsConsentId429, GETGetAccountAccessConsentsConsentId405, GETGetAccountAccessConsentsConsentId406, GETGetAccountAccessConsentsConsentId403, GETGetAccountAccessConsentsConsentId404, GETGetAccountAccessConsentsConsentId401, GETGetAccountAccessConsentsConsentId500, GETGetAccountAccessConsentsConsentId400;

    /**
     * Get Beneficiaries
     */
    @WebMethod(operationName = "GET_GetBeneficiaries", action = "GET_GetBeneficiaries")
    @WebResult(name = "GET_GetBeneficiaries_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetBeneficiaries_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadBeneficiary3 getGetBeneficiaries(

        @WebParam(partName = "GET_GetBeneficiaries_InputMessage", name = "GET_GetBeneficiaries_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetBeneficiariesInputMessage getGetBeneficiariesInputMessage
    ) throws GETGetBeneficiaries406, GETGetBeneficiaries405, GETGetBeneficiaries429, GETGetBeneficiaries401, GETGetBeneficiaries500, GETGetBeneficiaries404, GETGetBeneficiaries403, GETGetBeneficiaries400;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails", action = "GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails")
    @WebResult(name = "GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetDomesticPaymentsDomesticPaymentIdPaymentDetails(

        @WebParam(partName = "GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage", name = "GET_GetDomesticPaymentsDomesticPaymentIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticPaymentsDomesticPaymentIdPaymentDetailsInputMessage getGetDomesticPaymentsDomesticPaymentIdPaymentDetailsInputMessage
    ) throws GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails403, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails401, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails500, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails400, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails429, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails406, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails405, GETGetDomesticPaymentsDomesticPaymentIdPaymentDetails404;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails", action = "GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails")
    @WebResult(name = "GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails(

        @WebParam(partName = "GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage", name = "GET_GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsInputMessage getGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsInputMessage
    ) throws GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails405, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails404, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails429, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails406, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails401, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails500, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails400, GETGetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails403;

    /**
     * Change Event Subscription
     */
    @WebMethod(operationName = "PUT_ChangeEventSubscriptionsEventSubscriptionId", action = "PUT_ChangeEventSubscriptionsEventSubscriptionId")
    @WebResult(name = "PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_ChangeEventSubscriptionsEventSubscriptionId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBEventSubscriptionResponse1 putChangeEventSubscriptionsEventSubscriptionId(

        @WebParam(partName = "PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage", name = "PUT_ChangeEventSubscriptionsEventSubscriptionId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTChangeEventSubscriptionsEventSubscriptionIdInputMessage putChangeEventSubscriptionsEventSubscriptionIdInputMessage
    ) throws PUTChangeEventSubscriptionsEventSubscriptionId429, PUTChangeEventSubscriptionsEventSubscriptionId405, PUTChangeEventSubscriptionsEventSubscriptionId406, PUTChangeEventSubscriptionsEventSubscriptionId403, PUTChangeEventSubscriptionsEventSubscriptionId404, PUTChangeEventSubscriptionsEventSubscriptionId401, PUTChangeEventSubscriptionsEventSubscriptionId500, PUTChangeEventSubscriptionsEventSubscriptionId400;

    /**
     * Get File Payment Consents
     */
    @WebMethod(operationName = "GET_GetFilePaymentConsentsConsentIdFile", action = "GET_GetFilePaymentConsentsConsentIdFile")
    @WebResult(name = "GET_GetFilePaymentConsentsConsentIdFile_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetFilePaymentConsentsConsentIdFile_OutputMessage")
    public java.lang.Object getGetFilePaymentConsentsConsentIdFile(

        @WebParam(partName = "GET_GetFilePaymentConsentsConsentIdFile_InputMessage", name = "GET_GetFilePaymentConsentsConsentIdFile_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetFilePaymentConsentsConsentIdFileInputMessage getGetFilePaymentConsentsConsentIdFileInputMessage
    ) throws GETGetFilePaymentConsentsConsentIdFile400, GETGetFilePaymentConsentsConsentIdFile401, GETGetFilePaymentConsentsConsentIdFile500, GETGetFilePaymentConsentsConsentIdFile403, GETGetFilePaymentConsentsConsentIdFile404, GETGetFilePaymentConsentsConsentIdFile405, GETGetFilePaymentConsentsConsentIdFile406, GETGetFilePaymentConsentsConsentIdFile429;

    /**
     * Get Event Subscription
     */
    @WebMethod(operationName = "GET_GetEventSubscriptions", action = "GET_GetEventSubscriptions")
    @WebResult(name = "GET_GetEventSubscriptions_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetEventSubscriptions_OutputMessage")
    public com.laegler.openbanking.soap.model.OBEventSubscriptionsResponse1 getGetEventSubscriptions(

        @WebParam(partName = "GET_GetEventSubscriptions_InputMessage", name = "GET_GetEventSubscriptions_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetEventSubscriptionsInputMessage getGetEventSubscriptionsInputMessage
    ) throws GETGetEventSubscriptions401, GETGetEventSubscriptions500, GETGetEventSubscriptions400, GETGetEventSubscriptions405, GETGetEventSubscriptions404, GETGetEventSubscriptions403, GETGetEventSubscriptions429, GETGetEventSubscriptions406;

    /**
     * Create File Payments
     */
    @WebMethod(operationName = "POST_CreateFilePayments", action = "POST_CreateFilePayments")
    @WebResult(name = "POST_CreateFilePayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateFilePayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFileResponse2 postCreateFilePayments(

        @WebParam(partName = "POST_CreateFilePayments_InputMessage", name = "POST_CreateFilePayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateFilePaymentsInputMessage postCreateFilePaymentsInputMessage
    ) throws POSTCreateFilePayments405, POSTCreateFilePayments406, POSTCreateFilePayments403, POSTCreateFilePayments404, POSTCreateFilePayments401, POSTCreateFilePayments500, POSTCreateFilePayments400, POSTCreateFilePayments429;

    /**
     * Gets a list of all `Unsercured SME Lending` objects.
     */
    @WebMethod(operationName = "GET_UnsecuredSmeLoans_GET", action = "GET_UnsecuredSmeLoans_GET")
    @WebResult(name = "GET_UnsecuredSmeLoans_GET_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_UnsecuredSmeLoans_GET_OutputMessage")
    public com.laegler.openbanking.soap.model.UnsecuredSMELendingResponse getUnsecuredSmeLoansGET(

        @WebParam(partName = "GET_UnsecuredSmeLoans_GET_InputMessage", name = "GET_UnsecuredSmeLoans_GET_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETUnsecuredSmeLoansGETInputMessage getUnsecuredSmeLoansGETInputMessage
    ) throws GETUnsecuredSmeLoansGET500, GETUnsecuredSmeLoansGET503, GETUnsecuredSmeLoansGETDefault, GETUnsecuredSmeLoansGET408, GETUnsecuredSmeLoansGET429, GETUnsecuredSmeLoansGET400;

    /**
     * Update a client by way of Client ID
     */
    @WebMethod(operationName = "PUT_UpdateaclientbywayofClientID", action = "PUT_UpdateaclientbywayofClientID")
    @WebResult(name = "PUT_UpdateaclientbywayofClientID_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_UpdateaclientbywayofClientID_OutputMessage")
    public com.laegler.openbanking.soap.model.UpdateaclientbywayofClientIDResponse putUpdateaclientbywayofClientID(

        @WebParam(partName = "PUT_UpdateaclientbywayofClientID_InputMessage", name = "PUT_UpdateaclientbywayofClientID_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTUpdateaclientbywayofClientIDInputMessage putUpdateaclientbywayofClientIDInputMessage
    ) throws PUTUpdateaclientbywayofClientID403, PUTUpdateaclientbywayofClientID401, PUTUpdateaclientbywayofClientID400;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails", action = "GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails")
    @WebResult(name = "GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetInternationalPaymentsInternationalPaymentIdPaymentDetails(

        @WebParam(partName = "GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage", name = "GET_GetInternationalPaymentsInternationalPaymentIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalPaymentsInternationalPaymentIdPaymentDetailsInputMessage getGetInternationalPaymentsInternationalPaymentIdPaymentDetailsInputMessage
    ) throws GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails429, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails406, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails401, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails500, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails400, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails403, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails405, GETGetInternationalPaymentsInternationalPaymentIdPaymentDetails404;

    /**
     * Create a software statement
     */
    @WebMethod(operationName = "POST_Createasoftwarestatement", action = "POST_Createasoftwarestatement")
    @WebResult(name = "POST_Createasoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_Createasoftwarestatement_OutputMessage")
    public java.lang.Object postCreateasoftwarestatement(

        @WebParam(partName = "POST_Createasoftwarestatement_InputMessage", name = "POST_Createasoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateasoftwarestatementInputMessage postCreateasoftwarestatementInputMessage
    ) throws POSTCreateasoftwarestatement406, POSTCreateasoftwarestatement400, POSTCreateasoftwarestatement401, POSTCreateasoftwarestatement500, POSTCreateasoftwarestatement502;

    /**
     * Create International Payment Consents
     */
    @WebMethod(operationName = "POST_CreateInternationalPaymentConsents", action = "POST_CreateInternationalPaymentConsents")
    @WebResult(name = "POST_CreateInternationalPaymentConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateInternationalPaymentConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalConsentResponse3 postCreateInternationalPaymentConsents(

        @WebParam(partName = "POST_CreateInternationalPaymentConsents_InputMessage", name = "POST_CreateInternationalPaymentConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateInternationalPaymentConsentsInputMessage postCreateInternationalPaymentConsentsInputMessage
    ) throws POSTCreateInternationalPaymentConsents401, POSTCreateInternationalPaymentConsents500, POSTCreateInternationalPaymentConsents400, POSTCreateInternationalPaymentConsents406, POSTCreateInternationalPaymentConsents405, POSTCreateInternationalPaymentConsents404, POSTCreateInternationalPaymentConsents403, POSTCreateInternationalPaymentConsents429;

    /**
     * Gets a list of all `Personal Current Account` objects.
     */
    @WebMethod(operationName = "GET_PersonalCurrentAccounts_GET", action = "GET_PersonalCurrentAccounts_GET")
    @WebResult(name = "GET_PersonalCurrentAccounts_GET_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_PersonalCurrentAccounts_GET_OutputMessage")
    public com.laegler.openbanking.soap.model.PersonalCurrentAccountResponse getPersonalCurrentAccountsGET(

        @WebParam(partName = "GET_PersonalCurrentAccounts_GET_InputMessage", name = "GET_PersonalCurrentAccounts_GET_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETPersonalCurrentAccountsGETInputMessage getPersonalCurrentAccountsGETInputMessage
    ) throws GETPersonalCurrentAccountsGET500, GETPersonalCurrentAccountsGET400, GETPersonalCurrentAccountsGETDefault, GETPersonalCurrentAccountsGET503, GETPersonalCurrentAccountsGET408, GETPersonalCurrentAccountsGET429;

    /**
     * Get Parties
     */
    @WebMethod(operationName = "GET_GetParty", action = "GET_GetParty")
    @WebResult(name = "GET_GetParty_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetParty_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadParty2 getGetParty(

        @WebParam(partName = "GET_GetParty_InputMessage", name = "GET_GetParty_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetPartyInputMessage getGetPartyInputMessage
    ) throws GETGetParty406, GETGetParty429, GETGetParty404, GETGetParty405, GETGetParty403, GETGetParty400, GETGetParty401, GETGetParty500;

    /**
     * Create International Standing Orders
     */
    @WebMethod(operationName = "POST_CreateInternationalStandingOrders", action = "POST_CreateInternationalStandingOrders")
    @WebResult(name = "POST_CreateInternationalStandingOrders_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateInternationalStandingOrders_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalStandingOrderResponse4 postCreateInternationalStandingOrders(

        @WebParam(partName = "POST_CreateInternationalStandingOrders_InputMessage", name = "POST_CreateInternationalStandingOrders_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateInternationalStandingOrdersInputMessage postCreateInternationalStandingOrdersInputMessage
    ) throws POSTCreateInternationalStandingOrders429, POSTCreateInternationalStandingOrders404, POSTCreateInternationalStandingOrders403, POSTCreateInternationalStandingOrders406, POSTCreateInternationalStandingOrders405, POSTCreateInternationalStandingOrders400, POSTCreateInternationalStandingOrders401, POSTCreateInternationalStandingOrders500;

    /**
     * Get all software statements for the given organisation
     */
    @WebMethod(operationName = "GET_Getallsoftwarestatementsforthegivenorganisation", action = "GET_Getallsoftwarestatementsforthegivenorganisation")
    @WebResult(name = "GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getallsoftwarestatementsforthegivenorganisation_OutputMessage")
    public java.lang.Object getGetallsoftwarestatementsforthegivenorganisation(

        @WebParam(partName = "GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage", name = "GET_Getallsoftwarestatementsforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetallsoftwarestatementsforthegivenorganisationInputMessage getGetallsoftwarestatementsforthegivenorganisationInputMessage
    ) throws GETGetallsoftwarestatementsforthegivenorganisation401, GETGetallsoftwarestatementsforthegivenorganisation500, GETGetallsoftwarestatementsforthegivenorganisation400, GETGetallsoftwarestatementsforthegivenorganisation406, GETGetallsoftwarestatementsforthegivenorganisation502;

    /**
     * Get File Payments
     */
    @WebMethod(operationName = "GET_GetFilePaymentsFilePaymentIdReportFile", action = "GET_GetFilePaymentsFilePaymentIdReportFile")
    @WebResult(name = "GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetFilePaymentsFilePaymentIdReportFile_OutputMessage")
    public java.lang.Object getGetFilePaymentsFilePaymentIdReportFile(

        @WebParam(partName = "GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage", name = "GET_GetFilePaymentsFilePaymentIdReportFile_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetFilePaymentsFilePaymentIdReportFileInputMessage getGetFilePaymentsFilePaymentIdReportFileInputMessage
    ) throws GETGetFilePaymentsFilePaymentIdReportFile429, GETGetFilePaymentsFilePaymentIdReportFile406, GETGetFilePaymentsFilePaymentIdReportFile405, GETGetFilePaymentsFilePaymentIdReportFile404, GETGetFilePaymentsFilePaymentIdReportFile403, GETGetFilePaymentsFilePaymentIdReportFile401, GETGetFilePaymentsFilePaymentIdReportFile500, GETGetFilePaymentsFilePaymentIdReportFile400;

    /**
     * Gets a list of all `Branch Current Account` objects.
     */
    @WebMethod(operationName = "GET_BusinessCurrentAccounts_GET", action = "GET_BusinessCurrentAccounts_GET")
    @WebResult(name = "GET_BusinessCurrentAccounts_GET_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_BusinessCurrentAccounts_GET_OutputMessage")
    public com.laegler.openbanking.soap.model.BranchCurrentAccountResponse getBusinessCurrentAccountsGET(

        @WebParam(partName = "GET_BusinessCurrentAccounts_GET_InputMessage", name = "GET_BusinessCurrentAccounts_GET_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETBusinessCurrentAccountsGETInputMessage getBusinessCurrentAccountsGETInputMessage
    ) throws GETBusinessCurrentAccountsGETDefault, GETBusinessCurrentAccountsGET503, GETBusinessCurrentAccountsGET400, GETBusinessCurrentAccountsGET500, GETBusinessCurrentAccountsGET429, GETBusinessCurrentAccountsGET408;

    /**
     * Get the certificates of the given type for the given software statement
     */
    @WebMethod(operationName = "GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement", action = "GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement")
    @WebResult(name = "GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_OutputMessage")
    public java.lang.Object getGetthecertificatesofthegiventypeforthegivensoftwarestatement(

        @WebParam(partName = "GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage", name = "GET_Getthecertificatesofthegiventypeforthegivensoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetthecertificatesofthegiventypeforthegivensoftwarestatementInputMessage getGetthecertificatesofthegiventypeforthegivensoftwarestatementInputMessage
    ) throws GETGetthecertificatesofthegiventypeforthegivensoftwarestatement406, GETGetthecertificatesofthegiventypeforthegivensoftwarestatement404, GETGetthecertificatesofthegiventypeforthegivensoftwarestatement502, GETGetthecertificatesofthegiventypeforthegivensoftwarestatement401, GETGetthecertificatesofthegiventypeforthegivensoftwarestatement500, GETGetthecertificatesofthegiventypeforthegivensoftwarestatement400;

    /**
     * Get a software statement
     */
    @WebMethod(operationName = "GET_Getasoftwarestatement", action = "GET_Getasoftwarestatement")
    @WebResult(name = "GET_Getasoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getasoftwarestatement_OutputMessage")
    public java.lang.Object getGetasoftwarestatement(

        @WebParam(partName = "GET_Getasoftwarestatement_InputMessage", name = "GET_Getasoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetasoftwarestatementInputMessage getGetasoftwarestatementInputMessage
    ) throws GETGetasoftwarestatement401, GETGetasoftwarestatement500, GETGetasoftwarestatement400, GETGetasoftwarestatement406, GETGetasoftwarestatement502, GETGetasoftwarestatement404;

    /**
     * Retrieve the resource
     */
    @WebMethod(operationName = "OBAccountPaymentServiceProviders_GET_Retrievetheresource", action = "OBAccountPaymentServiceProviders_GET_Retrievetheresource")
    @WebResult(name = "OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBAccountPaymentServiceProviders_GET_Retrievetheresource_OutputMessage")
    public com.laegler.openbanking.soap.model.OBAccountPaymentServiceProviders obAccountPaymentServiceProvidersGETRetrievetheresource(

        @WebParam(partName = "OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage", name = "OBAccountPaymentServiceProviders_GET_Retrievetheresource_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBAccountPaymentServiceProvidersGETRetrievetheresourceInputMessage obAccountPaymentServiceProvidersGETRetrievetheresourceInputMessage
    ) throws OBAccountPaymentServiceProvidersGETRetrievetheresourceDefault;

    /**
     * Useful for executing searches without passing parameters that may contain sensitive information on the URL.
     */
    @WebMethod(operationName = "OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST", action = "OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST")
    @WebResult(name = "OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage")
    public com.laegler.openbanking.soap.model.SearchforoneormoreresourcesusingHTTPPOSTResponse2 obQualifiedTrustServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOST(

        @WebParam(partName = "OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", name = "OBQualifiedTrustServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBQualifiedTrustServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage obQualifiedTrustServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage
    ) throws OBQualifiedTrustServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOSTDefault;

    /**
     * Get Domestic Payment Consents
     */
    @WebMethod(operationName = "GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation", action = "GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation")
    @WebResult(name = "GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFundsConfirmationResponse1 getGetDomesticPaymentConsentsConsentIdFundsConfirmation(

        @WebParam(partName = "GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage", name = "GET_GetDomesticPaymentConsentsConsentIdFundsConfirmation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticPaymentConsentsConsentIdFundsConfirmationInputMessage getGetDomesticPaymentConsentsConsentIdFundsConfirmationInputMessage
    ) throws GETGetDomesticPaymentConsentsConsentIdFundsConfirmation400, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation429, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation405, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation406, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation403, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation404, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation401, GETGetDomesticPaymentConsentsConsentIdFundsConfirmation500;

    /**
     * Delete an Authorisation Server
     */
    @WebMethod(operationName = "DELETE_DeleteanAuthorisationServer", action = "DELETE_DeleteanAuthorisationServer")
    @WebResult(name = "DELETE_DeleteanAuthorisationServer_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_DeleteanAuthorisationServer_OutputMessage")
    public java.lang.Object deleteDeleteanAuthorisationServer(

        @WebParam(partName = "DELETE_DeleteanAuthorisationServer_InputMessage", name = "DELETE_DeleteanAuthorisationServer_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETEDeleteanAuthorisationServerInputMessage deleteDeleteanAuthorisationServerInputMessage
    ) throws DELETEDeleteanAuthorisationServer404, DELETEDeleteanAuthorisationServer406, DELETEDeleteanAuthorisationServer401, DELETEDeleteanAuthorisationServer500, DELETEDeleteanAuthorisationServer400, DELETEDeleteanAuthorisationServer502;

    /**
     * Create International Payments
     */
    @WebMethod(operationName = "POST_CreateInternationalPayments", action = "POST_CreateInternationalPayments")
    @WebResult(name = "POST_CreateInternationalPayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateInternationalPayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalResponse3 postCreateInternationalPayments(

        @WebParam(partName = "POST_CreateInternationalPayments_InputMessage", name = "POST_CreateInternationalPayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateInternationalPaymentsInputMessage postCreateInternationalPaymentsInputMessage
    ) throws POSTCreateInternationalPayments401, POSTCreateInternationalPayments500, POSTCreateInternationalPayments400, POSTCreateInternationalPayments406, POSTCreateInternationalPayments405, POSTCreateInternationalPayments404, POSTCreateInternationalPayments403, POSTCreateInternationalPayments429;

    /**
     * Retrieve a certificate with the given CertificateOrKeyId
     */
    @WebMethod(operationName = "GET_RetrieveacertificatewiththegivenCertificateOrKeyId", action = "GET_RetrieveacertificatewiththegivenCertificateOrKeyId")
    @WebResult(name = "GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_RetrieveacertificatewiththegivenCertificateOrKeyId_OutputMessage")
    public java.lang.Object getRetrieveacertificatewiththegivenCertificateOrKeyId(

        @WebParam(partName = "GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage", name = "GET_RetrieveacertificatewiththegivenCertificateOrKeyId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETRetrieveacertificatewiththegivenCertificateOrKeyIdInputMessage getRetrieveacertificatewiththegivenCertificateOrKeyIdInputMessage
    ) throws GETRetrieveacertificatewiththegivenCertificateOrKeyId404, GETRetrieveacertificatewiththegivenCertificateOrKeyId502, GETRetrieveacertificatewiththegivenCertificateOrKeyId401, GETRetrieveacertificatewiththegivenCertificateOrKeyId500, GETRetrieveacertificatewiththegivenCertificateOrKeyId400, GETRetrieveacertificatewiththegivenCertificateOrKeyId406;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetFilePaymentsFilePaymentIdPaymentDetails", action = "GET_GetFilePaymentsFilePaymentIdPaymentDetails")
    @WebResult(name = "GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetFilePaymentsFilePaymentIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetFilePaymentsFilePaymentIdPaymentDetails(

        @WebParam(partName = "GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage", name = "GET_GetFilePaymentsFilePaymentIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetFilePaymentsFilePaymentIdPaymentDetailsInputMessage getGetFilePaymentsFilePaymentIdPaymentDetailsInputMessage
    ) throws GETGetFilePaymentsFilePaymentIdPaymentDetails405, GETGetFilePaymentsFilePaymentIdPaymentDetails404, GETGetFilePaymentsFilePaymentIdPaymentDetails429, GETGetFilePaymentsFilePaymentIdPaymentDetails406, GETGetFilePaymentsFilePaymentIdPaymentDetails401, GETGetFilePaymentsFilePaymentIdPaymentDetails500, GETGetFilePaymentsFilePaymentIdPaymentDetails400, GETGetFilePaymentsFilePaymentIdPaymentDetails403;

    /**
     * Get International Standing Order Consents
     */
    @WebMethod(operationName = "GET_GetInternationalStandingOrderConsentsConsentId", action = "GET_GetInternationalStandingOrderConsentsConsentId")
    @WebResult(name = "GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalStandingOrderConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalStandingOrderConsentResponse4 getGetInternationalStandingOrderConsentsConsentId(

        @WebParam(partName = "GET_GetInternationalStandingOrderConsentsConsentId_InputMessage", name = "GET_GetInternationalStandingOrderConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalStandingOrderConsentsConsentIdInputMessage getGetInternationalStandingOrderConsentsConsentIdInputMessage
    ) throws GETGetInternationalStandingOrderConsentsConsentId403, GETGetInternationalStandingOrderConsentsConsentId400, GETGetInternationalStandingOrderConsentsConsentId401, GETGetInternationalStandingOrderConsentsConsentId500, GETGetInternationalStandingOrderConsentsConsentId406, GETGetInternationalStandingOrderConsentsConsentId429, GETGetInternationalStandingOrderConsentsConsentId404, GETGetInternationalStandingOrderConsentsConsentId405;

    /**
     * Create Domestic Scheduled Payments
     */
    @WebMethod(operationName = "POST_CreateDomesticScheduledPayments", action = "POST_CreateDomesticScheduledPayments")
    @WebResult(name = "POST_CreateDomesticScheduledPayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateDomesticScheduledPayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticScheduledResponse3 postCreateDomesticScheduledPayments(

        @WebParam(partName = "POST_CreateDomesticScheduledPayments_InputMessage", name = "POST_CreateDomesticScheduledPayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateDomesticScheduledPaymentsInputMessage postCreateDomesticScheduledPaymentsInputMessage
    ) throws POSTCreateDomesticScheduledPayments406, POSTCreateDomesticScheduledPayments429, POSTCreateDomesticScheduledPayments404, POSTCreateDomesticScheduledPayments405, POSTCreateDomesticScheduledPayments403, POSTCreateDomesticScheduledPayments400, POSTCreateDomesticScheduledPayments401, POSTCreateDomesticScheduledPayments500;

    /**
     * Note that this was not in the original design but is included to inform the client
     */
    @WebMethod(operationName = "GET_Getallorganisationsthattheclientisauthorisedtoretrieve", action = "GET_Getallorganisationsthattheclientisauthorisedtoretrieve")
    @WebResult(name = "GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getallorganisationsthattheclientisauthorisedtoretrieve_OutputMessage")
    public java.lang.Object getGetallorganisationsthattheclientisauthorisedtoretrieve(

        @WebParam(partName = "GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage", name = "GET_Getallorganisationsthattheclientisauthorisedtoretrieve_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetallorganisationsthattheclientisauthorisedtoretrieveInputMessage getGetallorganisationsthattheclientisauthorisedtoretrieveInputMessage
    ) throws GETGetallorganisationsthattheclientisauthorisedtoretrieve406;

    /**
     * Get File Payments
     */
    @WebMethod(operationName = "GET_GetFilePaymentsFilePaymentId", action = "GET_GetFilePaymentsFilePaymentId")
    @WebResult(name = "GET_GetFilePaymentsFilePaymentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetFilePaymentsFilePaymentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFileResponse2 getGetFilePaymentsFilePaymentId(

        @WebParam(partName = "GET_GetFilePaymentsFilePaymentId_InputMessage", name = "GET_GetFilePaymentsFilePaymentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetFilePaymentsFilePaymentIdInputMessage getGetFilePaymentsFilePaymentIdInputMessage
    ) throws GETGetFilePaymentsFilePaymentId403, GETGetFilePaymentsFilePaymentId400, GETGetFilePaymentsFilePaymentId401, GETGetFilePaymentsFilePaymentId500, GETGetFilePaymentsFilePaymentId406, GETGetFilePaymentsFilePaymentId429, GETGetFilePaymentsFilePaymentId404, GETGetFilePaymentsFilePaymentId405;

    /**
     * Get Offers
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdOffers", action = "GET_GetAccountsAccountIdOffers")
    @WebResult(name = "GET_GetAccountsAccountIdOffers_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdOffers_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadOffer1 getGetAccountsAccountIdOffers(

        @WebParam(partName = "GET_GetAccountsAccountIdOffers_InputMessage", name = "GET_GetAccountsAccountIdOffers_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdOffersInputMessage getGetAccountsAccountIdOffersInputMessage
    ) throws GETGetAccountsAccountIdOffers429, GETGetAccountsAccountIdOffers405, GETGetAccountsAccountIdOffers406, GETGetAccountsAccountIdOffers403, GETGetAccountsAccountIdOffers404, GETGetAccountsAccountIdOffers401, GETGetAccountsAccountIdOffers500, GETGetAccountsAccountIdOffers400;

    /**
     * Validate certificate
     */
    @WebMethod(operationName = "POST_Validatecertificate", action = "POST_Validatecertificate")
    @WebResult(name = "POST_Validatecertificate_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_Validatecertificate_OutputMessage")
    public java.lang.Object postValidatecertificate(

        @WebParam(partName = "POST_Validatecertificate_InputMessage", name = "POST_Validatecertificate_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTValidatecertificateInputMessage postValidatecertificateInputMessage
    ) throws POSTValidatecertificate400, POSTValidatecertificate404, POSTValidatecertificate502, POSTValidatecertificate401, POSTValidatecertificate500, POSTValidatecertificate406;

    /**
     * Delete Event Subscription
     */
    @WebMethod(operationName = "DELETE_DeleteEventSubscriptionsEventSubscriptionId", action = "DELETE_DeleteEventSubscriptionsEventSubscriptionId")
    @WebResult(name = "DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_DeleteEventSubscriptionsEventSubscriptionId_OutputMessage")
    public java.lang.Object deleteDeleteEventSubscriptionsEventSubscriptionId(

        @WebParam(partName = "DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage", name = "DELETE_DeleteEventSubscriptionsEventSubscriptionId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETEDeleteEventSubscriptionsEventSubscriptionIdInputMessage deleteDeleteEventSubscriptionsEventSubscriptionIdInputMessage
    ) throws DELETEDeleteEventSubscriptionsEventSubscriptionId403, DELETEDeleteEventSubscriptionsEventSubscriptionId400, DELETEDeleteEventSubscriptionsEventSubscriptionId401, DELETEDeleteEventSubscriptionsEventSubscriptionId500, DELETEDeleteEventSubscriptionsEventSubscriptionId406, DELETEDeleteEventSubscriptionsEventSubscriptionId429, DELETEDeleteEventSubscriptionsEventSubscriptionId404, DELETEDeleteEventSubscriptionsEventSubscriptionId405;

    /**
     * Get the certificates for the given organisation
     */
    @WebMethod(operationName = "GET_Getthecertificatesforthegivenorganisation", action = "GET_Getthecertificatesforthegivenorganisation")
    @WebResult(name = "GET_Getthecertificatesforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getthecertificatesforthegivenorganisation_OutputMessage")
    public java.lang.Object getGetthecertificatesforthegivenorganisation(

        @WebParam(partName = "GET_Getthecertificatesforthegivenorganisation_InputMessage", name = "GET_Getthecertificatesforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetthecertificatesforthegivenorganisationInputMessage getGetthecertificatesforthegivenorganisationInputMessage
    ) throws GETGetthecertificatesforthegivenorganisation404, GETGetthecertificatesforthegivenorganisation406, GETGetthecertificatesforthegivenorganisation401, GETGetthecertificatesforthegivenorganisation500, GETGetthecertificatesforthegivenorganisation400, GETGetthecertificatesforthegivenorganisation502;

    /**
     * Gets a list of all `ATM` objects.
     */
    @WebMethod(operationName = "GET_Atms_GET", action = "GET_Atms_GET")
    @WebResult(name = "GET_Atms_GET_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Atms_GET_OutputMessage")
    public com.laegler.openbanking.soap.model.ATMResponse getAtmsGET(

        @WebParam(partName = "GET_Atms_GET_InputMessage", name = "GET_Atms_GET_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETAtmsGETInputMessage getAtmsGETInputMessage
    ) throws GETAtmsGET503, GETAtmsGET429, GETAtmsGET408, GETAtmsGETDefault, GETAtmsGET400, GETAtmsGET500;

    /**
     * Get Domestic Payments
     */
    @WebMethod(operationName = "GET_GetDomesticPaymentsDomesticPaymentId", action = "GET_GetDomesticPaymentsDomesticPaymentId")
    @WebResult(name = "GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticPaymentsDomesticPaymentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticResponse3 getGetDomesticPaymentsDomesticPaymentId(

        @WebParam(partName = "GET_GetDomesticPaymentsDomesticPaymentId_InputMessage", name = "GET_GetDomesticPaymentsDomesticPaymentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticPaymentsDomesticPaymentIdInputMessage getGetDomesticPaymentsDomesticPaymentIdInputMessage
    ) throws GETGetDomesticPaymentsDomesticPaymentId404, GETGetDomesticPaymentsDomesticPaymentId405, GETGetDomesticPaymentsDomesticPaymentId406, GETGetDomesticPaymentsDomesticPaymentId429, GETGetDomesticPaymentsDomesticPaymentId400, GETGetDomesticPaymentsDomesticPaymentId401, GETGetDomesticPaymentsDomesticPaymentId500, GETGetDomesticPaymentsDomesticPaymentId403;

    /**
     * Delete Account Access Consents
     */
    @WebMethod(operationName = "DELETE_DeleteAccountAccessConsentsConsentId", action = "DELETE_DeleteAccountAccessConsentsConsentId")
    @WebResult(name = "DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_DeleteAccountAccessConsentsConsentId_OutputMessage")
    public java.lang.Object deleteDeleteAccountAccessConsentsConsentId(

        @WebParam(partName = "DELETE_DeleteAccountAccessConsentsConsentId_InputMessage", name = "DELETE_DeleteAccountAccessConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETEDeleteAccountAccessConsentsConsentIdInputMessage deleteDeleteAccountAccessConsentsConsentIdInputMessage
    ) throws DELETEDeleteAccountAccessConsentsConsentId429, DELETEDeleteAccountAccessConsentsConsentId406, DELETEDeleteAccountAccessConsentsConsentId405, DELETEDeleteAccountAccessConsentsConsentId404, DELETEDeleteAccountAccessConsentsConsentId403, DELETEDeleteAccountAccessConsentsConsentId401, DELETEDeleteAccountAccessConsentsConsentId500, DELETEDeleteAccountAccessConsentsConsentId400;

    /**
     * Create International Standing Order Consents
     */
    @WebMethod(operationName = "POST_CreateInternationalStandingOrderConsents", action = "POST_CreateInternationalStandingOrderConsents")
    @WebResult(name = "POST_CreateInternationalStandingOrderConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateInternationalStandingOrderConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalStandingOrderConsentResponse4 postCreateInternationalStandingOrderConsents(

        @WebParam(partName = "POST_CreateInternationalStandingOrderConsents_InputMessage", name = "POST_CreateInternationalStandingOrderConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateInternationalStandingOrderConsentsInputMessage postCreateInternationalStandingOrderConsentsInputMessage
    ) throws POSTCreateInternationalStandingOrderConsents400, POSTCreateInternationalStandingOrderConsents401, POSTCreateInternationalStandingOrderConsents500, POSTCreateInternationalStandingOrderConsents403, POSTCreateInternationalStandingOrderConsents404, POSTCreateInternationalStandingOrderConsents405, POSTCreateInternationalStandingOrderConsents406, POSTCreateInternationalStandingOrderConsents429;

    /**
     * Search for one or more resources
     */
    @WebMethod(operationName = "OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources", action = "OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources")
    @WebResult(name = "OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_OutputMessage")
    public com.laegler.openbanking.soap.model.OBAccountPaymentServiceProvidersResponse obAccountPaymentServiceProvidersGETSearchforoneormoreresources(

        @WebParam(partName = "OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage", name = "OBAccountPaymentServiceProviders_GET_Searchforoneormoreresources_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBAccountPaymentServiceProvidersGETSearchforoneormoreresourcesInputMessage obAccountPaymentServiceProvidersGETSearchforoneormoreresourcesInputMessage
    ) throws OBAccountPaymentServiceProvidersGETSearchforoneormoreresourcesDefault;

    /**
     * Get Transactions
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdTransactions", action = "GET_GetAccountsAccountIdTransactions")
    @WebResult(name = "GET_GetAccountsAccountIdTransactions_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdTransactions_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadTransaction4 getGetAccountsAccountIdTransactions(

        @WebParam(partName = "GET_GetAccountsAccountIdTransactions_InputMessage", name = "GET_GetAccountsAccountIdTransactions_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdTransactionsInputMessage getGetAccountsAccountIdTransactionsInputMessage
    ) throws GETGetAccountsAccountIdTransactions429, GETGetAccountsAccountIdTransactions405, GETGetAccountsAccountIdTransactions406, GETGetAccountsAccountIdTransactions403, GETGetAccountsAccountIdTransactions404, GETGetAccountsAccountIdTransactions401, GETGetAccountsAccountIdTransactions500, GETGetAccountsAccountIdTransactions400;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails", action = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails")
    @WebResult(name = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails(

        @WebParam(partName = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage", name = "GET_GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsInputMessage getGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsInputMessage
    ) throws GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails429, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails406, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails401, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails500, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails400, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails403, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails405, GETGetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails404;

    /**
     * Get a client by way of Client ID
     */
    @WebMethod(operationName = "GET_GetaclientbywayofClientID", action = "GET_GetaclientbywayofClientID")
    @WebResult(name = "GET_GetaclientbywayofClientID_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetaclientbywayofClientID_OutputMessage")
    public com.laegler.openbanking.soap.model.GetaclientbywayofClientIDResponse getGetaclientbywayofClientID(

        @WebParam(partName = "GET_GetaclientbywayofClientID_InputMessage", name = "GET_GetaclientbywayofClientID_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetaclientbywayofClientIDInputMessage getGetaclientbywayofClientIDInputMessage
    ) throws GETGetaclientbywayofClientID401, GETGetaclientbywayofClientID403;

    /**
     * Useful for executing searches without passing parameters that may contain sensitive information on the URL.
     */
    @WebMethod(operationName = "OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST", action = "OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST")
    @WebResult(name = "OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage")
    public com.laegler.openbanking.soap.model.OBAccountPaymentServiceProvidersResponse obAccountPaymentServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOST(

        @WebParam(partName = "OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", name = "OBAccountPaymentServiceProviders_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBAccountPaymentServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage obAccountPaymentServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage
    ) throws OBAccountPaymentServiceProvidersPOSTSearchforoneormoreresourcesusingHTTPPOSTDefault;

    /**
     * Search for one or more resources
     */
    @WebMethod(operationName = "OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources", action = "OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources")
    @WebResult(name = "OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_OutputMessage")
    public com.laegler.openbanking.soap.model.SearchforoneormoreresourcesResponse1 obQualifiedTrustServiceProvidersGETSearchforoneormoreresources(

        @WebParam(partName = "OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage", name = "OBQualifiedTrustServiceProviders_GET_Searchforoneormoreresources_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBQualifiedTrustServiceProvidersGETSearchforoneormoreresourcesInputMessage obQualifiedTrustServiceProvidersGETSearchforoneormoreresourcesInputMessage
    ) throws OBQualifiedTrustServiceProvidersGETSearchforoneormoreresourcesDefault;

    /**
     * Get the business or the technical contacts for the given organisation
     */
    @WebMethod(operationName = "GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation", action = "GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation")
    @WebResult(name = "GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage")
    public java.lang.Object getGetthebusinessorthetechnicalcontactsforthegivenorganisation(

        @WebParam(partName = "GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage", name = "GET_Getthebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetthebusinessorthetechnicalcontactsforthegivenorganisationInputMessage getGetthebusinessorthetechnicalcontactsforthegivenorganisationInputMessage
    ) throws GETGetthebusinessorthetechnicalcontactsforthegivenorganisation400, GETGetthebusinessorthetechnicalcontactsforthegivenorganisation401, GETGetthebusinessorthetechnicalcontactsforthegivenorganisation500, GETGetthebusinessorthetechnicalcontactsforthegivenorganisation406, GETGetthebusinessorthetechnicalcontactsforthegivenorganisation502;

    /**
     * Create Domestic Standing Order Consents
     */
    @WebMethod(operationName = "POST_CreateDomesticStandingOrderConsents", action = "POST_CreateDomesticStandingOrderConsents")
    @WebResult(name = "POST_CreateDomesticStandingOrderConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateDomesticStandingOrderConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticStandingOrderConsentResponse4 postCreateDomesticStandingOrderConsents(

        @WebParam(partName = "POST_CreateDomesticStandingOrderConsents_InputMessage", name = "POST_CreateDomesticStandingOrderConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateDomesticStandingOrderConsentsInputMessage postCreateDomesticStandingOrderConsentsInputMessage
    ) throws POSTCreateDomesticStandingOrderConsents400, POSTCreateDomesticStandingOrderConsents401, POSTCreateDomesticStandingOrderConsents500, POSTCreateDomesticStandingOrderConsents403, POSTCreateDomesticStandingOrderConsents404, POSTCreateDomesticStandingOrderConsents405, POSTCreateDomesticStandingOrderConsents406, POSTCreateDomesticStandingOrderConsents429;

    /**
     * Get File Payment Consents
     */
    @WebMethod(operationName = "GET_GetFilePaymentConsentsConsentId", action = "GET_GetFilePaymentConsentsConsentId")
    @WebResult(name = "GET_GetFilePaymentConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetFilePaymentConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFileConsentResponse3 getGetFilePaymentConsentsConsentId(

        @WebParam(partName = "GET_GetFilePaymentConsentsConsentId_InputMessage", name = "GET_GetFilePaymentConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetFilePaymentConsentsConsentIdInputMessage getGetFilePaymentConsentsConsentIdInputMessage
    ) throws GETGetFilePaymentConsentsConsentId401, GETGetFilePaymentConsentsConsentId500, GETGetFilePaymentConsentsConsentId400, GETGetFilePaymentConsentsConsentId403, GETGetFilePaymentConsentsConsentId405, GETGetFilePaymentConsentsConsentId404, GETGetFilePaymentConsentsConsentId429, GETGetFilePaymentConsentsConsentId406;

    /**
     * Get Scheduled Payments
     */
    @WebMethod(operationName = "GET_GetScheduledPayments", action = "GET_GetScheduledPayments")
    @WebResult(name = "GET_GetScheduledPayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetScheduledPayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadScheduledPayment2 getGetScheduledPayments(

        @WebParam(partName = "GET_GetScheduledPayments_InputMessage", name = "GET_GetScheduledPayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetScheduledPaymentsInputMessage getGetScheduledPaymentsInputMessage
    ) throws GETGetScheduledPayments429, GETGetScheduledPayments406, GETGetScheduledPayments401, GETGetScheduledPayments500, GETGetScheduledPayments400, GETGetScheduledPayments405, GETGetScheduledPayments404, GETGetScheduledPayments403;

    /**
     * Useful for executing searches without passing parameters that may contain sensitive information on the URL.
     */
    @WebMethod(operationName = "POST_SearchforoneormoreresourcesusingHTTPPOST", action = "POST_SearchforoneormoreresourcesusingHTTPPOST")
    @WebResult(name = "POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage")
    public com.laegler.openbanking.soap.model.SearchforoneormoreresourcesusingHTTPPOSTResponse3 postSearchforoneormoreresourcesusingHTTPPOST(

        @WebParam(partName = "POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", name = "POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage postSearchforoneormoreresourcesusingHTTPPOSTInputMessage
    ) throws POSTSearchforoneormoreresourcesusingHTTPPOSTDefault;

    /**
     * Get Parties
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdParties", action = "GET_GetAccountsAccountIdParties")
    @WebResult(name = "GET_GetAccountsAccountIdParties_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdParties_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadParty3 getGetAccountsAccountIdParties(

        @WebParam(partName = "GET_GetAccountsAccountIdParties_InputMessage", name = "GET_GetAccountsAccountIdParties_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdPartiesInputMessage getGetAccountsAccountIdPartiesInputMessage
    ) throws GETGetAccountsAccountIdParties400, GETGetAccountsAccountIdParties401, GETGetAccountsAccountIdParties500, GETGetAccountsAccountIdParties403, GETGetAccountsAccountIdParties404, GETGetAccountsAccountIdParties405, GETGetAccountsAccountIdParties406, GETGetAccountsAccountIdParties429;

    /**
     * Add a redirect URI to the given Software Statement
     */
    @WebMethod(operationName = "POST_AddaredirectURItothegivenSoftwareStatement", action = "POST_AddaredirectURItothegivenSoftwareStatement")
    @WebResult(name = "POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_AddaredirectURItothegivenSoftwareStatement_OutputMessage")
    public java.lang.Object postAddaredirectURItothegivenSoftwareStatement(

        @WebParam(partName = "POST_AddaredirectURItothegivenSoftwareStatement_InputMessage", name = "POST_AddaredirectURItothegivenSoftwareStatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTAddaredirectURItothegivenSoftwareStatementInputMessage postAddaredirectURItothegivenSoftwareStatementInputMessage
    ) throws POSTAddaredirectURItothegivenSoftwareStatement400, POSTAddaredirectURItothegivenSoftwareStatement401, POSTAddaredirectURItothegivenSoftwareStatement500, POSTAddaredirectURItothegivenSoftwareStatement502, POSTAddaredirectURItothegivenSoftwareStatement404, POSTAddaredirectURItothegivenSoftwareStatement406, POSTAddaredirectURItothegivenSoftwareStatement409;

    /**
     * Get International Payment Consents
     */
    @WebMethod(operationName = "GET_GetInternationalPaymentConsentsConsentId", action = "GET_GetInternationalPaymentConsentsConsentId")
    @WebResult(name = "GET_GetInternationalPaymentConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalPaymentConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalConsentResponse3 getGetInternationalPaymentConsentsConsentId(

        @WebParam(partName = "GET_GetInternationalPaymentConsentsConsentId_InputMessage", name = "GET_GetInternationalPaymentConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalPaymentConsentsConsentIdInputMessage getGetInternationalPaymentConsentsConsentIdInputMessage
    ) throws GETGetInternationalPaymentConsentsConsentId403, GETGetInternationalPaymentConsentsConsentId400, GETGetInternationalPaymentConsentsConsentId401, GETGetInternationalPaymentConsentsConsentId500, GETGetInternationalPaymentConsentsConsentId406, GETGetInternationalPaymentConsentsConsentId429, GETGetInternationalPaymentConsentsConsentId404, GETGetInternationalPaymentConsentsConsentId405;

    /**
     * Get the certificates of the given OrganisationCertificateType for the given oranisation
     */
    @WebMethod(operationName = "GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation", action = "GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation")
    @WebResult(name = "GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_OutputMessage")
    public java.lang.Object getGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation(

        @WebParam(partName = "GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage", name = "GET_GetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisationInputMessage getGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisationInputMessage
    ) throws GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation400, GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation406, GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation404, GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation502, GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation401, GETGetthecertificatesofthegivenOrganisationCertificateTypeforthegivenoranisation500;

    /**
     * Get Domestic Scheduled Payment Consents
     */
    @WebMethod(operationName = "GET_GetDomesticScheduledPaymentConsentsConsentId", action = "GET_GetDomesticScheduledPaymentConsentsConsentId")
    @WebResult(name = "GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticScheduledPaymentConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticScheduledConsentResponse3 getGetDomesticScheduledPaymentConsentsConsentId(

        @WebParam(partName = "GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage", name = "GET_GetDomesticScheduledPaymentConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticScheduledPaymentConsentsConsentIdInputMessage getGetDomesticScheduledPaymentConsentsConsentIdInputMessage
    ) throws GETGetDomesticScheduledPaymentConsentsConsentId400, GETGetDomesticScheduledPaymentConsentsConsentId401, GETGetDomesticScheduledPaymentConsentsConsentId500, GETGetDomesticScheduledPaymentConsentsConsentId404, GETGetDomesticScheduledPaymentConsentsConsentId403, GETGetDomesticScheduledPaymentConsentsConsentId406, GETGetDomesticScheduledPaymentConsentsConsentId405, GETGetDomesticScheduledPaymentConsentsConsentId429;

    /**
     * Gets a list of all `Commerical Credit Card` objects.
     */
    @WebMethod(operationName = "GET_CommercialCreditCards_GET", action = "GET_CommercialCreditCards_GET")
    @WebResult(name = "GET_CommercialCreditCards_GET_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_CommercialCreditCards_GET_OutputMessage")
    public com.laegler.openbanking.soap.model.CommercialCreditCardResponse getCommercialCreditCardsGET(

        @WebParam(partName = "GET_CommercialCreditCards_GET_InputMessage", name = "GET_CommercialCreditCards_GET_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETCommercialCreditCardsGETInputMessage getCommercialCreditCardsGETInputMessage
    ) throws GETCommercialCreditCardsGET503, GETCommercialCreditCardsGET500, GETCommercialCreditCardsGET400, GETCommercialCreditCardsGETDefault, GETCommercialCreditCardsGET429, GETCommercialCreditCardsGET408;

    /**
     * Get Balances
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdBalances", action = "GET_GetAccountsAccountIdBalances")
    @WebResult(name = "GET_GetAccountsAccountIdBalances_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdBalances_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadBalance1 getGetAccountsAccountIdBalances(

        @WebParam(partName = "GET_GetAccountsAccountIdBalances_InputMessage", name = "GET_GetAccountsAccountIdBalances_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdBalancesInputMessage getGetAccountsAccountIdBalancesInputMessage
    ) throws GETGetAccountsAccountIdBalances400, GETGetAccountsAccountIdBalances401, GETGetAccountsAccountIdBalances500, GETGetAccountsAccountIdBalances403, GETGetAccountsAccountIdBalances404, GETGetAccountsAccountIdBalances405, GETGetAccountsAccountIdBalances406, GETGetAccountsAccountIdBalances429;

    /**
     * Revoke or remove a certificate with the given CertificateOrKeyId
     */
    @WebMethod(operationName = "DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId", action = "DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId")
    @WebResult(name = "DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_OutputMessage")
    public java.lang.Object deleteRevokeorremoveacertificatewiththegivenCertificateOrKeyId(

        @WebParam(partName = "DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage", name = "DELETE_RevokeorremoveacertificatewiththegivenCertificateOrKeyId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyIdInputMessage deleteRevokeorremoveacertificatewiththegivenCertificateOrKeyIdInputMessage
    ) throws DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyId406, DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyId404, DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyId502, DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyId400, DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyId401, DELETERevokeorremoveacertificatewiththegivenCertificateOrKeyId500;

    /**
     * Create Domestic Scheduled Payment Consents
     */
    @WebMethod(operationName = "POST_CreateDomesticScheduledPaymentConsents", action = "POST_CreateDomesticScheduledPaymentConsents")
    @WebResult(name = "POST_CreateDomesticScheduledPaymentConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateDomesticScheduledPaymentConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticScheduledConsentResponse3 postCreateDomesticScheduledPaymentConsents(

        @WebParam(partName = "POST_CreateDomesticScheduledPaymentConsents_InputMessage", name = "POST_CreateDomesticScheduledPaymentConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateDomesticScheduledPaymentConsentsInputMessage postCreateDomesticScheduledPaymentConsentsInputMessage
    ) throws POSTCreateDomesticScheduledPaymentConsents401, POSTCreateDomesticScheduledPaymentConsents400, POSTCreateDomesticScheduledPaymentConsents403, POSTCreateDomesticScheduledPaymentConsents500, POSTCreateDomesticScheduledPaymentConsents405, POSTCreateDomesticScheduledPaymentConsents404, POSTCreateDomesticScheduledPaymentConsents429, POSTCreateDomesticScheduledPaymentConsents406;

    /**
     * Get International Scheduled Payment Consents
     */
    @WebMethod(operationName = "GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation", action = "GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation")
    @WebResult(name = "GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFundsConfirmationResponse1 getGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation(

        @WebParam(partName = "GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage", name = "GET_GetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmationInputMessage getGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmationInputMessage
    ) throws GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation401, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation500, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation400, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation429, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation406, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation403, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation405, GETGetInternationalScheduledPaymentConsentsConsentIdFundsConfirmation404;

    /**
     * Create Event Subscription
     */
    @WebMethod(operationName = "POST_CreateEventSubscriptions", action = "POST_CreateEventSubscriptions")
    @WebResult(name = "POST_CreateEventSubscriptions_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateEventSubscriptions_OutputMessage")
    public com.laegler.openbanking.soap.model.OBEventSubscriptionResponse1 postCreateEventSubscriptions(

        @WebParam(partName = "POST_CreateEventSubscriptions_InputMessage", name = "POST_CreateEventSubscriptions_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateEventSubscriptionsInputMessage postCreateEventSubscriptionsInputMessage
    ) throws POSTCreateEventSubscriptions406, POSTCreateEventSubscriptions429, POSTCreateEventSubscriptions404, POSTCreateEventSubscriptions405, POSTCreateEventSubscriptions403, POSTCreateEventSubscriptions400, POSTCreateEventSubscriptions401, POSTCreateEventSubscriptions500;

    /**
     * Create Account Access Consents
     */
    @WebMethod(operationName = "POST_CreateAccountAccessConsents", action = "POST_CreateAccountAccessConsents")
    @WebResult(name = "POST_CreateAccountAccessConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateAccountAccessConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadConsentResponse1 postCreateAccountAccessConsents(

        @WebParam(partName = "POST_CreateAccountAccessConsents_InputMessage", name = "POST_CreateAccountAccessConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateAccountAccessConsentsInputMessage postCreateAccountAccessConsentsInputMessage
    ) throws POSTCreateAccountAccessConsents403, POSTCreateAccountAccessConsents400, POSTCreateAccountAccessConsents401, POSTCreateAccountAccessConsents500, POSTCreateAccountAccessConsents406, POSTCreateAccountAccessConsents429, POSTCreateAccountAccessConsents404, POSTCreateAccountAccessConsents405;

    /**
     * Create Funds Confirmation
     */
    @WebMethod(operationName = "POST_CreateFundsConfirmations", action = "POST_CreateFundsConfirmations")
    @WebResult(name = "POST_CreateFundsConfirmations_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateFundsConfirmations_OutputMessage")
    public com.laegler.openbanking.soap.model.OBFundsConfirmationResponse1 postCreateFundsConfirmations(

        @WebParam(partName = "POST_CreateFundsConfirmations_InputMessage", name = "POST_CreateFundsConfirmations_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateFundsConfirmationsInputMessage postCreateFundsConfirmationsInputMessage
    ) throws POSTCreateFundsConfirmations405, POSTCreateFundsConfirmations404, POSTCreateFundsConfirmations429, POSTCreateFundsConfirmations406, POSTCreateFundsConfirmations401, POSTCreateFundsConfirmations500, POSTCreateFundsConfirmations400, POSTCreateFundsConfirmations403;

    /**
     * Get Statements
     */
    @WebMethod(operationName = "GET_GetStatements", action = "GET_GetStatements")
    @WebResult(name = "GET_GetStatements_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetStatements_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadStatement1 getGetStatements(

        @WebParam(partName = "GET_GetStatements_InputMessage", name = "GET_GetStatements_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetStatementsInputMessage getGetStatementsInputMessage
    ) throws GETGetStatements400, GETGetStatements401, GETGetStatements500, GETGetStatements406, GETGetStatements429, GETGetStatements404, GETGetStatements405, GETGetStatements403;

    /**
     * Amend a callback URI
     */
    @WebMethod(operationName = "PUT_AmendacallbackURI", action = "PUT_AmendacallbackURI")
    @WebResult(name = "PUT_AmendacallbackURI_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_AmendacallbackURI_OutputMessage")
    public com.laegler.openbanking.soap.model.OBCallbackUrlResponse1 putAmendacallbackURI(

        @WebParam(partName = "PUT_AmendacallbackURI_InputMessage", name = "PUT_AmendacallbackURI_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTAmendacallbackURIInputMessage putAmendacallbackURIInputMessage
    ) throws PUTAmendacallbackURI401, PUTAmendacallbackURI500, PUTAmendacallbackURI400, PUTAmendacallbackURI403, PUTAmendacallbackURI405, PUTAmendacallbackURI404, PUTAmendacallbackURI415, PUTAmendacallbackURI429, PUTAmendacallbackURI406;

    /**
     * Add a key or create a new certificate for the given software statement
     */
    @WebMethod(operationName = "POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement", action = "POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement")
    @WebResult(name = "POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_OutputMessage")
    public java.lang.Object postAddakeyorcreateanewcertificateforthegivensoftwarestatement(

        @WebParam(partName = "POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage", name = "POST_Addakeyorcreateanewcertificateforthegivensoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTAddakeyorcreateanewcertificateforthegivensoftwarestatementInputMessage postAddakeyorcreateanewcertificateforthegivensoftwarestatementInputMessage
    ) throws POSTAddakeyorcreateanewcertificateforthegivensoftwarestatement400, POSTAddakeyorcreateanewcertificateforthegivensoftwarestatement401, POSTAddakeyorcreateanewcertificateforthegivensoftwarestatement500, POSTAddakeyorcreateanewcertificateforthegivensoftwarestatement502, POSTAddakeyorcreateanewcertificateforthegivensoftwarestatement404, POSTAddakeyorcreateanewcertificateforthegivensoftwarestatement406;

    /**
     * Get the certificate of the given type and ID for the given software statement
     */
    @WebMethod(operationName = "GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement", action = "GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement")
    @WebResult(name = "GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_OutputMessage")
    public java.lang.Object getGetthecertificateofthegiventypeandIDforthegivensoftwarestatement(

        @WebParam(partName = "GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage", name = "GET_GetthecertificateofthegiventypeandIDforthegivensoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatementInputMessage getGetthecertificateofthegiventypeandIDforthegivensoftwarestatementInputMessage
    ) throws GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatement502, GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatement404, GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatement401, GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatement500, GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatement400, GETGetthecertificateofthegiventypeandIDforthegivensoftwarestatement406;

    /**
     * Create Events
     */
    @WebMethod(operationName = "POST_CreateEvents", action = "POST_CreateEvents")
    @WebResult(name = "POST_CreateEvents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateEvents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBEventPollingResponse1 postCreateEvents(

        @WebParam(partName = "POST_CreateEvents_InputMessage", name = "POST_CreateEvents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateEventsInputMessage postCreateEventsInputMessage
    ) throws POSTCreateEvents429, POSTCreateEvents401, POSTCreateEvents500, POSTCreateEvents400, POSTCreateEvents405, POSTCreateEvents406, POSTCreateEvents403, POSTCreateEvents404;

    /**
     * Get Statements
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdStatements", action = "GET_GetAccountsAccountIdStatements")
    @WebResult(name = "GET_GetAccountsAccountIdStatements_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdStatements_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadStatement1 getGetAccountsAccountIdStatements(

        @WebParam(partName = "GET_GetAccountsAccountIdStatements_InputMessage", name = "GET_GetAccountsAccountIdStatements_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdStatementsInputMessage getGetAccountsAccountIdStatementsInputMessage
    ) throws GETGetAccountsAccountIdStatements401, GETGetAccountsAccountIdStatements500, GETGetAccountsAccountIdStatements400, GETGetAccountsAccountIdStatements405, GETGetAccountsAccountIdStatements404, GETGetAccountsAccountIdStatements403, GETGetAccountsAccountIdStatements429, GETGetAccountsAccountIdStatements406;

    /**
     * Gets a list of all `Branch` objects.
     */
    @WebMethod(operationName = "GET_Branches_GET", action = "GET_Branches_GET")
    @WebResult(name = "GET_Branches_GET_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Branches_GET_OutputMessage")
    public com.laegler.openbanking.soap.model.BranchResponse getBranchesGET(

        @WebParam(partName = "GET_Branches_GET_InputMessage", name = "GET_Branches_GET_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETBranchesGETInputMessage getBranchesGETInputMessage
    ) throws GETBranchesGET400, GETBranchesGET500, GETBranchesGET429, GETBranchesGET408, GETBranchesGET503, GETBranchesGETDefault;

    /**
     * The response body is a signed JWT and the values found in the header and the payload of the SSA are specified below
     * 
     * # Terminology
     * 
     *   This specification uses the terms "access token", "authorization code", "authorization endpoint", "authorization grant", "authorization server", "client", "client identifier", "client secret", "grant type", "protected resource", "redirection URI", "refresh token", "resource owner", "resource server", "response type", and "token endpoint" defined by OAuth 2.0 [RFC6749] and uses the term "Claim" defined by JSON Web Token (JWT) [RFC7519].
     * 
     *   * __Account Servicing Payment Services Provider (ASPSP)__ -- An organisation managing customer accounts (and operating banking APIs).
     *   * __Primary Technical Contact__ -- The person at the TPP who creates an SSA and invokes a registration mechanism. This is an example of an [RFC7591] Client Developer.
     *   * __OB Organisation ID__ -- The unique identifier for each OpenBanking participant. Both TPPs and ASPSPs have OB Organisation IDs.
     *   * __OpenBanking Directory__ -- An implementation of a [PSD2] competent authority; acts as an Identity Provider, certificate authority, and registry governing the participants in the UK OpenBanking API scheme.
     *   * __ASPSP Registration Endpoint__ -- OAuth 2.0 & [RFC7591] compliant endpoint, exact value is discoverable from the [OIDCD] openid-configuration file of the ASPSP.
     *   * __Software Statement Assertion (SSA)__ -- An implementation of an [RFC7591] software statement, signed by the OpenBanking Directory.
     *   * __Trusted Third Party (TPP)__ -- An organization working to initiate payments or consume account information with/from an ASPSP.
     *   * __TPP Client Software__ -- software implementing an OAuth2 client, interacting with an ASPSP registration endpoint.
     * 
     * # Software Statement Assertion (SSA)
     * 
     *   The SSA is a JSON Web Token (JWT) containing client metadata about an instance of TPP client software. The JWT is issued and signed by the OpenBanking Directory.
     * 
     * ## SSA Payload
     * 
     *   The payload of an OpenBanking SSA MUST be a compliant software statement according to [RFC7591]. The SSA MUST also be a compliant JWT according to [RFC7519]. The following metadata profiles the metadata in [RFC7591] and [RFC7519]:
     * 
     *   | Metadata | Description | Source Specification |
     *   |----------|-------------|----------------------|
     *   |`software_id`|Unique Identifier for TPP Client Software|[RFC7591]|
     *   |`iss`|SSA Issuer|[RFC7519]|
     *   |`iat`|Time SSA issued|[RFC7519]|
     *   |`jti`|JWT ID|[RFC7519]|
     * 
     *   The following software metadata is additionally defined for this profile:
     * 
     *   |Metadata |Description |Field Size |Default values |
     *   |---------|------------|-----------|---------------|
     *   |`software_client_id`|The Client ID Registered at OB used to access OB resources|Base62 GUID (22 chars)| |
     *   |`software_client_description`|Human-readable detailed description of the client|Max256Text| |
     *   |`software_client_name`|Human-readable Software Name|Max40Text| |
     *   |`software_client_uri`|The website or resource root uri|Max256Text| |
     *   |`software_version`|The version number of the software should a TPP choose to register and / or maintain it|decimal| |
     *   |`software_environment`|Requested additional field to avoid certificate check|Max256Text| |
     *   |`software_jwks_endpoint`|Contains all active signing and network certs for the software|Max256Text| |
     *   |`software_jwks_revoked_endpoint`|Contains all revoked signing and network certs for the software|Max256Text| |
     *   |`software_logo_uri`|Link to the TPP logo. Note, ASPSPs are not obliged to display images hosted by third parties|Max256Text| |
     *   |`software_mode`|ASPSP Requested additional field to indicate that this software is `Test` or `Live` the default is `Live`. Impact and support for `Test` software is up to the ASPSP.|Max40Text| |
     *   |`software_on_behalf_of_org`|A reference to fourth party organsiation resource on the OB Directory if the registering TPP is acting on behalf of another.|Max40Text| |
     *   |`software_policy_uri`|A link to the software's policy page|Max256Text| |
     *   |`software_redirect_uris`|Registered client callback endpoints as registered with Open Banking|A string array of Max256Text items|
     *   |`software_roles`|A multi value list of PSD2 roles that this software is authorized to perform.|A string array of Max256Text items| |
     *   |`software_tos_uri`|A link to the software's terms of service page|Max256Text| |
     * 
     *   The following Organisational metadata is defined for this profile:
     * 
     *   |Metadata |Description |Field Size | Default values |
     *   |---------|------------|-----------|----------------|
     *   |`organisation_competent_authority_claims`|Authorisations granted to the organsiation by an NCA|CodeList {`AISP`, `PISP`, `CBPII`, `ASPSP`}| |
     *   |`org_status`|Included to cater for voluntary withdrawal from OB scenarios|`Active`, `Revoked`, or `Withdrawn`| |
     *   |`org_id`|The Unique TPP or ASPSP ID held by OpenBanking.|Max35Text| |
     *   |`org_name`|Legal Entity Identifier or other known organisation name|Max140Text| |
     *   |`org_contacts`|JSON array of objects containing a triplet of name, email, and phone number|Each item Max256Text| |
     *   |`org_jwks_endpoint`|Contains all active signing and network certs for the organisation|Max256Text| |
     *   |`org_jwks_revoked_endpoint`|Contains all revoked signing and network certs for the organisation|Max256Text| |
     * 
     * ## SSA header
     * 
     *   The SSA header MUST comply with [RFC7519].
     * 
     *   |Metadata |Description |Comments |
     *   |---------|------------|---------|
     *   |`typ`|MUST be set to `JWT`| |
     *   |`alg`|MUST be set to `ES256` or `PS256`| |
     *   |`kid`|The kid will be kept the same as the `x5t` parameter. (X.509 Certificate SHA-1 Thumbprint) of the signing certificate.| |
     * 
     *   ### Example SSA
     * 
     *   The elements defined in the software statement will consist of the following values.
     * 
     *   *Note that there are inconsistent applications of booleans or "Active" strings in the current data model.*
     * 
     *   *Note that there are inconsistent applications of status flags case sensitivity.*
     * 
     *   *The attributes required to be displayed by ASPSPs.*
     * 
     * ```
     * {
     *   "typ": "JWT",
     *   "alg": "ES256",
     *   "kid": "ABCD1234"
     * }
     * {
     *   "iss": "OpenBanking Ltd",
     *   "iat": 1492756331,
     *   "jti": "id12345685439487678",
     *   "software_environment": "production",
     *   "software_mode": "live",
     *   "software_id": "65d1f27c-4aea-4549-9c21-60e495a7a86f",
     *   "software_client_id": "OpenBanking TPP Client Unique ID",
     *   "software_client_name": "Amazon Prime Movies",
     *   "software_client_description": "Amazon Prime Movies is a moving streaming service",
     *   "software_version": "2.2",
     *   "software_client_uri": "http://prime.amazon.com",
     *   "software_redirect_uris": [
     *     "http://prime.amazon.com/cb",
     *     "http://prime.amazon.co.uk/cb"
     *   ],
     *   "software_roles": [
     *     "PISP",
     *     "AISP"
     *   ],
     *   "organisation_competent_authority_claims": {
     *     "authority_id": "FMA", // Austrian Financial Market Authority
     *     "registration_id": "111111",
     *     "status": "Active",
     *     "authorisations":  [
     *       {
     *         "member_state": "GB",
     *         "roles": [
     *           "PISP",
     *           "AISP"
     *         ]
     *       },
     *       {
     *         "member_state": "IR",
     *         "roles": [
     *           "PISP"
     *         ]
     *       }
     *     ]
     *   },
     *   "software_logo_uri": "http://prime.amazon.com/logo.png",
     *   "org_status": "Active",
     *   "org_id": "Amazon TPPID",
     *   "org_name": "OpenBanking TPP Registered Name",
     *   "org_contacts": [
     *     {
     *       "name": "contact name",
     *       "email": "contact@contact.com",
     *       "phone": "+447890130558"
     *       "type": "business"
     *     },
     *     {
     *       "name": "contact name",
     *       "email": "contact@contact.com",
     *       "phone": "+447890130558",
     *       "type": "technical"
     *     }
     *   ],
     *   "org_jwks_endpoint": "http://jwks.openbanking.org.uk/org_id/org_id.jkws",
     *   "org_jwks_revoked_endpoint": "http://jwks.openbanking.org.uk/org_id/revoked/org_id.jkws",
     *   "software_jwks_endpoint": "http://jwks.openbanking.org.uk/org_id/software_id.jkws",
     *   "software_jwks_revoked_endpoint": "http://jwks.openbanking.org.uk/org_id/revoked/software_id.jkws",
     *   "software_policy_uri": "http://tpp.com/policy.html",
     *   "software_tos_uri": "http://tpp.com/tos.html",
     *   "software_on_behalf_of_org": "Acme Ltd"
     * }
     * {
     *   Signature
     * }
     * ```
     * 
     * # Automated Client Registration
     * 
     * A TPP MAY use automated client registration to submit an SSA to an ASPSP in exchange for client credentials for use as a client against an OAuth 2.0 Authorization Server. It is RECOMMENDED for ASPSPs to support the automated client registration mechanism. A large number of claims that OpenID Connect OPs could support as part of the RFC7591 request are detailed [https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata) and should be followed if not explicitly referenced in the Software Statement Assertion claim set.
     * 
     * ## Request Validation
     * 
     * Prior to issuing a client registration response, the ASPSP MUST perform the following checks
     * 
     * * The ASPSP SHOULD check whether the TPP that initiated the TLS connection is the same TPP as listed in the SSA.
     * * In the case where a gateway or other piece of infrastructure pre-terminates the MATLS channel in front of the registration endpoint, the certificate used to initiate the connection or some part of that certificate (such as DN & Issuer) SHOULD be made available to the ASPSP for validation against the claims in the SSA.
     * * The registration request MUST be signed with a key contained in the JWKS referenced in the SSA included with the request. This ensures that a holder-of-key proof-of-possession is performed proving that the TPP app was the originally intended recipient of the SSA when the OB issued it.
     * * The SSA MUST be validated according to [RFC7519], including validation of the signature and validity window.
     * 
     * JWT signature must be validated, this involves retrieving the jwks keyset for both the OB and the TPP. The OB keystore location will be published as part of the directory specification, The TPP's will be included in the software statement.
     * 
     * ### SSA Lifetime
     * 
     * The SSA's Lifetime / Validity period is not defined by Open Banking. ASPSPs in the Open Banking ecosystem are required to implement pragmatic time ranges in which to accept an SSA. For example, an ASPSP that has implemented Dynamic Client Registration may choose to accept SSA's that were issued no earlier than 1 minute prior to their presentation however ASPSPs that only support manual registration may need to accept SSAs that were issued 30 minutes prior as the elapsed time period between generation and use between these two flows is expected to differ significantly.
     */
    @WebMethod(operationName = "GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID.", action = "GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID.")
    @WebResult(name = "GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._OutputMessage")
    public java.lang.Object getGetaSoftwareStatementAssertionforthegivenSoftwareStatementID(

        @WebParam(partName = "GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage", name = "GET_GetaSoftwareStatementAssertionforthegivenSoftwareStatementID._InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementIDInputMessage getGetaSoftwareStatementAssertionforthegivenSoftwareStatementIDInputMessage
    ) throws GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementID400, GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementID401, GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementID500, GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementID502, GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementID404, GETGetaSoftwareStatementAssertionforthegivenSoftwareStatementID406;

    /**
     * Delete Funds Confirmation Consent
     */
    @WebMethod(operationName = "DELETE_DeleteFundsConfirmationConsentsConsentId", action = "DELETE_DeleteFundsConfirmationConsentsConsentId")
    @WebResult(name = "DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_DeleteFundsConfirmationConsentsConsentId_OutputMessage")
    public java.lang.Object deleteDeleteFundsConfirmationConsentsConsentId(

        @WebParam(partName = "DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage", name = "DELETE_DeleteFundsConfirmationConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETEDeleteFundsConfirmationConsentsConsentIdInputMessage deleteDeleteFundsConfirmationConsentsConsentIdInputMessage
    ) throws DELETEDeleteFundsConfirmationConsentsConsentId429, DELETEDeleteFundsConfirmationConsentsConsentId403, DELETEDeleteFundsConfirmationConsentsConsentId404, DELETEDeleteFundsConfirmationConsentsConsentId405, DELETEDeleteFundsConfirmationConsentsConsentId406, DELETEDeleteFundsConfirmationConsentsConsentId400, DELETEDeleteFundsConfirmationConsentsConsentId401, DELETEDeleteFundsConfirmationConsentsConsentId500;

    /**
     * Useful for executing searches without passing parameters that may contain sensitive information on the URL.
     */
    @WebMethod(operationName = "OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST", action = "OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST")
    @WebResult(name = "OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_OutputMessage")
    public com.laegler.openbanking.soap.model.SearchforoneormoreresourcesusingHTTPPOSTResponse1 obAuthoritiesPOSTSearchforoneormoreresourcesusingHTTPPOST(

        @WebParam(partName = "OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", name = "OBAuthorities_POST_SearchforoneormoreresourcesusingHTTPPOST_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBAuthoritiesPOSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage obAuthoritiesPOSTSearchforoneormoreresourcesusingHTTPPOSTInputMessage
    ) throws OBAuthoritiesPOSTSearchforoneormoreresourcesusingHTTPPOSTDefault;

    /**
     * Get the given organisation's details
     */
    @WebMethod(operationName = "GET_Getthegivenorganisationsdetails", action = "GET_Getthegivenorganisationsdetails")
    @WebResult(name = "GET_Getthegivenorganisationsdetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Getthegivenorganisationsdetails_OutputMessage")
    public java.lang.Object getGetthegivenorganisationsdetails(

        @WebParam(partName = "GET_Getthegivenorganisationsdetails_InputMessage", name = "GET_Getthegivenorganisationsdetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetthegivenorganisationsdetailsInputMessage getGetthegivenorganisationsdetailsInputMessage
    ) throws GETGetthegivenorganisationsdetails406, GETGetthegivenorganisationsdetails404;

    /**
     * Get Funds Confirmation Consent
     */
    @WebMethod(operationName = "GET_GetFundsConfirmationConsentsConsentId", action = "GET_GetFundsConfirmationConsentsConsentId")
    @WebResult(name = "GET_GetFundsConfirmationConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetFundsConfirmationConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBFundsConfirmationConsentResponse1 getGetFundsConfirmationConsentsConsentId(

        @WebParam(partName = "GET_GetFundsConfirmationConsentsConsentId_InputMessage", name = "GET_GetFundsConfirmationConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetFundsConfirmationConsentsConsentIdInputMessage getGetFundsConfirmationConsentsConsentIdInputMessage
    ) throws GETGetFundsConfirmationConsentsConsentId400, GETGetFundsConfirmationConsentsConsentId401, GETGetFundsConfirmationConsentsConsentId500, GETGetFundsConfirmationConsentsConsentId403, GETGetFundsConfirmationConsentsConsentId404, GETGetFundsConfirmationConsentsConsentId405, GETGetFundsConfirmationConsentsConsentId406, GETGetFundsConfirmationConsentsConsentId429;

    /**
     * Get Statements
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdStatementsStatementIdFile", action = "GET_GetAccountsAccountIdStatementsStatementIdFile")
    @WebResult(name = "GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdStatementsStatementIdFile_OutputMessage")
    public java.lang.Object getGetAccountsAccountIdStatementsStatementIdFile(

        @WebParam(partName = "GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage", name = "GET_GetAccountsAccountIdStatementsStatementIdFile_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdStatementsStatementIdFileInputMessage getGetAccountsAccountIdStatementsStatementIdFileInputMessage
    ) throws GETGetAccountsAccountIdStatementsStatementIdFile429, GETGetAccountsAccountIdStatementsStatementIdFile406, GETGetAccountsAccountIdStatementsStatementIdFile405, GETGetAccountsAccountIdStatementsStatementIdFile404, GETGetAccountsAccountIdStatementsStatementIdFile403, GETGetAccountsAccountIdStatementsStatementIdFile401, GETGetAccountsAccountIdStatementsStatementIdFile500, GETGetAccountsAccountIdStatementsStatementIdFile400;

    /**
     * Update the business or the technical contacts for the given organisation
     */
    @WebMethod(operationName = "PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation", action = "PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation")
    @WebResult(name = "PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_OutputMessage")
    public java.lang.Object putUpdatethebusinessorthetechnicalcontactsforthegivenorganisation(

        @WebParam(partName = "PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage", name = "PUT_Updatethebusinessorthetechnicalcontactsforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTUpdatethebusinessorthetechnicalcontactsforthegivenorganisationInputMessage putUpdatethebusinessorthetechnicalcontactsforthegivenorganisationInputMessage
    ) throws PUTUpdatethebusinessorthetechnicalcontactsforthegivenorganisation400, PUTUpdatethebusinessorthetechnicalcontactsforthegivenorganisation401, PUTUpdatethebusinessorthetechnicalcontactsforthegivenorganisation500, PUTUpdatethebusinessorthetechnicalcontactsforthegivenorganisation406, PUTUpdatethebusinessorthetechnicalcontactsforthegivenorganisation502;

    /**
     * Get Scheduled Payments
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdScheduledPayments", action = "GET_GetAccountsAccountIdScheduledPayments")
    @WebResult(name = "GET_GetAccountsAccountIdScheduledPayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdScheduledPayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadScheduledPayment2 getGetAccountsAccountIdScheduledPayments(

        @WebParam(partName = "GET_GetAccountsAccountIdScheduledPayments_InputMessage", name = "GET_GetAccountsAccountIdScheduledPayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdScheduledPaymentsInputMessage getGetAccountsAccountIdScheduledPaymentsInputMessage
    ) throws GETGetAccountsAccountIdScheduledPayments404, GETGetAccountsAccountIdScheduledPayments405, GETGetAccountsAccountIdScheduledPayments403, GETGetAccountsAccountIdScheduledPayments400, GETGetAccountsAccountIdScheduledPayments401, GETGetAccountsAccountIdScheduledPayments500, GETGetAccountsAccountIdScheduledPayments406, GETGetAccountsAccountIdScheduledPayments429;

    /**
     * Get International Payment Consents
     */
    @WebMethod(operationName = "GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation", action = "GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation")
    @WebResult(name = "GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFundsConfirmationResponse1 getGetInternationalPaymentConsentsConsentIdFundsConfirmation(

        @WebParam(partName = "GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage", name = "GET_GetInternationalPaymentConsentsConsentIdFundsConfirmation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalPaymentConsentsConsentIdFundsConfirmationInputMessage getGetInternationalPaymentConsentsConsentIdFundsConfirmationInputMessage
    ) throws GETGetInternationalPaymentConsentsConsentIdFundsConfirmation406, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation405, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation404, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation403, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation401, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation500, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation400, GETGetInternationalPaymentConsentsConsentIdFundsConfirmation429;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails", action = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails")
    @WebResult(name = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails(

        @WebParam(partName = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage", name = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsInputMessage getGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsInputMessage
    ) throws GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails400, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails401, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails500, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails403, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails404, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails405, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails406, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails429;

    /**
     * Update a software statement
     */
    @WebMethod(operationName = "PUT_Updateasoftwarestatement", action = "PUT_Updateasoftwarestatement")
    @WebResult(name = "PUT_Updateasoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_Updateasoftwarestatement_OutputMessage")
    public java.lang.Object putUpdateasoftwarestatement(

        @WebParam(partName = "PUT_Updateasoftwarestatement_InputMessage", name = "PUT_Updateasoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTUpdateasoftwarestatementInputMessage putUpdateasoftwarestatementInputMessage
    ) throws PUTUpdateasoftwarestatement401, PUTUpdateasoftwarestatement500, PUTUpdateasoftwarestatement400, PUTUpdateasoftwarestatement406, PUTUpdateasoftwarestatement502, PUTUpdateasoftwarestatement404;

    /**
     * Store or create a new certificate of the given OrganisationCertificateType for the given organisation
     */
    @WebMethod(operationName = "POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation", action = "POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation")
    @WebResult(name = "POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_OutputMessage")
    public java.lang.Object postStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation(

        @WebParam(partName = "POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage", name = "POST_StoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisationInputMessage postStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisationInputMessage
    ) throws POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation406, POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation401, POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation500, POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation502, POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation404, POSTStoreorcreateanewcertificateofthegivenOrganisationCertificateTypeforthegivenorganisation400;

    /**
     * Create Funds Confirmation Consent
     */
    @WebMethod(operationName = "POST_CreateFundsConfirmationConsents", action = "POST_CreateFundsConfirmationConsents")
    @WebResult(name = "POST_CreateFundsConfirmationConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateFundsConfirmationConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBFundsConfirmationConsentResponse1 postCreateFundsConfirmationConsents(

        @WebParam(partName = "POST_CreateFundsConfirmationConsents_InputMessage", name = "POST_CreateFundsConfirmationConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateFundsConfirmationConsentsInputMessage postCreateFundsConfirmationConsentsInputMessage
    ) throws POSTCreateFundsConfirmationConsents404, POSTCreateFundsConfirmationConsents405, POSTCreateFundsConfirmationConsents403, POSTCreateFundsConfirmationConsents406, POSTCreateFundsConfirmationConsents429, POSTCreateFundsConfirmationConsents400, POSTCreateFundsConfirmationConsents401, POSTCreateFundsConfirmationConsents500;

    /**
     * Get Direct Debits
     */
    @WebMethod(operationName = "GET_GetDirectDebits", action = "GET_GetDirectDebits")
    @WebResult(name = "GET_GetDirectDebits_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDirectDebits_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadDirectDebit1 getGetDirectDebits(

        @WebParam(partName = "GET_GetDirectDebits_InputMessage", name = "GET_GetDirectDebits_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDirectDebitsInputMessage getGetDirectDebitsInputMessage
    ) throws GETGetDirectDebits400, GETGetDirectDebits401, GETGetDirectDebits500, GETGetDirectDebits403, GETGetDirectDebits404, GETGetDirectDebits405, GETGetDirectDebits406, GETGetDirectDebits429;

    /**
     * Delete a callback URI
     */
    @WebMethod(operationName = "DELETE_DeleteacallbackURI", action = "DELETE_DeleteacallbackURI")
    @WebResult(name = "DELETE_DeleteacallbackURI_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "DELETE_DeleteacallbackURI_OutputMessage")
    public java.lang.Object deleteDeleteacallbackURI(

        @WebParam(partName = "DELETE_DeleteacallbackURI_InputMessage", name = "DELETE_DeleteacallbackURI_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.DELETEDeleteacallbackURIInputMessage deleteDeleteacallbackURIInputMessage
    ) throws DELETEDeleteacallbackURI406, DELETEDeleteacallbackURI429, DELETEDeleteacallbackURI400, DELETEDeleteacallbackURI401, DELETEDeleteacallbackURI500, DELETEDeleteacallbackURI404, DELETEDeleteacallbackURI405, DELETEDeleteacallbackURI403;

    /**
     * Create Domestic Payment Consents
     */
    @WebMethod(operationName = "POST_CreateDomesticPaymentConsents", action = "POST_CreateDomesticPaymentConsents")
    @WebResult(name = "POST_CreateDomesticPaymentConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateDomesticPaymentConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticConsentResponse3 postCreateDomesticPaymentConsents(

        @WebParam(partName = "POST_CreateDomesticPaymentConsents_InputMessage", name = "POST_CreateDomesticPaymentConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateDomesticPaymentConsentsInputMessage postCreateDomesticPaymentConsentsInputMessage
    ) throws POSTCreateDomesticPaymentConsents401, POSTCreateDomesticPaymentConsents500, POSTCreateDomesticPaymentConsents403, POSTCreateDomesticPaymentConsents404, POSTCreateDomesticPaymentConsents400, POSTCreateDomesticPaymentConsents405, POSTCreateDomesticPaymentConsents406, POSTCreateDomesticPaymentConsents429;

    /**
     * Get Offers
     */
    @WebMethod(operationName = "GET_GetOffers", action = "GET_GetOffers")
    @WebResult(name = "GET_GetOffers_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetOffers_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadOffer1 getGetOffers(

        @WebParam(partName = "GET_GetOffers_InputMessage", name = "GET_GetOffers_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetOffersInputMessage getGetOffersInputMessage
    ) throws GETGetOffers403, GETGetOffers404, GETGetOffers405, GETGetOffers406, GETGetOffers400, GETGetOffers401, GETGetOffers500, GETGetOffers429;

    /**
     * Endpoint will be secured by way of Mutual Authentication over TLS
     */
    @WebMethod(operationName = "POST_RegisteraclientbywayofaSoftwareStatementAssertion", action = "POST_RegisteraclientbywayofaSoftwareStatementAssertion")
    @WebResult(name = "POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_RegisteraclientbywayofaSoftwareStatementAssertion_OutputMessage")
    public com.laegler.openbanking.soap.model.RegisteraclientbywayofaSoftwareStatementAssertionResponse postRegisteraclientbywayofaSoftwareStatementAssertion(

        @WebParam(partName = "POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage", name = "POST_RegisteraclientbywayofaSoftwareStatementAssertion_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTRegisteraclientbywayofaSoftwareStatementAssertionInputMessage postRegisteraclientbywayofaSoftwareStatementAssertionInputMessage
    ) throws POSTRegisteraclientbywayofaSoftwareStatementAssertion400;

    /**
     * Retrieve the resource
     */
    @WebMethod(operationName = "OBAuthorities_GET_Retrievetheresource", action = "OBAuthorities_GET_Retrievetheresource")
    @WebResult(name = "OBAuthorities_GET_Retrievetheresource_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBAuthorities_GET_Retrievetheresource_OutputMessage")
    public com.laegler.openbanking.soap.model.OBAuthorities obAuthoritiesGETRetrievetheresource(

        @WebParam(partName = "OBAuthorities_GET_Retrievetheresource_InputMessage", name = "OBAuthorities_GET_Retrievetheresource_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBAuthoritiesGETRetrievetheresourceInputMessage obAuthoritiesGETRetrievetheresourceInputMessage
    ) throws OBAuthoritiesGETRetrievetheresourceDefault;

    /**
     * Create File Payment Consents
     */
    @WebMethod(operationName = "POST_CreateFilePaymentConsentsConsentIdFile", action = "POST_CreateFilePaymentConsentsConsentIdFile")
    @WebResult(name = "POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateFilePaymentConsentsConsentIdFile_OutputMessage")
    public java.lang.Object postCreateFilePaymentConsentsConsentIdFile(

        @WebParam(partName = "POST_CreateFilePaymentConsentsConsentIdFile_InputMessage", name = "POST_CreateFilePaymentConsentsConsentIdFile_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateFilePaymentConsentsConsentIdFileInputMessage postCreateFilePaymentConsentsConsentIdFileInputMessage
    ) throws POSTCreateFilePaymentConsentsConsentIdFile400, POSTCreateFilePaymentConsentsConsentIdFile401, POSTCreateFilePaymentConsentsConsentIdFile500, POSTCreateFilePaymentConsentsConsentIdFile406, POSTCreateFilePaymentConsentsConsentIdFile429, POSTCreateFilePaymentConsentsConsentIdFile404, POSTCreateFilePaymentConsentsConsentIdFile405, POSTCreateFilePaymentConsentsConsentIdFile403;

    /**
     * Get Payment Details
     */
    @WebMethod(operationName = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails", action = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails")
    @WebResult(name = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWritePaymentDetailsResponse1 getGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails(

        @WebParam(partName = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage", name = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsInputMessage getGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsInputMessage
    ) throws GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails429, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails406, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails405, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails404, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails403, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails401, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails500, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails400;

    /**
     * Get Parties
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdParty", action = "GET_GetAccountsAccountIdParty")
    @WebResult(name = "GET_GetAccountsAccountIdParty_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdParty_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadParty2 getGetAccountsAccountIdParty(

        @WebParam(partName = "GET_GetAccountsAccountIdParty_InputMessage", name = "GET_GetAccountsAccountIdParty_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdPartyInputMessage getGetAccountsAccountIdPartyInputMessage
    ) throws GETGetAccountsAccountIdParty429, GETGetAccountsAccountIdParty406, GETGetAccountsAccountIdParty405, GETGetAccountsAccountIdParty404, GETGetAccountsAccountIdParty403, GETGetAccountsAccountIdParty401, GETGetAccountsAccountIdParty500, GETGetAccountsAccountIdParty400;

    /**
     * Get all Authorisation Servers for the given organisation
     */
    @WebMethod(operationName = "GET_GetallAuthorisationServersforthegivenorganisation", action = "GET_GetallAuthorisationServersforthegivenorganisation")
    @WebResult(name = "GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetallAuthorisationServersforthegivenorganisation_OutputMessage")
    public java.lang.Object getGetallAuthorisationServersforthegivenorganisation(

        @WebParam(partName = "GET_GetallAuthorisationServersforthegivenorganisation_InputMessage", name = "GET_GetallAuthorisationServersforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetallAuthorisationServersforthegivenorganisationInputMessage getGetallAuthorisationServersforthegivenorganisationInputMessage
    ) throws GETGetallAuthorisationServersforthegivenorganisation502, GETGetallAuthorisationServersforthegivenorganisation401, GETGetallAuthorisationServersforthegivenorganisation500, GETGetallAuthorisationServersforthegivenorganisation400, GETGetallAuthorisationServersforthegivenorganisation406, GETGetallAuthorisationServersforthegivenorganisation404;

    /**
     * Enrol an eIDAS QWAC/QSealC certificate-bearing participant onto the Open Banking Directory. Currenty only TPPs can use this enrolment endpoint, so please set `OrganisationType` to `tpp`
     */
    @WebMethod(operationName = "POST_EnrolaeIDASQWACQSealC-bearingparticipant", action = "POST_EnrolaeIDASQWACQSealC-bearingparticipant")
    @WebResult(name = "POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_EnrolaeIDASQWACQSealC-bearingparticipant_OutputMessage")
    public java.lang.Object postEnrolaeIDASQWACQSealCBearingparticipant(

        @WebParam(partName = "POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage", name = "POST_EnrolaeIDASQWACQSealC-bearingparticipant_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTEnrolaeIDASQWACQSealCBearingparticipantInputMessage postEnrolaeIDASQWACQSealCBearingparticipantInputMessage
    ) throws POSTEnrolaeIDASQWACQSealCBearingparticipant406, POSTEnrolaeIDASQWACQSealCBearingparticipant400, POSTEnrolaeIDASQWACQSealCBearingparticipant401, POSTEnrolaeIDASQWACQSealCBearingparticipant500, POSTEnrolaeIDASQWACQSealCBearingparticipant502;

    /**
     * Create an Authorisation Server for the given organisation
     */
    @WebMethod(operationName = "POST_CreateanAuthorisationServerforthegivenorganisation", action = "POST_CreateanAuthorisationServerforthegivenorganisation")
    @WebResult(name = "POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateanAuthorisationServerforthegivenorganisation_OutputMessage")
    public java.lang.Object postCreateanAuthorisationServerforthegivenorganisation(

        @WebParam(partName = "POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage", name = "POST_CreateanAuthorisationServerforthegivenorganisation_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateanAuthorisationServerforthegivenorganisationInputMessage postCreateanAuthorisationServerforthegivenorganisationInputMessage
    ) throws POSTCreateanAuthorisationServerforthegivenorganisation406, POSTCreateanAuthorisationServerforthegivenorganisation404, POSTCreateanAuthorisationServerforthegivenorganisation502, POSTCreateanAuthorisationServerforthegivenorganisation401, POSTCreateanAuthorisationServerforthegivenorganisation500, POSTCreateanAuthorisationServerforthegivenorganisation400;

    /**
     * Get Balances
     */
    @WebMethod(operationName = "GET_GetBalances", action = "GET_GetBalances")
    @WebResult(name = "GET_GetBalances_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetBalances_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadBalance1 getGetBalances(

        @WebParam(partName = "GET_GetBalances_InputMessage", name = "GET_GetBalances_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetBalancesInputMessage getGetBalancesInputMessage
    ) throws GETGetBalances404, GETGetBalances403, GETGetBalances406, GETGetBalances405, GETGetBalances400, GETGetBalances401, GETGetBalances500, GETGetBalances429;

    /**
     * Get International Scheduled Payment Consents
     */
    @WebMethod(operationName = "GET_GetInternationalScheduledPaymentConsentsConsentId", action = "GET_GetInternationalScheduledPaymentConsentsConsentId")
    @WebResult(name = "GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalScheduledPaymentConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalScheduledConsentResponse3 getGetInternationalScheduledPaymentConsentsConsentId(

        @WebParam(partName = "GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage", name = "GET_GetInternationalScheduledPaymentConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalScheduledPaymentConsentsConsentIdInputMessage getGetInternationalScheduledPaymentConsentsConsentIdInputMessage
    ) throws GETGetInternationalScheduledPaymentConsentsConsentId400, GETGetInternationalScheduledPaymentConsentsConsentId401, GETGetInternationalScheduledPaymentConsentsConsentId500, GETGetInternationalScheduledPaymentConsentsConsentId404, GETGetInternationalScheduledPaymentConsentsConsentId403, GETGetInternationalScheduledPaymentConsentsConsentId406, GETGetInternationalScheduledPaymentConsentsConsentId405, GETGetInternationalScheduledPaymentConsentsConsentId429;

    /**
     * Search for one or more resources
     */
    @WebMethod(operationName = "GET_Searchforoneormoreresources", action = "GET_Searchforoneormoreresources")
    @WebResult(name = "GET_Searchforoneormoreresources_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_Searchforoneormoreresources_OutputMessage")
    public com.laegler.openbanking.soap.model.SearchforoneormoreresourcesResponse2 getSearchforoneormoreresources(

        @WebParam(partName = "GET_Searchforoneormoreresources_InputMessage", name = "GET_Searchforoneormoreresources_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETSearchforoneormoreresourcesInputMessage getSearchforoneormoreresourcesInputMessage
    ) throws GETSearchforoneormoreresourcesDefault;

    /**
     * Get International Standing Orders
     */
    @WebMethod(operationName = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId", action = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId")
    @WebResult(name = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalStandingOrderResponse4 getGetInternationalStandingOrdersInternationalStandingOrderPaymentId(

        @WebParam(partName = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage", name = "GET_GetInternationalStandingOrdersInternationalStandingOrderPaymentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalStandingOrdersInternationalStandingOrderPaymentIdInputMessage getGetInternationalStandingOrdersInternationalStandingOrderPaymentIdInputMessage
    ) throws GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId403, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId401, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId500, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId400, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId429, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId406, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId405, GETGetInternationalStandingOrdersInternationalStandingOrderPaymentId404;

    /**
     * Get International Payments
     */
    @WebMethod(operationName = "GET_GetInternationalPaymentsInternationalPaymentId", action = "GET_GetInternationalPaymentsInternationalPaymentId")
    @WebResult(name = "GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalPaymentsInternationalPaymentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalResponse3 getGetInternationalPaymentsInternationalPaymentId(

        @WebParam(partName = "GET_GetInternationalPaymentsInternationalPaymentId_InputMessage", name = "GET_GetInternationalPaymentsInternationalPaymentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalPaymentsInternationalPaymentIdInputMessage getGetInternationalPaymentsInternationalPaymentIdInputMessage
    ) throws GETGetInternationalPaymentsInternationalPaymentId400, GETGetInternationalPaymentsInternationalPaymentId401, GETGetInternationalPaymentsInternationalPaymentId500, GETGetInternationalPaymentsInternationalPaymentId406, GETGetInternationalPaymentsInternationalPaymentId429, GETGetInternationalPaymentsInternationalPaymentId403, GETGetInternationalPaymentsInternationalPaymentId404, GETGetInternationalPaymentsInternationalPaymentId405;

    /**
     * Create File Payment Consents
     */
    @WebMethod(operationName = "POST_CreateFilePaymentConsents", action = "POST_CreateFilePaymentConsents")
    @WebResult(name = "POST_CreateFilePaymentConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateFilePaymentConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteFileConsentResponse3 postCreateFilePaymentConsents(

        @WebParam(partName = "POST_CreateFilePaymentConsents_InputMessage", name = "POST_CreateFilePaymentConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateFilePaymentConsentsInputMessage postCreateFilePaymentConsentsInputMessage
    ) throws POSTCreateFilePaymentConsents400, POSTCreateFilePaymentConsents401, POSTCreateFilePaymentConsents500, POSTCreateFilePaymentConsents404, POSTCreateFilePaymentConsents403, POSTCreateFilePaymentConsents406, POSTCreateFilePaymentConsents405, POSTCreateFilePaymentConsents429;

    /**
     * Send an event notification
     */
    @WebMethod(operationName = "POST_CreateEventNotification", action = "POST_CreateEventNotification")
    @WebResult(name = "POST_CreateEventNotification_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateEventNotification_OutputMessage")
    public java.lang.Object postCreateEventNotification(

        @WebParam(partName = "POST_CreateEventNotification_InputMessage", name = "POST_CreateEventNotification_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateEventNotificationInputMessage postCreateEventNotificationInputMessage
    );

    /**
     * Retrieve the resource
     */
    @WebMethod(operationName = "OBQualifiedTrustServiceProviders_GET_Retrievetheresource", action = "OBQualifiedTrustServiceProviders_GET_Retrievetheresource")
    @WebResult(name = "OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "OBQualifiedTrustServiceProviders_GET_Retrievetheresource_OutputMessage")
    public com.laegler.openbanking.soap.model.OBQualifiedTrustServiceProviders obQualifiedTrustServiceProvidersGETRetrievetheresource(

        @WebParam(partName = "OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage", name = "OBQualifiedTrustServiceProviders_GET_Retrievetheresource_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.OBQualifiedTrustServiceProvidersGETRetrievetheresourceInputMessage obQualifiedTrustServiceProvidersGETRetrievetheresourceInputMessage
    ) throws OBQualifiedTrustServiceProvidersGETRetrievetheresourceDefault;

    /**
     * Get International Scheduled Payments
     */
    @WebMethod(operationName = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId", action = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId")
    @WebResult(name = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalScheduledResponse3 getGetInternationalScheduledPaymentsInternationalScheduledPaymentId(

        @WebParam(partName = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage", name = "GET_GetInternationalScheduledPaymentsInternationalScheduledPaymentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetInternationalScheduledPaymentsInternationalScheduledPaymentIdInputMessage getGetInternationalScheduledPaymentsInternationalScheduledPaymentIdInputMessage
    ) throws GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId400, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId401, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId500, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId403, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId404, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId405, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId406, GETGetInternationalScheduledPaymentsInternationalScheduledPaymentId429;

    /**
     * Associate/de-associate a QSEAL/OBSEAL certificate with the given software statement
     */
    @WebMethod(operationName = "PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement", action = "PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement")
    @WebResult(name = "PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_OutputMessage")
    public java.lang.Object putAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement(

        @WebParam(partName = "PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage", name = "PUT_Associatede-associateaQSEALOBSEALcertificatewiththegivensoftwarestatement_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatementInputMessage putAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatementInputMessage
    ) throws PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement409, PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement406, PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement404, PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement502, PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement401, PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement500, PUTAssociatedeAssociateaQSEALOBSEALcertificatewiththegivensoftwarestatement400;

    /**
     * Get Transactions
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdStatementsStatementIdTransactions", action = "GET_GetAccountsAccountIdStatementsStatementIdTransactions")
    @WebResult(name = "GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdStatementsStatementIdTransactions_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadTransaction4 getGetAccountsAccountIdStatementsStatementIdTransactions(

        @WebParam(partName = "GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage", name = "GET_GetAccountsAccountIdStatementsStatementIdTransactions_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdStatementsStatementIdTransactionsInputMessage getGetAccountsAccountIdStatementsStatementIdTransactionsInputMessage
    ) throws GETGetAccountsAccountIdStatementsStatementIdTransactions429, GETGetAccountsAccountIdStatementsStatementIdTransactions406, GETGetAccountsAccountIdStatementsStatementIdTransactions405, GETGetAccountsAccountIdStatementsStatementIdTransactions404, GETGetAccountsAccountIdStatementsStatementIdTransactions403, GETGetAccountsAccountIdStatementsStatementIdTransactions401, GETGetAccountsAccountIdStatementsStatementIdTransactions500, GETGetAccountsAccountIdStatementsStatementIdTransactions400;

    /**
     * Update .well-known entity
     */
    @WebMethod(operationName = "PUT_Update.well-knownentity", action = "PUT_Update.well-knownentity")
    @WebResult(name = "PUT_Update.well-knownentity_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "PUT_Update.well-knownentity_OutputMessage")
    public java.lang.Object putUpdateWellKnownentity(

        @WebParam(partName = "PUT_Update.well-knownentity_InputMessage", name = "PUT_Update.well-knownentity_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.PUTUpdateWellKnownentityInputMessage putUpdateWellKnownentityInputMessage
    ) throws PUTUpdateWellKnownentity406, PUTUpdateWellKnownentity502, PUTUpdateWellKnownentity404, PUTUpdateWellKnownentity401, PUTUpdateWellKnownentity500, PUTUpdateWellKnownentity400;

    /**
     * Get Domestic Standing Order Consents
     */
    @WebMethod(operationName = "GET_GetDomesticStandingOrderConsentsConsentId", action = "GET_GetDomesticStandingOrderConsentsConsentId")
    @WebResult(name = "GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticStandingOrderConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticStandingOrderConsentResponse4 getGetDomesticStandingOrderConsentsConsentId(

        @WebParam(partName = "GET_GetDomesticStandingOrderConsentsConsentId_InputMessage", name = "GET_GetDomesticStandingOrderConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticStandingOrderConsentsConsentIdInputMessage getGetDomesticStandingOrderConsentsConsentIdInputMessage
    ) throws GETGetDomesticStandingOrderConsentsConsentId406, GETGetDomesticStandingOrderConsentsConsentId429, GETGetDomesticStandingOrderConsentsConsentId400, GETGetDomesticStandingOrderConsentsConsentId401, GETGetDomesticStandingOrderConsentsConsentId500, GETGetDomesticStandingOrderConsentsConsentId404, GETGetDomesticStandingOrderConsentsConsentId405, GETGetDomesticStandingOrderConsentsConsentId403;

    /**
     * Read all callback URLs
     */
    @WebMethod(operationName = "GET_ReadallcallbackURLs", action = "GET_ReadallcallbackURLs")
    @WebResult(name = "GET_ReadallcallbackURLs_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_ReadallcallbackURLs_OutputMessage")
    public com.laegler.openbanking.soap.model.OBCallbackUrlsResponse1 getReadallcallbackURLs(

        @WebParam(partName = "GET_ReadallcallbackURLs_InputMessage", name = "GET_ReadallcallbackURLs_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETReadallcallbackURLsInputMessage getReadallcallbackURLsInputMessage
    ) throws GETReadallcallbackURLs404, GETReadallcallbackURLs405, GETReadallcallbackURLs406, GETReadallcallbackURLs429, GETReadallcallbackURLs400, GETReadallcallbackURLs401, GETReadallcallbackURLs500, GETReadallcallbackURLs403;

    /**
     * Create International Scheduled Payment Consents
     */
    @WebMethod(operationName = "POST_CreateInternationalScheduledPaymentConsents", action = "POST_CreateInternationalScheduledPaymentConsents")
    @WebResult(name = "POST_CreateInternationalScheduledPaymentConsents_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateInternationalScheduledPaymentConsents_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteInternationalScheduledConsentResponse3 postCreateInternationalScheduledPaymentConsents(

        @WebParam(partName = "POST_CreateInternationalScheduledPaymentConsents_InputMessage", name = "POST_CreateInternationalScheduledPaymentConsents_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateInternationalScheduledPaymentConsentsInputMessage postCreateInternationalScheduledPaymentConsentsInputMessage
    ) throws POSTCreateInternationalScheduledPaymentConsents400, POSTCreateInternationalScheduledPaymentConsents401, POSTCreateInternationalScheduledPaymentConsents500, POSTCreateInternationalScheduledPaymentConsents404, POSTCreateInternationalScheduledPaymentConsents405, POSTCreateInternationalScheduledPaymentConsents403, POSTCreateInternationalScheduledPaymentConsents406, POSTCreateInternationalScheduledPaymentConsents429;

    /**
     * Get Products
     */
    @WebMethod(operationName = "GET_GetProducts", action = "GET_GetProducts")
    @WebResult(name = "GET_GetProducts_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetProducts_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadProduct2 getGetProducts(

        @WebParam(partName = "GET_GetProducts_InputMessage", name = "GET_GetProducts_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetProductsInputMessage getGetProductsInputMessage
    ) throws GETGetProducts406, GETGetProducts429, GETGetProducts404, GETGetProducts405, GETGetProducts403, GETGetProducts400, GETGetProducts500, GETGetProducts401;

    /**
     * Create Domestic Payments
     */
    @WebMethod(operationName = "POST_CreateDomesticPayments", action = "POST_CreateDomesticPayments")
    @WebResult(name = "POST_CreateDomesticPayments_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "POST_CreateDomesticPayments_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticResponse3 postCreateDomesticPayments(

        @WebParam(partName = "POST_CreateDomesticPayments_InputMessage", name = "POST_CreateDomesticPayments_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.POSTCreateDomesticPaymentsInputMessage postCreateDomesticPaymentsInputMessage
    ) throws POSTCreateDomesticPayments400, POSTCreateDomesticPayments401, POSTCreateDomesticPayments500, POSTCreateDomesticPayments403, POSTCreateDomesticPayments404, POSTCreateDomesticPayments405, POSTCreateDomesticPayments406, POSTCreateDomesticPayments429;

    /**
     * Get Domestic Standing Orders
     */
    @WebMethod(operationName = "GET_GetDomesticStandingOrdersDomesticStandingOrderId", action = "GET_GetDomesticStandingOrdersDomesticStandingOrderId")
    @WebResult(name = "GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticStandingOrdersDomesticStandingOrderId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticStandingOrderResponse4 getGetDomesticStandingOrdersDomesticStandingOrderId(

        @WebParam(partName = "GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage", name = "GET_GetDomesticStandingOrdersDomesticStandingOrderId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticStandingOrdersDomesticStandingOrderIdInputMessage getGetDomesticStandingOrdersDomesticStandingOrderIdInputMessage
    ) throws GETGetDomesticStandingOrdersDomesticStandingOrderId401, GETGetDomesticStandingOrdersDomesticStandingOrderId500, GETGetDomesticStandingOrdersDomesticStandingOrderId400, GETGetDomesticStandingOrdersDomesticStandingOrderId403, GETGetDomesticStandingOrdersDomesticStandingOrderId405, GETGetDomesticStandingOrdersDomesticStandingOrderId404, GETGetDomesticStandingOrdersDomesticStandingOrderId429, GETGetDomesticStandingOrdersDomesticStandingOrderId406;

    /**
     * Get Transactions
     */
    @WebMethod(operationName = "GET_GetTransactions", action = "GET_GetTransactions")
    @WebResult(name = "GET_GetTransactions_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetTransactions_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadTransaction4 getGetTransactions(

        @WebParam(partName = "GET_GetTransactions_InputMessage", name = "GET_GetTransactions_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetTransactionsInputMessage getGetTransactionsInputMessage
    ) throws GETGetTransactions429, GETGetTransactions405, GETGetTransactions406, GETGetTransactions403, GETGetTransactions404, GETGetTransactions401, GETGetTransactions500, GETGetTransactions400;

    /**
     * Get Domestic Payment Consents
     */
    @WebMethod(operationName = "GET_GetDomesticPaymentConsentsConsentId", action = "GET_GetDomesticPaymentConsentsConsentId")
    @WebResult(name = "GET_GetDomesticPaymentConsentsConsentId_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetDomesticPaymentConsentsConsentId_OutputMessage")
    public com.laegler.openbanking.soap.model.OBWriteDomesticConsentResponse3 getGetDomesticPaymentConsentsConsentId(

        @WebParam(partName = "GET_GetDomesticPaymentConsentsConsentId_InputMessage", name = "GET_GetDomesticPaymentConsentsConsentId_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetDomesticPaymentConsentsConsentIdInputMessage getGetDomesticPaymentConsentsConsentIdInputMessage
    ) throws GETGetDomesticPaymentConsentsConsentId404, GETGetDomesticPaymentConsentsConsentId405, GETGetDomesticPaymentConsentsConsentId403, GETGetDomesticPaymentConsentsConsentId406, GETGetDomesticPaymentConsentsConsentId429, GETGetDomesticPaymentConsentsConsentId400, GETGetDomesticPaymentConsentsConsentId401, GETGetDomesticPaymentConsentsConsentId500;

    /**
     * Get Direct Debits
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdDirectDebits", action = "GET_GetAccountsAccountIdDirectDebits")
    @WebResult(name = "GET_GetAccountsAccountIdDirectDebits_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdDirectDebits_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadDirectDebit1 getGetAccountsAccountIdDirectDebits(

        @WebParam(partName = "GET_GetAccountsAccountIdDirectDebits_InputMessage", name = "GET_GetAccountsAccountIdDirectDebits_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdDirectDebitsInputMessage getGetAccountsAccountIdDirectDebitsInputMessage
    ) throws GETGetAccountsAccountIdDirectDebits429, GETGetAccountsAccountIdDirectDebits406, GETGetAccountsAccountIdDirectDebits405, GETGetAccountsAccountIdDirectDebits404, GETGetAccountsAccountIdDirectDebits403, GETGetAccountsAccountIdDirectDebits401, GETGetAccountsAccountIdDirectDebits500, GETGetAccountsAccountIdDirectDebits400;

    /**
     * Get Products
     */
    @WebMethod(operationName = "GET_GetAccountsAccountIdProduct", action = "GET_GetAccountsAccountIdProduct")
    @WebResult(name = "GET_GetAccountsAccountIdProduct_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccountsAccountIdProduct_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadProduct2 getGetAccountsAccountIdProduct(

        @WebParam(partName = "GET_GetAccountsAccountIdProduct_InputMessage", name = "GET_GetAccountsAccountIdProduct_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsAccountIdProductInputMessage getGetAccountsAccountIdProductInputMessage
    ) throws GETGetAccountsAccountIdProduct405, GETGetAccountsAccountIdProduct406, GETGetAccountsAccountIdProduct429, GETGetAccountsAccountIdProduct401, GETGetAccountsAccountIdProduct500, GETGetAccountsAccountIdProduct403, GETGetAccountsAccountIdProduct404, GETGetAccountsAccountIdProduct400;

    /**
     * Get Accounts
     */
    @WebMethod(operationName = "GET_GetAccounts", action = "GET_GetAccounts")
    @WebResult(name = "GET_GetAccounts_OutputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model", partName = "GET_GetAccounts_OutputMessage")
    public com.laegler.openbanking.soap.model.OBReadAccount4 getGetAccounts(

        @WebParam(partName = "GET_GetAccounts_InputMessage", name = "GET_GetAccounts_InputMessage", targetNamespace = "http://laegler.com/openbanking/soap/model")
        com.laegler.openbanking.soap.model.GETGetAccountsInputMessage getGetAccountsInputMessage
    ) throws GETGetAccounts403, GETGetAccounts401, GETGetAccounts500, GETGetAccounts400, GETGetAccounts429, GETGetAccounts406, GETGetAccounts405, GETGetAccounts404;
}
